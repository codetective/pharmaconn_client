{"version":3,"sources":["contexts/QuestionProvider.js","config.js","contexts/SpaceProvider.js","contexts/TopicProvider.js","setAuthToken.js","contexts/AuthProvider.js","components/Auth/Login.jsx","components/Auth/Signup.jsx","img/landing2.jpg","img/logo2.png","components/Auth/VerifyAccount.jsx","components/Layout/NotFound.jsx","components/Auth/Landing.jsx","img/logo1.png","components/Layout/Navbar.jsx","components/Question/AskModal.jsx","components/Answer/Editor.jsx","socket.js","components/Answer/SingleAnswer.jsx","components/Answer/Answers.jsx","components/Layout/PageLoader.jsx","components/Question/Editor.jsx","components/Question/SingleQuestion.jsx","components/Question/Questions.jsx","components/Question/AskBar.jsx","components/Spaces/AddSpaceModal.jsx","components/Spaces/SingleSpace.jsx","components/Spaces/Spaces.jsx","components/Topics/AddTopicModal.jsx","components/Topics/SingleTopic.jsx","components/Topics/Topics.jsx","components/Layout/Home.jsx","components/Layout/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["QCtx","React","createContext","useQuestion","useContext","QuestionProvider","children","useDisclosure","isOpen","onOpen","onClose","useState","recentQ","setRecentQ","Provider","value","BASE_URL","BASE_API_URL","SCtx","useSpace","SpaceProvider","toast","useToast","spaces","setSpaces","error","setError","loading","setLoading","creating","setCreating","similarSpace","setSimilar","getSpaces","useCallback","Axios","get","then","response","data","catch","title","status","duration","isClosable","message","createSpace","spaceName","spaceDesc","post","description","space","TCtx","useTopic","TopicProvider","topics","setTopics","similarTopic","getTopics","console","log","createTopic","topicName","topicDesc","topic","setAuthToken","token","axios","defaults","headers","common","AuthCtx","useAuth","AuthProvider","isUnv","setUnv","isAuth","setIsAuth","isOnline","setOnline","user","setUser","registrationIsComplete","setRegComplete","useEffect","checkAuth","setAuth","localStorage","setItem","JSON","stringify","parse","getItem","decoded","jwt_decode","currentTime","Date","now","exp","removeItem","login","values","email","cogoToast","password","logout","register","name","firstname","lastname","gender","password2","confirmpassword","request","Login","initialFocusRef","useRef","show","setShow","requesting","setRequesting","handleClick","initialValues","onSubmit","setSubmitting","validationSchema","Yup","shape","required","min","props","touched","errors","handleChange","handleBlur","handleSubmit","isValid","Flex","width","align","justifyContent","Box","my","textAlign","maxWidth","noValidate","FormControl","isRequired","Popover","placement","closeOnBlur","FormLabel","Input","autoFocus","type","placeholder","onChange","onBlur","isInvalid","errorBorderColor","zIndex","color","bg","borderColor","pt","fontWeight","border","onClick","d","alignItems","pb","ButtonGroup","size","Button","variantColor","success","ref","CircularProgress","mt","InputGroup","pr","h","disabled","_hover","isIndeterminate","Text","style","to","Signup","nullable","oneOf","RadioGroup","isInline","Radio","FormHelperText","id","Alert","variant","flexDirection","height","mr","mb","fontSize","className","VerifyAccount","isVerified","setVerified","isError","isLoading","setMessage","query","URLSearchParams","useLocation","search","verify","position","minHeight","display","ml","NotFound","Landing","pathname","overflowY","w","p","top","left","base","md","Image","src","logo2","landingImg","objectFit","exact","path","Navbar","colorMode","useColorMode","overflow","boxShadow","background","padding","lg","px","logo1","alt","paddingLeft","htmlFor","Icon","textTransform","Tooltip","hasArrow","label","IconButton","aria-label","icon","mx","Badge","Avatar","profileurl","Stack","as","MdHome","Menu","minH","cursor","Divider","AskModal","step","setStep","question","setQuestion","setTitle","setDescription","selectedtopics","setSelected","submitting","handleToggle","cf","current","autosize","destroy","event","target","checked","indexOf","prev","s","splice","fetchTopics","submitTopic","undefined","submitQuestion","nextStep","toString","includes","prevStep","in","styles","Modal","isCentered","scrollBehavior","closeOnOverlayClick","borderRadius","marginBottom","listStyle","marginLeft","Textarea","transition","autocomplete","e","Skeleton","map","Checkbox","isFullWidth","_id","Collapse","isDisabled","length","Editor","theme","readOnly","socket","io","SingleAnswer","answer","ans","setAns","upvotes","upvs","setUpvs","dwvs","setDwvs","serializeVotes","votes","setter","vbx","v","push","downvotes","on","res","div","initial","opacity","animate","exit","slug","py","flexWrap","t","marginY","date","createdAt","a_id","emit","answerId","userId","marginRight","comments","Answers","feed","setFeed","getFeed","topicAnswers","fd","PageLoader","isSubmitting","editorHtml","setHtml","modules","formats","toolbar","header","list","clipboard","matchVisual","SingleQuestion","reload","q","setQ","isAnswering","setAnswering","answers","followers","q_id","questionId","marginTop","fallback","qid","Question","qs","setQs","getQuestions","questions","AskBar","textDecoration","right","require","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","AddSpceModal","setName","setDesc","initialRef","members","posts","SingleSpace","Spaces","SingleTopic","tpc","setTpc","updatedAt","locale","t_id","topicId","Topics","Home","setTimeout","margin","paddingX","paddingY","List","borderLeft","activeStyle","maxW","Questions","Main","ThemeToggler","toggleColorMode","bottom","App","setUserOffline","disconnected","connected","ThemeProvider","ColorModeProvider","CSSReset","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TimeAgo","addDefaultLocale","en","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.842c070a.chunk.js","sourcesContent":["import { useDisclosure } from \"@chakra-ui/core\";\r\nimport React, { useContext } from \"react\";\r\n\r\nconst QCtx = React.createContext();\r\nexport default function useQuestion() {\r\n  return useContext(QCtx);\r\n}\r\n\r\nexport const QuestionProvider = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [recentQ, setRecentQ] = React.useState(null);\r\n\r\n  return (\r\n    <QCtx.Provider\r\n      value={{\r\n        isOpen,\r\n        onOpen,\r\n        onClose,\r\n        recentQ,\r\n        setRecentQ,\r\n      }}\r\n    >\r\n      {children}\r\n    </QCtx.Provider>\r\n  );\r\n};\r\n","// export const BASE_API_URL = \"http://localhost:8000/api\";\r\nexport const BASE_URL = \"https://pharmaconn.herokuapp.com\";\r\nexport const BASE_API_URL = BASE_URL + \"/api\";\r\n","import { useDisclosure, useToast } from \"@chakra-ui/core\";\r\nimport React, { useCallback, useContext, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { BASE_API_URL } from \"../config\";\r\n\r\nconst SCtx = React.createContext();\r\nexport default function useSpace() {\r\n  return useContext(SCtx);\r\n}\r\n\r\nexport const SpaceProvider = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n  const [spaces, setSpaces] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [creating, setCreating] = useState(false);\r\n  const [similarSpace, setSimilar] = useState(null);\r\n\r\n  const getSpaces = useCallback(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    Axios.get(BASE_API_URL + \"/spaces\")\r\n      .then((response) => {\r\n        setSpaces(response.data.spaces);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  const createSpace = (spaceName, spaceDesc) => {\r\n    setCreating(true);\r\n    setError(false);\r\n    Axios.post(BASE_API_URL + \"/spaces\", {\r\n      title: spaceName,\r\n      description: spaceDesc,\r\n    })\r\n      .then((response) => {\r\n        setCreating(false);\r\n        if (response.data.error && response.data.space) {\r\n          setSimilar(response.data);\r\n        } else {\r\n          getSpaces();\r\n          toast({\r\n            title: \"Space created\",\r\n            status: \"info\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          onClose();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        setCreating(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <SCtx.Provider\r\n      value={{\r\n        isOpen,\r\n        onOpen,\r\n        onClose,\r\n        spaces,\r\n        error,\r\n        loading,\r\n        getSpaces,\r\n        createSpace,\r\n        creating,\r\n        similarSpace,\r\n        setSimilar,\r\n      }}\r\n    >\r\n      {children}\r\n    </SCtx.Provider>\r\n  );\r\n};\r\n","import { useDisclosure, useToast } from \"@chakra-ui/core\";\r\nimport React, { useCallback, useContext, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { BASE_API_URL } from \"../config\";\r\n\r\nconst TCtx = React.createContext();\r\nexport default function useTopic() {\r\n  return useContext(TCtx);\r\n}\r\n\r\nexport const TopicProvider = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n  const [topics, setTopics] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [creating, setCreating] = useState(false);\r\n  const [similarTopic, setSimilar] = useState(null);\r\n\r\n  const getTopics = useCallback(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    Axios.get(BASE_API_URL + \"/topics\")\r\n      .then((response) => {\r\n        console.log(response.data.topics);\r\n        setTopics(response.data.topics);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  const createTopic = (topicName, topicDesc) => {\r\n    setCreating(true);\r\n    setError(false);\r\n    Axios.post(BASE_API_URL + \"/topics\", {\r\n      title: topicName,\r\n      description: topicDesc,\r\n    })\r\n      .then((response) => {\r\n        setCreating(false);\r\n        if (response.data.error && response.data.topic) {\r\n          setSimilar(response.data);\r\n        } else {\r\n          getTopics();\r\n          toast({\r\n            title: \"Topic created\",\r\n            status: \"info\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n          onClose();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        setCreating(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <TCtx.Provider\r\n      value={{\r\n        isOpen,\r\n        onOpen,\r\n        onClose,\r\n        topics,\r\n        error,\r\n        loading,\r\n        getTopics,\r\n        createTopic,\r\n        creating,\r\n        similarTopic,\r\n        setSimilar,\r\n      }}\r\n    >\r\n      {children}\r\n    </TCtx.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport { BASE_API_URL } from \"../config\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"../setAuthToken\";\r\n\r\nconst AuthCtx = React.createContext();\r\nexport function useAuth() {\r\n  return useContext(AuthCtx);\r\n}\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [isUnv, setUnv] = useState(false);\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [isOnline, setOnline] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [registrationIsComplete, setRegComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n    //eslint-disable-next-line\r\n  }, [isAuth]);\r\n\r\n  //setAuth\r\n  let setAuth = (token) => {\r\n    setLoading(false);\r\n    localStorage.setItem(\"pharmaconnjwts\", JSON.stringify(token));\r\n    setAuthToken(token);\r\n    setIsAuth(true);\r\n  };\r\n\r\n  // login\r\n  let login = (values) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(BASE_API_URL + \"/users/login\", values)\r\n      .then((response) => {\r\n        const { token } = response.data;\r\n        setAuth(token);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n\r\n        if (error.response && error.response.data.email) {\r\n          cogoToast.error(error.response.data.email);\r\n        } else if (error.response && error.response.data.password) {\r\n          cogoToast.error(error.response.data.password);\r\n        } else if (error.response && error.response.data.error) {\r\n          setUnv(true);\r\n        } else {\r\n          cogoToast.error(error.message);\r\n        }\r\n      });\r\n  };\r\n  // register\r\n  let register = (values) => {\r\n    setLoading(true);\r\n    let data = {\r\n      name: values.firstname + \" \" + values.lastname,\r\n      email: values.email,\r\n      gender: values.gender,\r\n      password: values.password,\r\n      password2: values.confirmpassword,\r\n    };\r\n    axios\r\n      .post(BASE_API_URL + \"/users/register\", data)\r\n      .then((response) => {\r\n        setRegComplete(true);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        if (error.response && error.response.data.email) {\r\n          cogoToast.error(error.response.data.email);\r\n        } else if (error.request) {\r\n          cogoToast.error(error.request);\r\n        } else {\r\n          cogoToast.error(error.message);\r\n        }\r\n      });\r\n  };\r\n  //check logged in user\r\n  let checkAuth = () => {\r\n    let token = JSON.parse(localStorage.getItem(\"pharmaconnjwts\"));\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      const currentTime = Date.now() / 1000;\r\n\r\n      if (decoded.exp < currentTime) {\r\n        localStorage.removeItem(\"pharmaconnjwts\");\r\n        checkAuth();\r\n      } else {\r\n        setIsAuth(true);\r\n        setAuthToken(token);\r\n        setUser(decoded);\r\n      }\r\n    } else {\r\n      setIsAuth(false);\r\n    }\r\n  };\r\n  const logout = () => {\r\n    localStorage.removeItem(\"pharmaconnjwts\");\r\n    checkAuth();\r\n  };\r\n  return (\r\n    <AuthCtx.Provider\r\n      value={{\r\n        isAuth,\r\n\r\n        registrationIsComplete,\r\n        loading,\r\n        setLoading,\r\n        login,\r\n        logout,\r\n        register,\r\n        isUnv,\r\n        setUnv,\r\n        setAuth,\r\n        user,\r\n        setUser,\r\n        isOnline,\r\n        setOnline,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthCtx.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import {\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Text,\r\n  Box,\r\n  InputGroup,\r\n  InputRightElement,\r\n  CircularProgress,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  ButtonGroup,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport { useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { BASE_API_URL } from \"../../config\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\n\r\nfunction Login() {\r\n  const initialFocusRef = useRef();\r\n\r\n  const { login, loading, isUnv, setUnv } = useAuth();\r\n  const [show, setShow] = useState(false);\r\n  const [requesting, setRequesting] = useState(false);\r\n  const toast = useToast();\r\n  const handleClick = () => setShow(!show);\r\n\r\n  let handleMailRequest = (email) => {\r\n    setRequesting(true);\r\n    Axios.post(BASE_API_URL + \"/users/verifymailrequest\", { email: email })\r\n      .then((response) => {\r\n        setUnv(false);\r\n        toast({\r\n          title: response.data.success,\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n        setRequesting(false);\r\n      })\r\n      .catch(function (error) {\r\n        setRequesting(false);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        } else if (error.request) {\r\n          toast({\r\n            title: error.request,\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        } else {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n\r\n        password: \"\",\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        login(values);\r\n        setSubmitting(false);\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isValid,\r\n        } = props;\r\n        return (\r\n          <Flex width=\"full\" align=\"left\" justifyContent=\"left\">\r\n            <Box\r\n              my={4}\r\n              textAlign=\"left\"\r\n              width={[\"80%\", \"60%\", \"80%\", \"70%\"]}\r\n              maxWidth=\"400px\"\r\n            >\r\n              <form noValidate onSubmit={handleSubmit}>\r\n                <FormControl isRequired>\r\n                  <Popover\r\n                    initialFocusRef={initialFocusRef}\r\n                    placement=\"bottom\"\r\n                    closeOnBlur={false}\r\n                    isOpen={isUnv}\r\n                  >\r\n                    <FormLabel>Email</FormLabel>\r\n                    <PopoverTrigger>\r\n                      <Input\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        placeholder=\"test@test.com\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                        name=\"email\"\r\n                        isInvalid={errors.email && touched.email}\r\n                        errorBorderColor=\"crimson\"\r\n                        isRequired\r\n                      />\r\n                    </PopoverTrigger>\r\n                    <PopoverContent\r\n                      zIndex={4}\r\n                      color=\"white\"\r\n                      bg=\"blue.800\"\r\n                      borderColor=\"blue.800\"\r\n                    >\r\n                      <PopoverHeader\r\n                        pt={4}\r\n                        fontWeight=\"bold\"\r\n                        border=\"0\"\r\n                        color=\"crimson\"\r\n                      >\r\n                        Email Unverified!\r\n                      </PopoverHeader>\r\n                      <PopoverArrow />\r\n                      <PopoverCloseButton\r\n                        onClick={() => {\r\n                          setUnv(false);\r\n                        }}\r\n                      />\r\n                      <PopoverBody>\r\n                        This email : {values.email} is unverified. Click the\r\n                        button to request a verification mail.\r\n                      </PopoverBody>\r\n                      <PopoverFooter\r\n                        border=\"0\"\r\n                        d=\"flex\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"flex-end\"\r\n                        pb={4}\r\n                      >\r\n                        <ButtonGroup size=\"sm\">\r\n                          <Button\r\n                            variantColor=\"blue\"\r\n                            onClick={() => {\r\n                              handleMailRequest(values.email);\r\n                            }}\r\n                            ref={initialFocusRef}\r\n                          >\r\n                            {!requesting && \"Request mail\"}\r\n                            {requesting && (\r\n                              <CircularProgress color=\"green\" size=\"20px\" />\r\n                            )}\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      </PopoverFooter>\r\n                    </PopoverContent>\r\n                  </Popover>\r\n                </FormControl>\r\n                <FormControl mt={6} isRequired>\r\n                  <FormLabel>Password</FormLabel>\r\n                  <InputGroup size=\"md\">\r\n                    <Input\r\n                      errorBorderColor=\"crimson\"\r\n                      isInvalid={errors.password && touched.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      name=\"password\"\r\n                      pr=\"4.5rem\"\r\n                      type={show ? \"text\" : \"password\"}\r\n                      placeholder=\"Enter password\"\r\n                    />\r\n                    <InputRightElement width=\"4.5rem\">\r\n                      <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                        {show ? \"Hide\" : \"Show\"}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <Button\r\n                  width=\"full\"\r\n                  mt={4}\r\n                  type=\"submit\"\r\n                  disabled={!isValid || loading}\r\n                  _hover={{ borderColor: \"gray.200\", bg: \"blue.900\" }}\r\n                >\r\n                  {!loading && \"Sign In\"}\r\n                  {loading && (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"38px\"\r\n                      color=\"green\"\r\n                    ></CircularProgress>\r\n                  )}\r\n                </Button>\r\n              </form>\r\n              <Text>\r\n                Don't have an account?{\" \"}\r\n                <span>\r\n                  <Link style={{ color: \"blue\" }} to=\"/signup\">\r\n                    Sign up here.\r\n                  </Link>\r\n                </span>\r\n              </Text>\r\n            </Box>\r\n          </Flex>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import {\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Text,\r\n  Box,\r\n  InputGroup,\r\n  InputRightElement,\r\n  CircularProgress,\r\n  FormHelperText,\r\n  RadioGroup,\r\n  Radio,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n} from \"@chakra-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\n\r\nfunction Signup() {\r\n  const { register, loading, isAuth, registrationIsComplete } = useAuth();\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  if (isAuth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <>\r\n      {!registrationIsComplete && (\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            password: \"\",\r\n            gender: \"\",\r\n            confirmpassword: \"\",\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            register(values);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            firstname: Yup.string().required(\"First Name is required\"),\r\n            gender: Yup.string().nullable().required(\"Gender is required\"),\r\n            lastname: Yup.string().required(\"Last Name is required\"),\r\n            email: Yup.string()\r\n              .email(\"Email is invalid\")\r\n              .required(\"Email is required\"),\r\n            password: Yup.string()\r\n              .min(6, \"Password must be at least 6 characters\")\r\n              .required(\"Password is required\"),\r\n            confirmpassword: Yup.string()\r\n              .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n              .required(\"Password confirmation is required\"),\r\n          })}\r\n        >\r\n          {(props) => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isValid,\r\n            } = props;\r\n            return (\r\n              <Flex width=\"full\" align=\"left\" justifyContent=\"left\">\r\n                <Box\r\n                  my={4}\r\n                  textAlign=\"left\"\r\n                  width={[\"80%\", \"60%\", \"80%\", \"70%\"]}\r\n                  maxWidth=\"400px\"\r\n                >\r\n                  <form noValidate onSubmit={handleSubmit}>\r\n                    <FormControl isRequired>\r\n                      <FormLabel>First Name</FormLabel>\r\n                      <Input\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        placeholder=\"eg. John\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.firstname}\r\n                        name=\"firstname\"\r\n                        isInvalid={errors.firstname && touched.firstname}\r\n                        errorBorderColor=\"crimson\"\r\n                        isRequired\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl isRequired mt={4}>\r\n                      <FormLabel>Last Name</FormLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"eg. Doe\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.lastname}\r\n                        name=\"lastname\"\r\n                        isInvalid={errors.lastname && touched.lastname}\r\n                        errorBorderColor=\"crimson\"\r\n                        isRequired\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl mt={4} isRequired>\r\n                      <FormLabel>Email</FormLabel>\r\n                      <Input\r\n                        type=\"email\"\r\n                        placeholder=\"test@test.com\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                        name=\"email\"\r\n                        isInvalid={errors.email && touched.email}\r\n                        errorBorderColor=\"crimson\"\r\n                        isRequired\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl isRequired mt={4}>\r\n                      <FormLabel>Select gender</FormLabel>\r\n\r\n                      <RadioGroup\r\n                        isInline\r\n                        name=\"gender\"\r\n                        onChange={handleChange}\r\n                        value={values.gender}\r\n                      >\r\n                        <Radio value=\"male\">Male</Radio>\r\n                        <Radio value=\"female\">Female</Radio>\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl mt={4} isRequired>\r\n                      <FormLabel>Password</FormLabel>\r\n                      <InputGroup size=\"md\">\r\n                        <Input\r\n                          errorBorderColor=\"crimson\"\r\n                          isInvalid={errors.password && touched.password}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.password}\r\n                          name=\"password\"\r\n                          pr=\"4.5rem\"\r\n                          type={show ? \"text\" : \"password\"}\r\n                          placeholder=\"Enter password\"\r\n                        />\r\n                        <InputRightElement width=\"4.5rem\">\r\n                          <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                            {show ? \"Hide\" : \"Show\"}\r\n                          </Button>\r\n                        </InputRightElement>\r\n                      </InputGroup>\r\n                      <FormHelperText id=\"password-helper-text\">\r\n                        Password must be at least 6 characters.\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                    <FormControl mt={4} isRequired>\r\n                      <FormLabel>Confirm Password</FormLabel>\r\n                      <InputGroup size=\"md\">\r\n                        <Input\r\n                          errorBorderColor=\"crimson\"\r\n                          isInvalid={\r\n                            errors.confirmpassword && touched.confirmpassword\r\n                          }\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.confirmpassword}\r\n                          name=\"confirmpassword\"\r\n                          pr=\"4.5rem\"\r\n                          type=\"password\"\r\n                          placeholder=\"Enter password\"\r\n                        />\r\n                      </InputGroup>\r\n                    </FormControl>\r\n                    <Button\r\n                      width=\"full\"\r\n                      mt={4}\r\n                      type=\"submit\"\r\n                      disabled={!isValid || loading}\r\n                      _hover={{ borderColor: \"gray.200\", bg: \"blue.900\" }}\r\n                    >\r\n                      {!loading && \"Sign up\"}\r\n                      {loading && (\r\n                        <CircularProgress\r\n                          isIndeterminate\r\n                          size=\"38px\"\r\n                          color=\"green\"\r\n                        ></CircularProgress>\r\n                      )}\r\n                    </Button>\r\n                  </form>\r\n                  <Text>\r\n                    Already have an account?{\" \"}\r\n                    <span>\r\n                      <Link style={{ color: \"blue\" }} to=\"/\">\r\n                        Login here.\r\n                      </Link>\r\n                    </span>\r\n                  </Text>\r\n                </Box>\r\n              </Flex>\r\n            );\r\n          }}\r\n        </Formik>\r\n      )}\r\n\r\n      {registrationIsComplete && (\r\n        <Alert\r\n          status=\"success\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            Registration Successful!\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Thanks for deciding to join our community!\r\n            <br />\r\n            We have sent you an email to verify your account. Verify your\r\n            account to begin contributing!.\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","export default __webpack_public_path__ + \"static/media/landing2.8a38d239.jpg\";","export default __webpack_public_path__ + \"static/media/logo2.a2b7fafe.png\";","import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\r\nimport { BASE_API_URL } from \"../../config\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction VerifyAccount() {\r\n  const [isVerified, setVerified] = useState(false);\r\n  const [isError, setError] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const toast = useToast();\r\n  let query = useQuery();\r\n\r\n  const verify = () => {\r\n    setError(false);\r\n    let id = query.get(\"id\");\r\n    if (id === \"\" || id === null) {\r\n      setError(\"true\");\r\n      setMessage(\"Invalid token\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    Axios.post(BASE_API_URL + \"/users/verifyaccount/\" + id)\r\n      .then((response) => {\r\n        toast({\r\n          title: \"Verification successfull\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: \"top-right\",\r\n        });\r\n        setLoading(false);\r\n        setVerified(true);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n        if (error.response) {\r\n          toast({\r\n            title: \"an error occurred\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n            position: \"top-right\",\r\n          });\r\n          setMessage(error.response.data.error);\r\n        } else {\r\n          setMessage(error.message);\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n            position: \"top-right\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    verify();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (isVerified) return <Redirect to=\"/\" />;\r\n  return (\r\n    <>\r\n      <Alert\r\n        status={isError ? \"error\" : \"info\"}\r\n        variant=\"subtle\"\r\n        flexDirection=\"column\"\r\n        justifyContent=\"center\"\r\n        textAlign=\"center\"\r\n        minHeight=\"220px\"\r\n      >\r\n        <AlertIcon size=\"40px\" mr={0} />\r\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n          Verify Mail\r\n        </AlertTitle>\r\n        <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n          {!isError && \"Please wait while we verify your email address.\"}\r\n          {isError && message}\r\n          <br />\r\n          {isLoading && <CircularProgress isIndeterminate size=\"40px\" />}\r\n          <br />\r\n          {isError && <Button onClick={verify}>Retry</Button>} <br />\r\n          {isError && <h2>Or</h2>}\r\n        </AlertDescription>\r\n        {isError && (\r\n          <Box\r\n            display=\"flex\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Link to=\"/\">\r\n              <Button>Login</Button>\r\n            </Link>\r\n            <Link to=\"/signup\">\r\n              <Button ml={1}>Sign Up</Button>\r\n            </Link>\r\n          </Box>\r\n        )}\r\n      </Alert>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyAccount;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/notfound.css\";\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"not_found_error\">404</div>\r\n      <br />\r\n      <br />\r\n\r\n      <br />\r\n      <span className=\"not_found_info\">\r\n        Page not found\r\n        <br /> Our developers may be tired or sleeping at the moment.\r\n        <br />\r\n        Let's go<Link to=\"/\"> home</Link> and try from there.\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { Box, Flex, Image, Text } from \"@chakra-ui/core\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\nimport landingImg from \"../../img/landing2.jpg\";\r\nimport logo2 from \"../../img/logo2.png\";\r\nimport VerifyAccount from \"./VerifyAccount\";\r\nimport NotFound from \"../Layout/NotFound\";\r\n\r\nconst Landing = () => {\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <Box>\r\n      <Flex height=\"100vh\" width=\"100vw\" position=\"fixed\" overflowY=\"hidden\">\r\n        <Box w={[\"0%\", \"0%\", \"45%\", \"55%\"]}>\r\n          <Box\r\n            p={2}\r\n            bg=\"#1A202C\"\r\n            position=\"fixed\"\r\n            top=\"0\"\r\n            left=\"0\"\r\n            width={{ base: \"100%\", md: \"fit-content\" }}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Image src={logo2} width=\"200px\" />\r\n          </Box>\r\n          <Image\r\n            src={landingImg}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            objectFit=\"cover\"\r\n          />\r\n        </Box>\r\n        <Box\r\n          w={[\"100%\", \"100%\", \"55%\", \"45%\"]}\r\n          p={4}\r\n          pt={10}\r\n          minHeight=\"100%\"\r\n          overflowY=\"scroll\"\r\n        >\r\n          <Flex flexDirection=\"column\" justifyContent=\"center\" minHeight=\"100%\">\r\n            {pathname === \"/\" && (\r\n              <Box>\r\n                <Text fontSize={[\"4xl\", \"5xl\", \"5xl\", \"5xl\"]} className=\"qfont\">\r\n                  Ask Your\r\n                </Text>\r\n                <Text fontSize={[\"4xl\", \"5xl\", \"5xl\", \"5xl\"]} className=\"qfont\">\r\n                  Questions Here.\r\n                </Text>\r\n                <Text pr={4} fontSize=\"md\" className=\"qfont\">\r\n                  Pharmaconn is a platform to ask questions and connect with\r\n                  people who contribute unique insights and quality answers.{\" \"}\r\n                </Text>\r\n              </Box>\r\n            )}\r\n            {pathname === \"/signup\" && (\r\n              <Box>\r\n                <Text fontSize={[\"4xl\", \"5xl\", \"5xl\", \"5xl\"]} className=\"qfont\">\r\n                  Sign up\r\n                </Text>\r\n                <Text pr={4} fontSize=\"md\" className=\"qfont\">\r\n                  Sign up, contribute unique insights & connect with others in a\r\n                  community you'll at home with.{\" \"}\r\n                </Text>\r\n              </Box>\r\n            )}\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Login />\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route exact path=\"/verifymail\">\r\n                <VerifyAccount />\r\n              </Route>\r\n              <Route path=\"*\">\r\n                <NotFound />\r\n              </Route>\r\n            </Switch>\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export default __webpack_public_path__ + \"static/media/logo1.901c895f.png\";","import {\r\n  Avatar,\r\n  AvatarBadge,\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  FormLabel,\r\n  Icon,\r\n  IconButton,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList,\r\n  Stack,\r\n  Tooltip,\r\n  useColorMode,\r\n} from \"@chakra-ui/core\";\r\nimport { HiUserGroup } from \"react-icons/hi\";\r\nimport { MdExplore, MdHome, MdSubject } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport logo1 from \"../../img/logo1.png\";\r\nimport logo2 from \"../../img/logo2.png\";\r\n\r\nfunction Navbar({ isOpen, onOpen, onClose }) {\r\n  const { user, isOnline } = useAuth();\r\n\r\n  const { colorMode } = useColorMode();\r\n  return (\r\n    <>\r\n      <Flex\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        width=\"100vw\"\r\n        maxWidth=\"100vw\"\r\n        overflow=\"hidden\"\r\n        height=\"60px\"\r\n        boxShadow={{ base: \"0\", md: \"md\" }}\r\n        background={{\r\n          base: \"#1A202C\",\r\n          md: colorMode === \"dark\" ? \"initial\" : \"white\",\r\n        }}\r\n      >\r\n        <Flex\r\n          justifyContent={{ base: \"center\", md: \"space-between\" }}\r\n          alignItems=\"center\"\r\n          maxWidth=\"1100px\"\r\n          width=\"100%\"\r\n          // padding={[\"0\", \"0px\", \"0px\", \"50px\"]}\r\n          padding={{ base: \"0 10px\", md: \"0 5px\", lg: \"0 40px\" }}\r\n          position=\"relative\"\r\n        >\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Link to=\"/\">\r\n              <Box\r\n                display={{ base: \"none\", md: \"initial\" }}\r\n                height=\"60px\"\r\n                alignItems=\"center\"\r\n                px={3}\r\n              >\r\n                <Image\r\n                  display={{ base: \"none\", md: \"initial\" }}\r\n                  src={colorMode === \"dark\" ? logo2 : logo1}\r\n                  alt=\"logo pharmaconn\"\r\n                  width=\"180px\"\r\n                />\r\n              </Box>\r\n              {/* small screen */}\r\n              <Box\r\n                display={{ base: \"initial\", md: \"none\" }}\r\n                height=\"60px\"\r\n                alignItems=\"center\"\r\n                px={3}\r\n              >\r\n                <Image\r\n                  display={{ base: \"initial\", md: \"none\" }}\r\n                  src={logo2}\r\n                  alt=\"logo pharmaconn\"\r\n                  width=\"180px\"\r\n                />\r\n              </Box>\r\n            </Link>\r\n\r\n            <Box my={2} display={{ base: \"none\", md: \"block\" }}>\r\n              <InputGroup>\r\n                <InputLeftElement\r\n                  paddingLeft=\"10px\"\r\n                  children={\r\n                    <FormLabel htmlFor=\"search-box-nav\">\r\n                      <Icon name=\"search\" color=\"gray.300\" />\r\n                    </FormLabel>\r\n                  }\r\n                />\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"search-box-nav\"\r\n                  variant=\"filled\"\r\n                  placeholder=\"Search...\"\r\n                />\r\n              </InputGroup>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            pr={4}\r\n            display={{ base: \"none\", md: \"flex\" }}\r\n            alignItems=\"center\"\r\n            className=\"qfont\"\r\n          >\r\n            <Box\r\n              height=\"60px\"\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              textTransform=\"uppercase\"\r\n            >\r\n              <Link\r\n                to=\"/answer\"\r\n                className=\"link\"\r\n                style={{\r\n                  height: \"100%\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  color: \"grey\",\r\n                  padding: \"0 5px\",\r\n                }}\r\n                px={3}\r\n              >\r\n                <Icon name=\"edit\" mr={1} size=\"24px\" />\r\n                Answer\r\n              </Link>\r\n              <Link\r\n                to=\"/spaces\"\r\n                className=\"link\"\r\n                style={{\r\n                  height: \"100%\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  color: \"grey\",\r\n                  padding: \"0 5px\",\r\n                }}\r\n                px={3}\r\n              >\r\n                <span style={{ padding: \"5px\", fontSize: \"20px\" }}>\r\n                  <HiUserGroup />\r\n                </span>\r\n                Spaces\r\n              </Link>\r\n              <Button\r\n                className=\"bt\"\r\n                onClick={onOpen}\r\n                ml={2}\r\n                to=\"/answer\"\r\n                style={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  color: colorMode === \"dark\" ? \"grey\" : \"#0e5291\",\r\n                  padding: \"0 5px\",\r\n                }}\r\n                px={3}\r\n              >\r\n                <Icon\r\n                  name=\"question-outline\"\r\n                  mr={1}\r\n                  size=\"24px\"\r\n                  color=\"#0e5291\"\r\n                />\r\n                Ask Question\r\n              </Button>\r\n            </Box>\r\n            <Tooltip hasArrow label=\"Notifications\" placement=\"bottom\">\r\n              <IconButton\r\n                aria-label=\"Notifications\"\r\n                icon=\"bell\"\r\n                variant=\"ghost\"\r\n                size=\"md\"\r\n                fontSize=\"24px\"\r\n                color=\"blue.500\"\r\n                mx={2}\r\n              >\r\n                <Badge ml=\"1\" variantColor=\"green\">\r\n                  New\r\n                </Badge>\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Avatar\r\n              mr={3}\r\n              src={user === null ? \"\" : user.profileurl}\r\n              name={user === null ? \"\" : user.name}\r\n              size=\"sm\"\r\n            >\r\n              {isOnline && <AvatarBadge size=\"1.25em\" bg=\"green.500\" />}\r\n            </Avatar>\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n      <Stack\r\n        isInline\r\n        height=\"40px\"\r\n        display={{ base: \"flex\", md: \"none\" }}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Tooltip label=\"home\" hasArrow>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"5px 10px\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Box\r\n              as={MdHome}\r\n              name=\"search\"\r\n              size=\"22px\"\r\n              color={colorMode === \"dark\" ? \"grey\" : \"blue.500\"}\r\n            />\r\n          </Link>\r\n        </Tooltip>\r\n        <Tooltip label=\"answer\" hasArrow>\r\n          <Link\r\n            to=\"/answer\"\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"5px 10px\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Icon\r\n              name=\"edit\"\r\n              size=\"24px\"\r\n              color={colorMode === \"dark\" ? \"grey\" : \"blue.500\"}\r\n            />\r\n          </Link>\r\n        </Tooltip>\r\n\r\n        <Menu>\r\n          <Tooltip label=\"explore\" hasArrow>\r\n            <MenuButton as={Box} width=\"100%\">\r\n              <span\r\n                style={{\r\n                  height: \"100%\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  padding: \"5px 10px\",\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    padding: \"5px\",\r\n                    fontSize: \"20px\",\r\n                    color: colorMode === \"dark\" ? \"grey\" : \"#3182ce\",\r\n                  }}\r\n                >\r\n                  <MdExplore />\r\n                </span>\r\n              </span>\r\n            </MenuButton>\r\n          </Tooltip>\r\n          <MenuList>\r\n            <Link to=\"/spaces\">\r\n              <MenuItem minH=\"48px\">\r\n                <span\r\n                  style={{\r\n                    padding: \"5px\",\r\n                    fontSize: \"20px\",\r\n                    color: colorMode === \"dark\" ? \"grey\" : \"#3182ce\",\r\n                  }}\r\n                >\r\n                  <HiUserGroup />\r\n                </span>\r\n                <span>Spaces</span>\r\n              </MenuItem>\r\n            </Link>\r\n            <Link to=\"topics\">\r\n              <MenuItem minH=\"48px\">\r\n                <span\r\n                  style={{\r\n                    padding: \"5px\",\r\n                    fontSize: \"20px\",\r\n                    color: colorMode === \"dark\" ? \"grey\" : \"#3182ce\",\r\n                  }}\r\n                >\r\n                  <MdSubject />\r\n                </span>\r\n                <span>Topics</span>\r\n              </MenuItem>\r\n            </Link>\r\n          </MenuList>\r\n        </Menu>\r\n        <Tooltip label=\"notifications\" hasArrow>\r\n          <Link\r\n            to=\"/notifications\"\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"5px 10px\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Icon\r\n              name=\"bell\"\r\n              size=\"24px\"\r\n              color={colorMode === \"dark\" ? \"grey\" : \"blue.500\"}\r\n            />\r\n          </Link>\r\n        </Tooltip>\r\n        <Tooltip label=\"menu\" hasArrow>\r\n          <Box\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              padding: \"5px 10px\",\r\n              width: \"100%\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <Avatar\r\n              src={user === null ? \"\" : user.profileurl}\r\n              name={user === null ? \"\" : user.name}\r\n              size=\"sm\"\r\n            >\r\n              {isOnline && <AvatarBadge size=\"1.25em\" bg=\"green.500\" />}\r\n\r\n              {user.isOnline && <AvatarBadge size=\"1.25em\" bg=\"green.500\" />}\r\n            </Avatar>\r\n          </Box>\r\n        </Tooltip>\r\n      </Stack>\r\n      <Divider display={{ md: \"none\" }} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Collapse,\r\n  Divider,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Scale,\r\n  Skeleton,\r\n  Text,\r\n  Textarea,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport autosize from \"autosize\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport Axios from \"axios\";\r\nimport { BASE_API_URL } from \"../../config\";\r\n\r\nfunction AskModal({ isOpen, onOpen, onClose, setRecentQ }) {\r\n  const toast = useToast();\r\n  const [step, setStep] = useState(1);\r\n  const [show, setShow] = useState(false);\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [topics, setTopics] = React.useState([]);\r\n  const [selectedtopics, setSelected] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [submitting, setSubmitting] = React.useState(false);\r\n\r\n  const { user } = useAuth();\r\n\r\n  const handleToggle = () => setShow(!show);\r\n  const maxStep = 2;\r\n\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    let cf = ref.current;\r\n    autosize(ref.current);\r\n    return () => {\r\n      autosize.destroy(cf);\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    if (\r\n      event.target.checked &&\r\n      selectedtopics.indexOf(event.target.value === -1)\r\n    ) {\r\n      setSelected((prev) => [...prev, event.target.value]);\r\n    } else {\r\n      let s = selectedtopics;\r\n      s.splice(event.target.value, 1);\r\n      setSelected(s);\r\n    }\r\n  };\r\n\r\n  const fetchTopics = useCallback(() => {\r\n    setLoading(true);\r\n\r\n    Axios.get(BASE_API_URL + \"/topics\")\r\n      .then((response) => {\r\n        const data = response.data.data;\r\n        setLoading(false);\r\n        setTopics([...data]);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        } else {\r\n          toast({\r\n            title: error.message + \": cannot retrieve topics\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n  const submitTopic = () => {\r\n    if (title === \"\" || description === \"\") {\r\n      toast({\r\n        title: \"Topic cannot be empty\",\r\n        status: \"info\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n\r\n    Axios.post(BASE_API_URL + \"/topics\", {\r\n      title: title,\r\n      description: description,\r\n    })\r\n      .then((response) => {\r\n        setDescription(\"\");\r\n        setTitle(\"\");\r\n        setSubmitting(false);\r\n        setShow(false);\r\n        const data = response.data.data;\r\n        if (data === undefined && response.data.error) {\r\n          toast({\r\n            title: response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n\r\n          return;\r\n        }\r\n        setTopics((prev) => [...data]);\r\n      })\r\n      .catch(function (error) {\r\n        setSubmitting(false);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        } else {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const submitQuestion = () => {\r\n    if (question === \"\" || selectedtopics === []) {\r\n      toast({\r\n        title: \"question cannot be empty\",\r\n        status: \"info\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n\r\n    Axios.post(BASE_API_URL + \"/questions\", {\r\n      question: question,\r\n      topics: selectedtopics,\r\n    })\r\n      .then((response) => {\r\n        setQuestion(\"\");\r\n        setSelected([]);\r\n        setSubmitting(false);\r\n\r\n        const data = response.data.question;\r\n        if (data === undefined && response.data.error) {\r\n          toast({\r\n            title: response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n          return;\r\n        }\r\n        setStep(1);\r\n        onClose();\r\n        setRecentQ(data);\r\n      })\r\n      .catch(function (error) {\r\n        setSubmitting(false);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        } else {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const nextStep = () => {\r\n    if (question === \"\") {\r\n      toast({\r\n        title: \"question cannot be empty\",\r\n        status: \"info\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n    if (!question.toString().includes(\"?\")) {\r\n      toast({\r\n        title: \"question cannot be without '?\",\r\n        status: \"info\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n    if (step !== maxStep) {\r\n      setStep((prev) => prev + 1);\r\n      fetchTopics();\r\n    }\r\n  };\r\n  const prevStep = () => {\r\n    if (step !== 1) {\r\n      setStep((prev) => prev - 1);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Scale in={isOpen}>\r\n        {(styles) => (\r\n          <Modal\r\n            isCentered\r\n            scrollBehavior=\"inside\"\r\n            closeOnOverlayClick={false}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            size={{ base: \"full\", md: \"lg\" }}\r\n          >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n              <ModalHeader className=\"qfont\">Ask Question</ModalHeader>\r\n\r\n              <ModalCloseButton />\r\n              <Divider />\r\n              {step === 1 && (\r\n                <ModalBody pb={6}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      borderRadius: \"3px\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                      background: \"#ebf0ff\",\r\n                      marginBottom: \"16px\",\r\n                      padding: \"16px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ color: \"#2e69ff\", fontSize: \"15px\" }}>\r\n                      <div style={{ fontWeight: \"bold\" }} className=\"qfont\">\r\n                        Tips on getting good answers quickly\r\n                      </div>\r\n                      <ul style={{ listStyle: \"disc\", marginLeft: \"20px\" }}>\r\n                        <li>\r\n                          Make sure your question has not been asked already\r\n                        </li>\r\n                        <li>Keep your question short and to the point</li>\r\n                        <li>Double-check grammar and spelling</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <Box display=\"flex\" alignItems=\"center\" width=\"fit-content\">\r\n                    <Avatar\r\n                      src={user.profileurl}\r\n                      name={user.name}\r\n                      size=\"xs\"\r\n                      mr={1}\r\n                    />\r\n                    <Text fontSize=\"13px\" color=\"gray.500\">\r\n                      {user.name} asked:\r\n                    </Text>\r\n                  </Box>\r\n                  <Textarea\r\n                    transition=\"height none\"\r\n                    aria-label=\"empty textarea\"\r\n                    autoFocus\r\n                    placeholder='Start your question with \"What\", \"How\", \"Why\", etc.'\r\n                    autocomplete=\"chrome-off\"\r\n                    ref={ref}\r\n                    value={question}\r\n                    variant=\"flushed\"\r\n                    onChange={(e) => {\r\n                      setQuestion(e.target.value);\r\n                    }}\r\n                  />\r\n                </ModalBody>\r\n              )}\r\n              {step === 2 && (\r\n                <ModalBody pb={6}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      borderRadius: \"3px\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                      background: \"#ebf0ff\",\r\n                      marginBottom: \"16px\",\r\n                      padding: \"16px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ color: \"#2e69ff\" }}>\r\n                      <div style={{ fontWeight: \"bold\" }} className=\"qfont\">\r\n                        Tips on getting good answers quickly\r\n                      </div>\r\n                      <ul style={{ listStyle: \"disc\", marginLeft: \"20px\" }}>\r\n                        <li>Make sure your question has appropriate topics.</li>\r\n                        <li>Select all that apply </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <Box display=\"flex\" alignItems=\"center\" width=\"fit-content\">\r\n                    <Text fontSize=\"17px\" className=\"qfont\" mb={2}>\r\n                      Select Topics\r\n                    </Text>\r\n                  </Box>\r\n                  {loading && (\r\n                    <>\r\n                      {\" \"}\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                    </>\r\n                  )}\r\n                  {!loading && (\r\n                    <>\r\n                      {topics.map((topic) => {\r\n                        return (\r\n                          <Checkbox\r\n                            key={topic._id}\r\n                            isFullWidth\r\n                            value={topic._id}\r\n                            onChange={handleChange}\r\n                            size=\"lg\"\r\n                            children={topic.title}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}\r\n                  <>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      mt={2}\r\n                      onClick={handleToggle}\r\n                      className=\"qfont\"\r\n                    >\r\n                      {!show && \"Not found relevant topics?\"}\r\n                      {show && \"Fill the form below to add a new topic\"}\r\n                    </Button>\r\n                    <Collapse mt={4} isOpen={show}>\r\n                      <Text fontSize=\"small\" px={1} className=\"qfont\">\r\n                        Add a topic\r\n                      </Text>\r\n                      <Input\r\n                        mt={2}\r\n                        name=\"title\"\r\n                        variant=\"flushed\"\r\n                        value={title}\r\n                        placeholder=\"Title eg. Books(Fiction)\"\r\n                        onChange={(e) => {\r\n                          setTitle(e.target.value);\r\n                        }}\r\n                      />\r\n                      <Input\r\n                        mt={2}\r\n                        variant=\"flushed\"\r\n                        name=\"description\"\r\n                        value={description}\r\n                        placeholder=\"Write a one line description...\"\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                        }}\r\n                      />\r\n                    </Collapse>\r\n                  </>\r\n                </ModalBody>\r\n              )}\r\n\r\n              <ModalFooter>\r\n                {step === 2 && (\r\n                  <Button onClick={prevStep} mr={3}>\r\n                    Prev\r\n                  </Button>\r\n                )}\r\n                {step === 2 && !show && (\r\n                  <Button onClick={submitQuestion} variantColor=\"blue\">\r\n                    {!submitting && \"Submit Question\"}\r\n                    {submitting && (\r\n                      <CircularProgress isIndeterminate size=\"20px\" />\r\n                    )}\r\n                  </Button>\r\n                )}\r\n                {step === 2 && show && (\r\n                  <Button onClick={submitTopic} variantColor=\"blue\">\r\n                    {!submitting && \"Add Topic\"}\r\n                    {submitting && (\r\n                      <CircularProgress isIndeterminate size=\"20px\" />\r\n                    )}\r\n                  </Button>\r\n                )}\r\n                {step === 1 && (\r\n                  <Button isDisabled={question.length === 0} onClick={nextStep}>\r\n                    Next\r\n                  </Button>\r\n                )}\r\n              </ModalFooter>\r\n            </ModalContent>\r\n          </Modal>\r\n        )}\r\n      </Scale>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AskModal;\r\n","import ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"../../css/editor.css\";\r\n\r\nexport default function Editor({ value }) {\r\n  return (\r\n    <div>\r\n      <ReactQuill theme=\"\" value={value} readOnly />\r\n    </div>\r\n  );\r\n}\r\n","import io from \"socket.io-client\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { BASE_URL } from \"./config\";\r\nlet socket;\r\nif (localStorage.getItem(\"pharmaconnjwts\") !== null) {\r\n  let token = JSON.parse(localStorage.getItem(\"pharmaconnjwts\"));\r\n  let decoded = jwt_decode(token);\r\n  if (decoded !== undefined || decoded !== null) {\r\n    socket = io(BASE_URL, {\r\n      query: {\r\n        id: decoded.id,\r\n      },\r\n    });\r\n  }\r\n}\r\nexport default socket;\r\n","import { Link } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  AvatarBadge,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  Text,\r\n  useColorMode,\r\n} from \"@chakra-ui/core\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport Editor from \"./Editor\";\r\nimport { MdComment, MdThumbDown, MdThumbUp } from \"react-icons/md\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport socket from \"../../socket\";\r\n\r\nfunction SingleAnswer({ answer }) {\r\n  const { user } = useAuth();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [ans, setAns] = useState(answer);\r\n  const [lkd, setLkd] = useState(\r\n    ans.upvotes.includes(user.id) ? \"#3182ce\" : \"grey\"\r\n  );\r\n  const [upvs, setUpvs] = useState([]);\r\n  const [dwvs, setDwvs] = useState([]);\r\n  const serializeVotes = (votes, setter) => {\r\n    let vbx = [];\r\n    if (votes !== undefined) {\r\n      votes.map((v) => vbx.push(v._id));\r\n      setter(vbx);\r\n    }\r\n  };\r\n\r\n  const upvoteClick = (a_id) => {\r\n    socket.emit(\"answerUpvote\", { answerId: a_id, userId: user.id });\r\n  };\r\n  const downvoteClick = (a_id) => {\r\n    socket.emit(\"answerDownvote\", { answerId: a_id, userId: user.id });\r\n  };\r\n  useEffect(() => {\r\n    serializeVotes(ans.upvotes, setUpvs);\r\n    serializeVotes(ans.downvotes, setDwvs);\r\n    if (socket !== undefined) {\r\n      socket.on(\"answerVoted\", (res) => {\r\n        if (res._id === ans._id) {\r\n          setAns(res);\r\n          serializeVotes(res.upvotes, setUpvs);\r\n          serializeVotes(res.downvotes, setDwvs);\r\n        }\r\n      });\r\n    }\r\n  }, [ans]);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <Box\r\n          p={4}\r\n          my={5}\r\n          boxShadow=\"md\"\r\n          borderRadius=\"lg\"\r\n          bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        >\r\n          <Box mb={1}>\r\n            <Text\r\n              fontSize=\"17px\"\r\n              fontWeight=\"bold\"\r\n              color=\"grey\"\r\n              className=\"qfont a-tag\"\r\n            >\r\n              <Link to={\"/q/\" + ans.question.slug}>\r\n                {ans.question.question}\r\n              </Link>\r\n            </Text>\r\n          </Box>\r\n          <Flex height=\"fit-content\" py={2} flexWrap=\"wrap\">\r\n            {ans.topics.map((t) => {\r\n              return (\r\n                <Button\r\n                  size=\"2xs\"\r\n                  fontWeight=\"300\"\r\n                  key={t._id}\r\n                  marginY=\"1px\"\r\n                  mx={1}\r\n                  padding=\"3px 6px\"\r\n                >\r\n                  <Link\r\n                    color=\"grey\"\r\n                    to={\"/t/\" + t.slug}\r\n                    style={{ fontSize: \"12px\", color: \"grey\" }}\r\n                    className=\"qfont\"\r\n                  >\r\n                    {t.title}\r\n                  </Link>\r\n                </Button>\r\n              );\r\n            })}\r\n          </Flex>\r\n          <Divider />\r\n          <Box py={2}>\r\n            <Flex alignItems=\"center\">\r\n              <Avatar\r\n                size=\"sm\"\r\n                src={ans.user.profileurl}\r\n                name={ans.user.name}\r\n                mr={2}\r\n              >\r\n                {\" \"}\r\n                {ans.user.isOnline && <AvatarBadge size=\"1em\" bg=\"green.500\" />}\r\n              </Avatar>\r\n              <Box>\r\n                <Text className=\"qfont\" fontSize=\"md\" fontWeight=\"bold\">\r\n                  {ans.user.name}\r\n                </Text>\r\n                <Text className=\"qfont\" fontSize=\"xs\" color=\"grey\">\r\n                  Answered <ReactTimeAgo date={new Date(ans.createdAt)} />\r\n                </Text>\r\n              </Box>\r\n            </Flex>\r\n          </Box>\r\n          <Editor value={ans.answer} />\r\n          <Flex alignItems=\"center\" mt={4} justifyContent=\"space-between\">\r\n            <Box>\r\n              <Button\r\n                onClick={() => {\r\n                  upvoteClick(ans._id);\r\n                }}\r\n                textTransform=\"capitalize\"\r\n                size=\"sm\"\r\n                mr={1}\r\n                color={upvs.includes(user.id) ? \"#3182c3\" : \"grey\"}\r\n              >\r\n                <Box marginRight=\"5px\" fontSize=\"18px\">\r\n                  <MdThumbUp />\r\n                </Box>\r\n                {\" \" + ans.upvotes.length}\r\n              </Button>\r\n\r\n              <Button\r\n                color={dwvs.includes(user.id) ? \"crimson\" : \"grey\"}\r\n                onClick={() => {\r\n                  downvoteClick(ans._id);\r\n                }}\r\n                textTransform=\"capitalize\"\r\n                size=\"sm\"\r\n                mr={1}\r\n              >\r\n                <Box marginRight=\"5px\" fontSize=\"18px\">\r\n                  <MdThumbDown />\r\n                </Box>\r\n                {ans.downvotes.length}\r\n              </Button>\r\n            </Box>\r\n            <Box>\r\n              <Button textTransform=\"capitalize\" size=\"sm\" color=\"grey\" mr={1}>\r\n                <Box marginRight=\"5px\" fontSize=\"18px\">\r\n                  <MdComment />\r\n                </Box>\r\n                {ans.comments.length}\r\n              </Button>\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default SingleAnswer;\r\n","import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Box,\r\n  Skeleton,\r\n  Button,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASE_API_URL } from \"../../config\";\r\nimport SingleAnswer from \"./SingleAnswer\";\r\n\r\nfunction Answers() {\r\n  const toast = useToast();\r\n  const [feed, setFeed] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getFeed = useCallback(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    Axios.get(BASE_API_URL + \"/feed\")\r\n      .then((response) => {\r\n        setFeed(response.data.topicAnswers);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getFeed();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      {feed.map((fd) => {\r\n        return <SingleAnswer answer={fd} key={fd._id} />;\r\n      })}\r\n      {feed.length === 0 && !error && !loading && (\r\n        <Alert\r\n          status=\"info\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          minHeight=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            Oops! Your feed is empty.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            <small>Things you can do:</small>\r\n            <br />\r\n            Follow some{\" \"}\r\n            <Link to=\"/topics\">\r\n              <Button size=\"sm\">Topics</Button>\r\n            </Link>\r\n            <br />\r\n            Join{\" \"}\r\n            <Link to=\"/spaces\">\r\n              <Button size=\"sm\">spaces</Button>\r\n            </Link>\r\n            <br />\r\n            to begin seeing posts from them\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n      {loading && (\r\n        <>\r\n          {\" \"}\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"300px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"300px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"300px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n        </>\r\n      )}\r\n      {error && (\r\n        <Alert\r\n          status=\"error\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            An error occured.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Please Retry\r\n            <br />\r\n            <Button onClick={getFeed}>Retry</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Answers;\r\n","import React from \"react\";\r\nimport \"../../css/loader.css\";\r\nfunction PageLoader() {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"loading qfont\">\r\n        <p>Loading</p>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageLoader;\r\n","import { Button, CircularProgress, Spinner } from \"@chakra-ui/core\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport React, { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\"; // ES6\r\nimport \"../../css/editor.css\";\r\n\r\nexport default function Editor({ handleSubmit, isSubmitting }) {\r\n  const [editorHtml, setHtml] = useState(\"\");\r\n  const submitQuill = () => {\r\n    if (editorHtml === \"\") {\r\n      cogoToast.error(\"Answer cannot be empty\");\r\n      return;\r\n    }\r\n    handleSubmit(editorHtml);\r\n  };\r\n  return (\r\n    <div>\r\n      <ReactQuill\r\n        theme=\"snow\"\r\n        onChange={setHtml}\r\n        value={editorHtml}\r\n        modules={Editor.modules}\r\n        formats={Editor.formats}\r\n        placeholder=\"write your answer\"\r\n      />\r\n      <Button onClick={submitQuill} size=\"sm\" mt={2}>\r\n        {!isSubmitting && \"Submit Answer\"}\r\n        {isSubmitting && <CircularProgress isIndeterminate size=\"22px\" />}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n * Quill modules to attach to editor\r\n * See https://quilljs.com/docs/modules/ for complete options\r\n */\r\nEditor.modules = {\r\n  toolbar: [\r\n    [{ header: \"1\" }, { header: \"2\" }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n    [\"link\", \"image\"],\r\n    [\"clean\"],\r\n  ],\r\n  clipboard: {\r\n    // toggle to add extra line breaks when pasting HTML:\r\n    matchVisual: false,\r\n  },\r\n};\r\n/*\r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\r\nEditor.formats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n// import Editor from \"./Editor\";\r\nimport \"../../css/editor.css\";\r\nimport axios from \"axios\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport { BASE_API_URL } from \"../../config\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  Text,\r\n  useColorMode,\r\n} from \"@chakra-ui/core\";\r\nimport { MdClose, MdEdit, MdRssFeed } from \"react-icons/md\";\r\nimport Editor from \"./Editor\";\r\nimport socket from \"../../socket\";\r\n\r\nfunction SingleQuestion({ question, reload }) {\r\n  const { user } = useAuth();\r\n  const [q, setQ] = useState(question);\r\n  const [isAnswering, setAnswering] = useState(false);\r\n  const { colorMode } = useColorMode();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const followClick = (q_id) => {\r\n    socket.emit(\"questionFollow\", { questionId: q_id, userId: user.id });\r\n  };\r\n  const submitAnswer = (value) => {\r\n    setSubmitting(true);\r\n    cogoToast.loading(\"Submitting answer...\");\r\n    const data = {\r\n      qid: question._id,\r\n      answer: value,\r\n    };\r\n\r\n    axios\r\n      .post(BASE_API_URL + \"/answer/submit\", data)\r\n      .then((response) => {\r\n        cogoToast.success(response.data.success);\r\n        reload();\r\n        setSubmitting(false);\r\n      })\r\n      .catch(function (error) {\r\n        setSubmitting(false);\r\n        if (error.response && error.response.data.error) {\r\n          cogoToast.error(error.response.data.error);\r\n        } else {\r\n          cogoToast.error(error.message);\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (socket !== undefined) {\r\n      socket.on(\"questionFollowed\", (res) => {\r\n        if (res._id === q._id) {\r\n          setQ(res);\r\n        }\r\n      });\r\n    }\r\n  }, [q]);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <Box\r\n          p={4}\r\n          mb={5}\r\n          boxShadow=\"md\"\r\n          borderRadius=\"lg\"\r\n          bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        >\r\n          <Box mb={1}>\r\n            <Text\r\n              fontSize=\"17px\"\r\n              fontWeight=\"bold\"\r\n              color=\"grey\"\r\n              className=\"qfont a-tag\"\r\n            >\r\n              <Link to={\"/q/\" + q.slug}>{q.question}</Link>\r\n            </Text>\r\n          </Box>\r\n          <Flex height=\"fit-content\" py={2} alignItems=\"center\" flexWrap=\"wrap\">\r\n            {q.topics.map((t) => {\r\n              return (\r\n                <Button\r\n                  size=\"2xs\"\r\n                  fontWeight=\"300\"\r\n                  key={t._id}\r\n                  mx={1}\r\n                  marginY=\"1px\"\r\n                  padding=\"3px 6px\"\r\n                >\r\n                  <Link\r\n                    color=\"grey\"\r\n                    to={\"/t/\" + t.slug}\r\n                    style={{ fontSize: \"12px\", color: \"grey\" }}\r\n                    className=\"qfont\"\r\n                  >\r\n                    {t.title}\r\n                  </Link>\r\n                </Button>\r\n              );\r\n            })}\r\n          </Flex>\r\n          <Divider />\r\n          <Box py={2}>\r\n            <Flex alignItems=\"center\" flexWrap=\"wrap\">\r\n              {q.answers.length === 0 && (\r\n                <Text className=\"qfont\" fontWeight=\"bold\" fontSize=\"xs\" mr={2}>\r\n                  No answers yet.\r\n                </Text>\r\n              )}\r\n              <Text\r\n                className=\"qfont\"\r\n                fontWeight=\"bold\"\r\n                fontSize=\"xs\"\r\n                color=\"grey\"\r\n              >\r\n                Posted <ReactTimeAgo date={new Date(q.createdAt)} />\r\n              </Text>\r\n            </Flex>\r\n          </Box>\r\n          <Flex alignItems=\"center\">\r\n            {isAnswering && (\r\n              <Button\r\n                onClick={() => setAnswering(false)}\r\n                textTransform=\"capitalize\"\r\n                size=\"sm\"\r\n                mr={3}\r\n                color=\"red.500\"\r\n              >\r\n                <MdClose fontSize=\"18px\" />\r\n                Cancel\r\n              </Button>\r\n            )}\r\n            {!isAnswering && (\r\n              <Button\r\n                onClick={() => setAnswering(true)}\r\n                textTransform=\"capitalize\"\r\n                size=\"sm\"\r\n                color=\"grey\"\r\n                mr={3}\r\n              >\r\n                <MdEdit color=\"#3182ce\" fontSize=\"18px\" />\r\n                Answer\r\n              </Button>\r\n            )}\r\n            <Button\r\n              size=\"sm\"\r\n              color={q.followers.includes(user.id) ? \"#3182ce\" : \"grey\"}\r\n              onClick={() => {\r\n                followClick(q._id);\r\n              }}\r\n            >\r\n              <MdRssFeed fontSize=\"18px\" />\r\n              Follow. {q.followers.length}\r\n            </Button>\r\n          </Flex>\r\n          <AnimatePresence>\r\n            {isAnswering && (\r\n              <motion.div\r\n                style={{ marginTop: \"20px\" }}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                exit={{ opacity: 0 }}\r\n              >\r\n                <Suspense\r\n                  fallback={\r\n                    <span className=\"text-center text-muted d-block\">\r\n                      loading editor...\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Editor\r\n                    handleSubmit={submitAnswer}\r\n                    isSubmitting={submitting}\r\n                  />\r\n                </Suspense>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </Box>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default SingleQuestion;\r\n","import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Box,\r\n  Skeleton,\r\n  Button,\r\n  useToast,\r\n  useColorMode,\r\n  Text,\r\n} from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASE_API_URL } from \"../../config\";\r\nimport SingleQuestion from \"./SingleQuestion\";\r\n\r\nfunction Question() {\r\n  const toast = useToast();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [qs, setQs] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getQuestions = useCallback(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    Axios.get(BASE_API_URL + \"/questions/foryou\")\r\n      .then((response) => {\r\n        setQs(response.data.questions);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        py={1}\r\n        px={4}\r\n        mb={2}\r\n        boxShadow=\"md\"\r\n        bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        color=\"grey\"\r\n        className=\"qfont\"\r\n      >\r\n        <Text fontSize=\"md\">Questions for you</Text>\r\n      </Box>\r\n      {qs.map((q) => {\r\n        return (\r\n          <SingleQuestion question={q} key={q._id} reload={getQuestions} />\r\n        );\r\n      })}\r\n      {qs.length === 0 && !error && !loading && (\r\n        <Alert\r\n          status=\"info\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            No questions at the moment.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Follow some{\" \"}\r\n            <Link to=\"/topics\">\r\n              <Button size=\"sm\">Topics</Button>\r\n            </Link>\r\n            <br />\r\n            and join some{\" \"}\r\n            <Link to=\"/spaces\">\r\n              <Button size=\"sm\">spaces</Button>\r\n            </Link>{\" \"}\r\n            to see questions\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n      {loading && (\r\n        <>\r\n          {\" \"}\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"100px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"100px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"100px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n        </>\r\n      )}\r\n      {error && (\r\n        <Alert\r\n          status=\"error\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            An error occured.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Please Retry\r\n            <br />\r\n            <Button onClick={getQuestions}>Retry</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Box, Button, Flex, Text, useColorMode } from \"@chakra-ui/core\";\r\nimport useQuestion from \"../../contexts/QuestionProvider\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\n\r\nfunction AskBar() {\r\n  const { recentQ, setRecentQ, onOpen } = useQuestion();\r\n  const { user } = useAuth();\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        width=\"100%\"\r\n        onClick={onOpen}\r\n        bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        className=\"qfont\"\r\n        boxShadow=\"md\"\r\n        borderRadius=\"md\"\r\n        overflow=\"hidden\"\r\n        mb={3}\r\n        p={4}\r\n        cursor=\"pointer\"\r\n      >\r\n        <Flex width=\"100%\" alignItems=\"center\">\r\n          <Avatar src={user.profileurl} name={user.name} size=\"sm\" mr={1} />\r\n          <Box>\r\n            <Text fontSize=\"13px\" color=\"grey\" className=\"qfont\">\r\n              Hey {user.name}\r\n            </Text>\r\n            <Text\r\n              fontSize=\"17px\"\r\n              fontWeight=\"bold\"\r\n              color=\"grey\"\r\n              className=\"qfont\"\r\n            >\r\n              What's your question?\r\n            </Text>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n      {recentQ !== null && (\r\n        <Box\r\n          width=\"100%\"\r\n          bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n          className=\"qfont\"\r\n          boxShadow=\"md\"\r\n          borderRadius=\"sm\"\r\n          overflow=\"hidden\"\r\n          mb={3}\r\n          mt={-2}\r\n          p={4}\r\n          position=\"relative\"\r\n        >\r\n          <Button\r\n            textDecoration=\"underline\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              setRecentQ(null);\r\n            }}\r\n            position=\"absolute\"\r\n            right=\"10px\"\r\n            top=\"10px\"\r\n            fontSize=\"small\"\r\n            variant=\"ghost\"\r\n            color=\"grey\"\r\n          >\r\n            Hide\r\n          </Button>\r\n          <Text fontSize=\"13px\" color=\"grey\" className=\"qfont\">\r\n            You recently asked :\r\n          </Text>\r\n          <Text\r\n            fontSize=\"15px\"\r\n            fontWeight=\"bold\"\r\n            color=\"grey\"\r\n            className=\"qfont\"\r\n          >\r\n            <Link to={\"/q/\" + recentQ.slug}>{recentQ.question}</Link>\r\n          </Text>{\" \"}\r\n          <span style={{ fontSize: \"12px\" }}>\r\n            <ReactTimeAgo date={new Date(recentQ.createdAt)} />\r\n          </span>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AskBar;\r\n","import { Link } from \"react-router-dom\";\r\nimport useSpace from \"../../contexts/SpaceProvider\";\r\n\r\nconst {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  ModalFooter,\r\n  CircularProgress,\r\n  Box,\r\n  Text,\r\n} = require(\"@chakra-ui/core\");\r\nconst { useRef, useState } = require(\"react\");\r\n\r\nexport default function AddSpceModal() {\r\n  const { isOpen, onClose, createSpace, creating, similarSpace } = useSpace();\r\n  const [spaceName, setName] = useState(\"\");\r\n  const [spaceDesc, setDesc] = useState(\"\");\r\n\r\n  const initialRef = useRef();\r\n\r\n  return (\r\n    <>\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Create a Space</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Space name</FormLabel>\r\n              <Input\r\n                value={spaceName}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                ref={initialRef}\r\n                placeholder=\"Enter name\"\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Description</FormLabel>\r\n              <Input\r\n                value={spaceDesc}\r\n                onChange={(e) => {\r\n                  setDesc(e.target.value);\r\n                }}\r\n                placeholder=\"Write a one line description\"\r\n              />\r\n            </FormControl>\r\n            {similarSpace && (\r\n              <Box my={3} width=\"100%\">\r\n                <span>A similar space already exists</span>\r\n                <br />\r\n                <Link to=\"\">\r\n                  <Box padding=\"10px\" boxShadow=\"md\">\r\n                    <Text fontWeight=\"bold\" color=\"grey\" fontSize=\"18px\">\r\n                      {similarSpace.space.title}\r\n                    </Text>\r\n                    <Text fontSize=\"small\">\r\n                      {similarSpace.space.description}\r\n                    </Text>\r\n                    <Box display=\"flex\" alignItems=\"center\" color=\"grey\">\r\n                      <small>{similarSpace.space.members.length} members</small>\r\n                      . <small>{similarSpace.space.posts.length} posts</small>.{\" \"}\r\n                      <small>\r\n                        {similarSpace.space.questions.length} questions\r\n                      </small>\r\n                    </Box>\r\n                  </Box>\r\n                </Link>\r\n              </Box>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              disabled={spaceName === \"\" || spaceDesc === \"\" || creating}\r\n              variantColor=\"blue\"\r\n              mr={3}\r\n              onClick={() => {\r\n                createSpace(spaceName, spaceDesc);\r\n              }}\r\n            >\r\n              {creating && <CircularProgress isIndeterminate size=\"20px\" />}\r\n              {!creating && \"Save\"}\r\n            </Button>\r\n            <Button onClick={onClose}>Cancel</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Text, useColorMode } from \"@chakra-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nfunction SingleSpace({ space }) {\r\n  const [spc, setSpc] = useState(space);\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <Box\r\n          p={4}\r\n          mb={5}\r\n          boxShadow=\"md\"\r\n          borderRadius=\"lg\"\r\n          bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        >\r\n          <Link to={\"/spaces/\" + space.slug}>\r\n            <Text\r\n              fontWeight=\"bold\"\r\n              className=\"qfont a-tag\"\r\n              color=\"grey\"\r\n              fontSize=\"18px\"\r\n            >\r\n              {space.title}\r\n            </Text>\r\n          </Link>\r\n          <Text fontSize=\"small\">{space.description}</Text>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            color=\"grey\"\r\n            className=\"qfont\"\r\n            fontWeight=\"semibold\"\r\n          >\r\n            <span style={{ marginRight: \"5px\" }}>\r\n              <small>{space.members.length} members</small>.{\" \"}\r\n            </span>\r\n            <span style={{ marginRight: \"5px\" }}>\r\n              <small>{space.posts.length} posts</small>.{\" \"}\r\n            </span>\r\n            <span style={{ marginRight: \"5px\" }}>\r\n              <small>{space.questions.length} questions</small>\r\n            </span>\r\n          </Box>\r\n        </Box>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default SingleSpace;\r\n","import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Box,\r\n  Skeleton,\r\n  Button,\r\n  useColorMode,\r\n  Text,\r\n} from \"@chakra-ui/core\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport useSpace from \"../../contexts/SpaceProvider\";\r\nimport AddSpaceModal from \"./AddSpaceModal\";\r\nimport SingleSpace from \"./SingleSpace\";\r\n\r\nfunction Spaces() {\r\n  const { onOpen, getSpaces, spaces, loading, error } = useSpace();\r\n  const { colorMode } = useColorMode();\r\n\r\n  useEffect(() => {\r\n    getSpaces();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        py={1}\r\n        px={4}\r\n        mb={2}\r\n        boxShadow=\"md\"\r\n        bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        color=\"grey\"\r\n        className=\"qfont\"\r\n      >\r\n        <Text fontSize=\"md\">Join spaces to improve your feed.</Text>\r\n      </Box>\r\n      {spaces.map((space) => {\r\n        return <SingleSpace space={space} key={space._id} />;\r\n      })}\r\n      <AddSpaceModal reload={getSpaces} />\r\n      {spaces.length === 0 && !error && !loading && (\r\n        <Alert\r\n          status=\"info\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            Oops! No spaces at the moment.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            It seems you are one of our early users\r\n            <br />\r\n            <Button onClick={onOpen}>Create a space to start sharing!</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n      {loading && (\r\n        <>\r\n          {\" \"}\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n        </>\r\n      )}\r\n      {error && (\r\n        <Alert\r\n          status=\"error\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            An error occured.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Please Retry\r\n            <br />\r\n            <Button onClick={getSpaces}>Retry</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Spaces;\r\n","import { Link } from \"react-router-dom\";\r\nimport useTopic from \"../../contexts/TopicProvider\";\r\n\r\nconst {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  ModalFooter,\r\n  CircularProgress,\r\n  Box,\r\n  Text,\r\n} = require(\"@chakra-ui/core\");\r\nconst { useRef, useState } = require(\"react\");\r\n\r\nexport default function AddSpceModal() {\r\n  const { isOpen, onClose, createTopic, creating, similarTopic } = useTopic();\r\n  const [topicName, setName] = useState(\"\");\r\n  const [topicDesc, setDesc] = useState(\"\");\r\n\r\n  const initialRef = useRef();\r\n\r\n  return (\r\n    <>\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Create a Topic</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Topic name</FormLabel>\r\n              <Input\r\n                value={topicName}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                ref={initialRef}\r\n                placeholder=\"Enter name\"\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Description</FormLabel>\r\n              <Input\r\n                value={topicDesc}\r\n                onChange={(e) => {\r\n                  setDesc(e.target.value);\r\n                }}\r\n                placeholder=\"Write a one line description\"\r\n              />\r\n            </FormControl>\r\n            {similarTopic && (\r\n              <Box my={3} width=\"100%\">\r\n                <span>A similar topic already exists</span>\r\n                <br />\r\n                {/* <Link to=\"\">\r\n                  <Box padding=\"10px\" boxShadow=\"md\">\r\n                    <Text fontWeight=\"bold\" color=\"grey\" fontSize=\"18px\">\r\n                      {similarTopic.topic.title}\r\n                    </Text>\r\n                    <Text fontSize=\"small\">\r\n                      {similarTopic.topic.description}\r\n                    </Text>\r\n                    <Box display=\"flex\" alignItems=\"center\" color=\"grey\">\r\n                      <small>{similarTopic.topic.members.length} members</small>\r\n                      . <small>{similarTopic.topic.posts.length} posts</small>.{\" \"}\r\n                      <small>\r\n                        {similarTopic.topic.questions.length} questions\r\n                      </small>\r\n                    </Box>\r\n                  </Box>\r\n                </Link> */}\r\n              </Box>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              disabled={topicName === \"\" || topicDesc === \"\" || creating}\r\n              variantColor=\"blue\"\r\n              mr={3}\r\n              onClick={() => {\r\n                createTopic(topicName, topicDesc);\r\n              }}\r\n            >\r\n              {creating && <CircularProgress isIndeterminate size=\"20px\" />}\r\n              {!creating && \"Save\"}\r\n            </Button>\r\n            <Button onClick={onClose}>Cancel</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Button, Text, useColorMode } from \"@chakra-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport { MdRssFeed } from \"react-icons/md\";\r\nimport socket from \"../../socket\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\n\r\nfunction SingleTopic({ topic }) {\r\n  const [tpc, setTpc] = useState(topic);\r\n  const { user } = useAuth();\r\n  const { colorMode } = useColorMode();\r\n  const activateFollowClick = (t_id) => {\r\n    socket.emit(\"topicFollow\", { topicId: t_id, userId: user.id });\r\n  };\r\n  useEffect(() => {\r\n    if (socket !== undefined) {\r\n      socket.on(\"topicFollowed\", (res) => {\r\n        if (res._id === tpc._id) {\r\n          setTpc((prev) => res);\r\n        }\r\n      });\r\n    }\r\n  }, [tpc]);\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <Box\r\n          p={4}\r\n          mb={5}\r\n          boxShadow=\"md\"\r\n          borderRadius=\"lg\"\r\n          bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        >\r\n          <Link to={\"/topics/\" + tpc.slug}>\r\n            <Text\r\n              fontWeight=\"bold\"\r\n              className=\"qfont a-tag\"\r\n              color=\"grey\"\r\n              fontSize=\"18px\"\r\n            >\r\n              {tpc.title}\r\n            </Text>\r\n          </Link>\r\n          <Text fontSize=\"small\">{tpc.description}</Text>\r\n          <Text fontSize=\"xs\" color=\"grey\" className=\"q-font\">\r\n            Last followed{\" \"}\r\n            <ReactTimeAgo\r\n              date={new Date(tpc.updatedAt)}\r\n              locale=\"en\"\r\n              // timeStyle=\"twitter\"\r\n            />\r\n          </Text>\r\n          <Box display=\"flex\" alignItems=\"center\" mt={2}>\r\n            <Button\r\n              size=\"sm\"\r\n              color={tpc.followers.includes(user.id) ? \"#3182ce\" : \"grey\"}\r\n              onClick={() => {\r\n                activateFollowClick(tpc._id);\r\n              }}\r\n            >\r\n              <MdRssFeed fontSize=\"18px\" />\r\n              Follow. {tpc.followers.length}\r\n            </Button>\r\n          </Box>\r\n          {/* <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            color=\"grey\"\r\n            className=\"qfont\"\r\n            fontWeight=\"semibold\"\r\n          >\r\n            <span style={{ marginRight: \"5px\" }}>\r\n              <small>{tpc.members.length} members</small>.{\" \"}\r\n            </span>\r\n            <span style={{ marginRight: \"5px\" }}>\r\n              <small>{tpc.posts.length} posts</small>.{\" \"}\r\n            </span>\r\n            <span style={{ marginRight: \"5px\" }}>\r\n              <small>{tpc.questions.length} questions</small>\r\n            </span>\r\n          </Box> */}\r\n        </Box>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default SingleTopic;\r\n","import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Box,\r\n  Skeleton,\r\n  Button,\r\n  useColorMode,\r\n  Text,\r\n} from \"@chakra-ui/core\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport useTopic from \"../../contexts/TopicProvider\";\r\nimport AddTopicModal from \"./AddTopicModal\";\r\nimport SingleTopic from \"./SingleTopic\";\r\n\r\nfunction Topics() {\r\n  const { onOpen, getTopics, topics, loading, error } = useTopic();\r\n  const { colorMode } = useColorMode();\r\n\r\n  useEffect(() => {\r\n    getTopics();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        py={1}\r\n        px={4}\r\n        mb={2}\r\n        boxShadow=\"md\"\r\n        bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        color=\"grey\"\r\n        className=\"qfont\"\r\n      >\r\n        <Text fontSize=\"md\">Follow topics to improve your feed.</Text>\r\n      </Box>\r\n      {topics.map((topic) => {\r\n        return <SingleTopic topic={topic} key={topic._id} />;\r\n      })}\r\n      <AddTopicModal reload={getTopics} />\r\n      {topics.length === 0 && !error && !loading && (\r\n        <Alert\r\n          status=\"info\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            Oops! No topics at the moment.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            It seems you are one of our early users\r\n            <br />\r\n            <Button onClick={onOpen}>Create a topic to start sharing!</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n      {loading && (\r\n        <>\r\n          {\" \"}\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n        </>\r\n      )}\r\n      {error && (\r\n        <Alert\r\n          status=\"error\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            An error occured.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Please Retry\r\n            <br />\r\n            <Button onClick={getTopics}>Retry</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Topics;\r\n","import { Box, Button, Flex, List, useColorMode } from \"@chakra-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HiOutlineHome } from \"react-icons/hi\";\r\nimport { BsPlusSquareFill } from \"react-icons/bs\";\r\nimport { MdExplore } from \"react-icons/md\";\r\nimport { NavLink, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport Navbar from \"./Navbar\";\r\nimport AskModal from \"../Question/AskModal\";\r\n\r\nimport Answers from \"../Answer/Answers\";\r\nimport PageLoader from \"./PageLoader\";\r\nimport useQuestion from \"../../contexts/QuestionProvider\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotFound from \"./NotFound\";\r\nimport Questions from \"../Question/Questions\";\r\nimport AskBar from \"../Question/AskBar\";\r\nimport Spaces from \"../Spaces/Spaces\";\r\nimport Topics from \"../Topics/Topics\";\r\nimport useSpace from \"../../contexts/SpaceProvider\";\r\nimport useTopic from \"../../contexts/TopicProvider\";\r\n\r\nfunction Home() {\r\n  const { isAuth } = useAuth();\r\n  const { isOpen, onOpen, onClose, setRecentQ } = useQuestion();\r\n  const space = useSpace();\r\n  const topic = useTopic();\r\n  const [loading, setLoading] = useState(true);\r\n  const { colorMode } = useColorMode();\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2500);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <>\r\n          <PageLoader />\r\n        </>\r\n      )}\r\n      {!loading && !isAuth && <Redirect to=\"/\" />}\r\n      {!loading && isAuth && (\r\n        <Box overflow=\"hidden\">\r\n          <Navbar isOpen={isOpen} onOpen={onOpen} onClose={onClose} />\r\n\r\n          <Flex\r\n            maxWidth=\"1100px\"\r\n            margin=\"auto\"\r\n            minHeight=\"calc(100vh - 100px)\"\r\n            justifyContent=\"space-between\"\r\n            paddingX={[\"0\", \"0px\", \"60px\", \"60px\"]}\r\n            paddingY={[\"0\", \"0px\", \"40px\", \"40px\"]}\r\n          >\r\n            <Box\r\n              width=\"240px\"\r\n              height=\"fit-content\"\r\n              bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n              className=\"afont\"\r\n              boxShadow=\"md\"\r\n              borderRadius=\"md\"\r\n              mr={3}\r\n              display={{ base: \"none\", md: \"block\" }}\r\n            >\r\n              <List>\r\n                <>\r\n                  <NavLink\r\n                    className=\"link\"\r\n                    exact\r\n                    to=\"/\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      color: \"#8080809c\",\r\n                      padding: \"5px\",\r\n                      borderLeft: \"3px solid transparent\",\r\n                      height: \"40px\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    activeStyle={{\r\n                      borderLeft: \"3px solid #0e5291\",\r\n                      color: \"#0e5291\",\r\n                      background: \"#80808010\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      style={{\r\n                        padding: \"5px\",\r\n                        fontSize: \"24px\",\r\n                      }}\r\n                    >\r\n                      <HiOutlineHome />\r\n                    </span>\r\n                    Feed\r\n                  </NavLink>\r\n                </>\r\n                <>\r\n                  <NavLink\r\n                    className=\"link\"\r\n                    exact\r\n                    to=\"/spaces\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      color: \"#8080809c\",\r\n                      padding: \"5px\",\r\n                      borderLeft: \"3px solid transparent\",\r\n                      height: \"40px\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    activeStyle={{\r\n                      borderLeft: \"3px solid #0e5291\",\r\n                      color: \"#0e5291\",\r\n                      background: \"#80808010\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      style={{\r\n                        padding: \"5px\",\r\n                        fontSize: \"22px\",\r\n                      }}\r\n                    >\r\n                      <BsPlusSquareFill />\r\n                    </span>\r\n                    Discover Spaces\r\n                  </NavLink>\r\n                  {pathname === \"/spaces\" && (\r\n                    <Box\r\n                      width=\"100%\"\r\n                      bg={\r\n                        colorMode === \"dark\"\r\n                          ? \"rgba(255,255,255,0.08)\"\r\n                          : \"#EDF2F7\"\r\n                      }\r\n                    >\r\n                      <Button\r\n                        color=\"grey\"\r\n                        fontSize=\"15px\"\r\n                        variant=\"ghost\"\r\n                        width=\"100%\"\r\n                        paddingLeft=\"10px\"\r\n                        boxShadow=\"none !important\"\r\n                        onClick={space.onOpen}\r\n                      >\r\n                        Create Space\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </>\r\n                <>\r\n                  <NavLink\r\n                    className=\"link\"\r\n                    exact\r\n                    to=\"/topics\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      color: \"#8080809c\",\r\n                      padding: \"5px\",\r\n                      borderLeft: \"3px solid transparent\",\r\n                      height: \"40px\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    activeStyle={{\r\n                      borderLeft: \"3px solid #0e5291\",\r\n                      color: \"#0e5291\",\r\n                      background: \"#80808010\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      style={{\r\n                        padding: \"5px\",\r\n                        fontSize: \"23px\",\r\n                      }}\r\n                    >\r\n                      <MdExplore />\r\n                    </span>\r\n                    Explore Topics\r\n                  </NavLink>\r\n                  {pathname === \"/topics\" && (\r\n                    <Box\r\n                      width=\"100%\"\r\n                      bg={\r\n                        colorMode === \"dark\"\r\n                          ? \"rgba(255,255,255,0.08)\"\r\n                          : \"#EDF2F7\"\r\n                      }\r\n                    >\r\n                      <Button\r\n                        color=\"grey\"\r\n                        fontSize=\"15px\"\r\n                        variant=\"ghost\"\r\n                        width=\"100%\"\r\n                        paddingLeft=\"10px\"\r\n                        boxShadow=\"none !important\"\r\n                        onClick={topic.onOpen}\r\n                      >\r\n                        Create Topic\r\n                      </Button>\r\n                    </Box>\r\n                  )}\r\n                </>\r\n              </List>\r\n            </Box>\r\n            <Box\r\n              width={{ base: \"100%\", md: \"80%\" }}\r\n              maxW=\"600px\"\r\n              margin=\"auto\"\r\n              padding=\"0 10px\"\r\n              minHeight=\"calc(100vh - 100px)\"\r\n            >\r\n              <AskModal\r\n                setRecentQ={setRecentQ}\r\n                isOpen={isOpen}\r\n                onOpen={onOpen}\r\n                onClose={onClose}\r\n              />\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <AskBar />\r\n                  <Answers />\r\n                </Route>\r\n                <Route exact path=\"/answer\">\r\n                  <Questions />\r\n                </Route>\r\n                <Route exact path=\"/spaces\">\r\n                  <Spaces />\r\n                </Route>\r\n                <Route exact path=\"/topics\">\r\n                  <Topics />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                  <NotFound />\r\n                </Route>\r\n              </Switch>\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { Box, useColorMode } from \"@chakra-ui/core\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { QuestionProvider } from \"../../contexts/QuestionProvider\";\r\nimport { SpaceProvider } from \"../../contexts/SpaceProvider\";\r\nimport { TopicProvider } from \"../../contexts/TopicProvider\";\r\nimport Landing from \"../Auth/Landing\";\r\nimport Home from \"./Home\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\n\r\nconst Main = () => {\r\n  const { colorMode } = useColorMode();\r\n  const { isAuth } = useAuth();\r\n\r\n  return (\r\n    <Box bg={colorMode === \"dark\" ? \"initial\" : \"rgb(241, 242, 242)\"}>\r\n      <QuestionProvider>\r\n        <SpaceProvider>\r\n          <TopicProvider>\r\n            <Switch>\r\n              <Route path=\"/\">\r\n                {!isAuth && <Landing />}\r\n                {isAuth && <Home />}\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                {!isAuth && <Landing />}\r\n                {isAuth && <Redirect to=\"/\" />}\r\n              </Route>\r\n            </Switch>\r\n          </TopicProvider>\r\n        </SpaceProvider>\r\n      </QuestionProvider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n// rgb(40, 40, 41)\r\n//rgb(241, 242, 242)\r\n","import \"./css/fonts.css\";\nimport \"./App.css\";\nimport Main from \"./components/Layout/Main\";\nimport { useAuth } from \"./contexts/AuthProvider\";\nimport { useCallback, useEffect } from \"react\";\nimport socket from \"./socket\";\nimport {\n  ThemeProvider,\n  CSSReset,\n  theme,\n  ColorModeProvider,\n  useColorMode,\n  Box,\n  IconButton,\n} from \"@chakra-ui/core\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import \"./css/bootstrap.css\";\n\nexport function ThemeToggler() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <Box\n      textAlign=\"right\"\n      width=\"5%\"\n      position=\"fixed\"\n      bottom=\"20px\"\n      right=\"25px\"\n      zIndex=\"99\"\n    >\n      <IconButton\n        icon={colorMode === \"light\" ? \"moon\" : \"sun\"}\n        onClick={toggleColorMode}\n        variant=\"ghost\"\n      />\n    </Box>\n  );\n}\n\nfunction App() {\n  const { setOnline } = useAuth();\n  const setUserOffline = useCallback(() => {\n    setOnline(false);\n  }, [setOnline]);\n\n  useEffect(() => {\n    if (socket !== undefined) {\n      socket.on(\"userOnline\", (res) => {\n        setOnline((prev) => (prev = res.isOnline));\n      });\n\n      socket.on(\"connect_error\", () => {\n        if (socket.disconnected) {\n          setUserOffline();\n        }\n      });\n    }\n    return () => {\n      if (socket !== undefined && socket.connected) {\n      }\n      return;\n    };\n    //eslint-disable-next-line\n  }, []);\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <ColorModeProvider>\n          <CSSReset />\n          <ThemeToggler />\n          <Main />\n        </ColorModeProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AuthProvider from \"./contexts/AuthProvider\";\nimport TimeAgo from \"javascript-time-ago\";\n\nimport en from \"javascript-time-ago/locale/en\";\nTimeAgo.addDefaultLocale(en);\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}