{"version":3,"sources":["contexts/QuestionProvider.js","config.js","contexts/SpaceProvider.js","setAuthToken.js","contexts/AuthProvider.js","components/Auth/Login.jsx","components/Auth/Signup.jsx","img/landing2.jpg","img/logo2.png","components/Auth/Landing.jsx","img/logo1.png","components/Layout/Navbar.jsx","components/Question/AskModal.jsx","components/Answer/Editor.jsx","socket.js","components/Answer/SingleAnswer.jsx","components/Answer/Answers.jsx","components/Layout/PageLoader.jsx","components/Layout/NotFound.jsx","components/Question/Editor.jsx","components/Question/SingleQuestion.jsx","components/Question/Questions.jsx","components/Question/AskBar.jsx","components/Spaces/AddSpaceModal.jsx","components/Spaces/Spaces.jsx","components/Layout/Home.jsx","components/Layout/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["QCtx","React","createContext","useQuestion","useContext","QuestionProvider","children","useDisclosure","isOpen","onOpen","onClose","useState","recentQ","setRecentQ","Provider","value","BASE_API_URL","SCtx","useSpace","SpaceProvider","toast","useToast","spaces","setSpaces","error","setError","loading","setLoading","creating","setCreating","similarSpace","setSimilar","getSpaces","useCallback","Axios","get","then","response","console","log","data","catch","title","status","duration","isClosable","message","createSpace","spaceName","spaceDesc","post","description","space","setAuthToken","token","axios","defaults","headers","common","AuthCtx","useAuth","AuthProvider","isUnv","setUnv","isAuth","setIsAuth","isOnline","setOnline","user","setUser","registrationIsComplete","setRegComplete","useEffect","checkAuth","setAuth","localStorage","setItem","JSON","stringify","parse","getItem","decoded","jwt_decode","currentTime","Date","now","exp","removeItem","login","values","email","cogoToast","password","logout","register","name","firstname","lastname","gender","password2","confirmpassword","request","Login","initialFocusRef","useRef","show","setShow","requesting","setRequesting","handleClick","initialValues","onSubmit","setSubmitting","validationSchema","Yup","shape","required","min","props","touched","errors","handleChange","handleBlur","handleSubmit","isValid","Flex","width","align","justifyContent","Box","my","textAlign","maxWidth","noValidate","FormControl","isRequired","Popover","placement","closeOnBlur","FormLabel","Input","autoFocus","type","placeholder","onChange","onBlur","isInvalid","errorBorderColor","zIndex","color","bg","borderColor","pt","fontWeight","border","onClick","d","alignItems","pb","ButtonGroup","size","Button","variantColor","success","ref","CircularProgress","mt","InputGroup","pr","h","disabled","_hover","isIndeterminate","Text","style","to","Signup","nullable","oneOf","RadioGroup","isInline","Radio","FormHelperText","id","Alert","variant","flexDirection","height","mr","mb","fontSize","className","Landing","pathname","useLocation","position","overflowY","w","p","top","left","base","md","display","Image","src","logo2","landingImg","objectFit","minHeight","exact","path","Navbar","colorMode","useColorMode","overflow","boxShadow","background","padding","lg","px","logo1","alt","paddingLeft","htmlFor","Icon","textTransform","ml","Tooltip","hasArrow","label","IconButton","aria-label","icon","mx","Badge","Avatar","profileurl","Stack","as","MdHome","Menu","minH","cursor","Divider","AskModal","step","setStep","question","setQuestion","setTitle","setDescription","topics","setTopics","selectedtopics","setSelected","submitting","handleToggle","cf","current","autosize","destroy","event","target","checked","indexOf","prev","s","splice","fetchTopics","submitTopic","undefined","submitQuestion","nextStep","toString","includes","prevStep","in","styles","Modal","isCentered","scrollBehavior","closeOnOverlayClick","borderRadius","marginBottom","listStyle","marginLeft","Textarea","transition","autocomplete","e","Skeleton","map","topic","Checkbox","isFullWidth","_id","Collapse","isDisabled","length","Editor","theme","readOnly","socket","io","query","SingleAnswer","answer","ans","setAns","upvotes","upvs","setUpvs","dwvs","setDwvs","serializeVotes","votes","setter","vbx","v","push","downvotes","on","res","div","initial","opacity","animate","exit","slug","py","flexWrap","t","marginY","date","createdAt","a_id","emit","answerId","userId","marginRight","comments","Answers","feed","setFeed","getFeed","topicAnswers","fd","PageLoader","NotFound","editorHtml","setHtml","modules","formats","toolbar","header","list","clipboard","matchVisual","SingleQuestion","reload","q","setQ","isAnswering","setAnswering","answers","followers","q_id","questionId","marginTop","fallback","qid","Question","qs","setQs","getQuestions","questions","Link","AskBar","textDecoration","right","require","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","AddSpceModal","setName","setDesc","initialRef","Spaces","Home","setTimeout","margin","paddingX","paddingY","List","borderLeft","activeStyle","maxW","Questions","Main","ThemeToggler","toggleColorMode","bottom","App","setUserOffline","disconnected","connected","ThemeProvider","ColorModeProvider","CSSReset","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TimeAgo","addDefaultLocale","en","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oYAGMA,EAAOC,IAAMC,gBACJ,SAASC,IACtB,OAAOC,qBAAWJ,GAGb,IAAMK,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,cAA5BC,EADwC,EACxCA,OAAQC,EADgC,EAChCA,OAAQC,EADwB,EACxBA,QADwB,EAElBT,IAAMU,SAAS,MAFG,mBAEzCC,EAFyC,KAEhCC,EAFgC,KAIhD,OACE,cAACb,EAAKc,SAAN,CACEC,MAAO,CACLP,SACAC,SACAC,UACAE,UACAC,cANJ,SASGP,K,0BCtBMU,EAAe,uCCKtBC,EAAOhB,IAAMC,gBACJ,SAASgB,IACtB,OAAOd,qBAAWa,GAGb,IAAME,EAAgB,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,EACTC,cAA5BC,EADqC,EACrCA,OAAQC,EAD6B,EAC7BA,OAAQC,EADqB,EACrBA,QAClBU,EAAQC,cAF+B,EAGjBV,mBAAS,IAHQ,mBAGtCW,EAHsC,KAG9BC,EAH8B,OAInBZ,oBAAS,GAJU,mBAItCa,EAJsC,KAI/BC,EAJ+B,OAKfd,oBAAS,GALM,mBAKtCe,EALsC,KAK7BC,EAL6B,OAMbhB,oBAAS,GANI,mBAMtCiB,EANsC,KAM5BC,EAN4B,OAOVlB,mBAAS,MAPC,mBAOtCmB,EAPsC,KAOxBC,EAPwB,KASvCC,EAAYC,uBAAY,WAC5BN,GAAW,GACXF,GAAS,GACTS,IAAMC,IAAInB,EAAe,WACtBoB,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrBjB,EAAUc,EAASG,KAAKlB,QACxBK,GAAW,MAEZc,OAAM,SAAUjB,GACfG,GAAW,GACXF,GAAS,GACLD,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,OACxCJ,EAAM,CACJsB,MAAOlB,EAAMa,SAASG,KAAKhB,MAC3BmB,OAAQ,QACRC,SAAU,IACVC,YAAY,IAGXrB,EAAMa,UACTjB,EAAM,CACJsB,MAAOlB,EAAMsB,QACbH,OAAQ,QACRC,SAAU,IACVC,YAAY,SAInB,IA8CH,OACE,cAAC5B,EAAKH,SAAN,CACEC,MAAO,CACLP,SACAC,SACAC,UACAY,SACAE,QACAE,UACAM,YACAe,YAvDc,SAACC,EAAWC,GAC9BpB,GAAY,GACZJ,GAAS,GACTS,IAAMgB,KAAKlC,EAAe,UAAW,CACnC0B,MAAOM,EACPG,YAAaF,IAEZb,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrBX,GAAY,GACTQ,EAASG,KAAKhB,OAASa,EAASG,KAAKY,MACtCrB,EAAWM,EAASG,OAGpBR,IACCZ,EAAM,CACJsB,MAAO,gBACPC,OAAQ,OACRC,SAAU,IACVC,YAAY,IAEfnC,QAGH+B,OAAM,SAAUjB,GACfK,GAAY,GACZJ,GAAS,GACLD,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,OACxCJ,EAAM,CACJsB,MAAOlB,EAAMa,SAASG,KAAKhB,MAC3BmB,OAAQ,QACRC,SAAU,IACVC,YAAY,IAGXrB,EAAMa,UACTjB,EAAM,CACJsB,MAAOlB,EAAMsB,QACbH,OAAQ,QACRC,SAAU,IACVC,YAAY,QAgBhBjB,WACAE,eACAC,cAZJ,SAeGzB,K,kJCpGQ+C,EARM,SAACC,GAChBA,EACFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAE1CC,IAAMC,SAASC,QAAQC,OAAvB,eCCLC,EAAU1D,IAAMC,gBACf,SAAS0D,IACd,OAAOxD,qBAAWuD,GAGpB,IAuHeE,EAvHM,SAAC,GAAkB,IAAhBvD,EAAe,EAAfA,SAAe,EACbK,oBAAS,GADI,mBAC9BmD,EAD8B,KACvBC,EADuB,OAETpD,oBAAS,GAFA,mBAE9BqD,EAF8B,KAEtBC,EAFsB,OAGPtD,oBAAS,GAHF,mBAG9BuD,EAH8B,KAGpBC,EAHoB,OAIbxD,mBAAS,MAJI,mBAI9ByD,EAJ8B,KAIxBC,EAJwB,OAKP1D,oBAAS,GALF,mBAK9Be,EAL8B,KAKrBC,EALqB,OAMYhB,oBAAS,GANrB,mBAM9B2D,EAN8B,KAMNC,EANM,KAQrCC,qBAAU,WACRC,MAEC,CAACT,IAGJ,IAAIU,EAAU,SAACpB,GACb3B,GAAW,GACXgD,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUxB,IACtDD,EAAaC,GACbW,GAAU,IAsDRQ,EAAY,SAAZA,IACF,IAAInB,EAAQuB,KAAKE,MAAMJ,aAAaK,QAAQ,mBAC5C,GAAI1B,EAAO,CACT,IAAI2B,EAAUC,YAAW5B,GACnB6B,EAAcC,KAAKC,MAAQ,IAE7BJ,EAAQK,IAAMH,GAChBR,aAAaY,WAAW,kBACxBd,MAEAR,GAAU,GACVZ,EAAaC,GACbe,EAAQY,SAGVhB,GAAU,IAOd,OACE,cAACN,EAAQ7C,SAAT,CACEC,MAAO,CACLiD,SAEAM,yBACA5C,UACAC,aACA6D,MAhFM,SAACC,GACX9D,GAAW,GACX4B,IACGL,KAAKlC,EAAe,eAAgByE,GACpCrD,MAAK,SAACC,GAAc,IACXiB,EAAUjB,EAASG,KAAnBc,MACRoB,EAAQpB,MAETb,OAAM,SAAUjB,GACfG,GAAW,GAEPH,EAAMa,UAAYb,EAAMa,SAASG,KAAKkD,MACxCC,IAAUnE,MAAMA,EAAMa,SAASG,KAAKkD,OAC3BlE,EAAMa,UAAYb,EAAMa,SAASG,KAAKoD,SAC/CD,IAAUnE,MAAMA,EAAMa,SAASG,KAAKoD,UAC3BpE,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,MAC/CuC,GAAO,GAEP4B,IAAUnE,MAAMA,EAAMsB,aA+DxB+C,OAbS,WACblB,aAAaY,WAAW,kBACxBd,KAYIqB,SA3DS,SAACL,GACd9D,GAAW,GACX,IAAIa,EAAO,CACTuD,KAAMN,EAAOO,UAAY,IAAMP,EAAOQ,SACtCP,MAAOD,EAAOC,MACdQ,OAAQT,EAAOS,OACfN,SAAUH,EAAOG,SACjBO,UAAWV,EAAOW,iBAEpB7C,IACGL,KAAKlC,EAAe,kBAAmBwB,GACvCJ,MAAK,SAACC,GACLkC,GAAe,GACf5C,GAAW,MAEZc,OAAM,SAAUjB,GACfG,GAAW,GACPH,EAAMa,UAAYb,EAAMa,SAASG,KAAKkD,MACxCC,IAAUnE,MAAMA,EAAMa,SAASG,KAAKkD,OAC3BlE,EAAM6E,QACfV,IAAUnE,MAAMA,EAAM6E,SAEtBV,IAAUnE,MAAMA,EAAMsB,aAsCxBgB,QACAC,SACAW,UACAN,OACAC,UACAH,WACAC,aAhBJ,SAmBG7D,KCqHQgG,MArNf,WACE,IAAMC,EAAkBC,mBADT,EAG2B5C,IAAlC4B,EAHO,EAGPA,MAAO9D,EAHA,EAGAA,QAASoC,EAHT,EAGSA,MAAOC,EAHhB,EAGgBA,OAHhB,EAISpD,oBAAS,GAJlB,mBAIR8F,EAJQ,KAIFC,EAJE,OAKqB/F,oBAAS,GAL9B,mBAKRgG,EALQ,KAKIC,EALJ,KAMTxF,EAAQC,cACRwF,EAAc,kBAAMH,GAASD,IA0CnC,OACE,cAAC,IAAD,CACEK,cAAe,CACbpB,MAAO,GAEPE,SAAU,IAEZmB,SAAU,SAACtB,EAAD,GAAgC,IAArBuB,EAAoB,EAApBA,cACnBxB,EAAMC,GACNuB,GAAc,IAEhBC,iBAAkBC,MAAaC,MAAM,CACnCzB,MAAOwB,MACJxB,MAAM,oBACN0B,SAAS,qBACZxB,SAAUsB,MACPG,IAAI,EAAG,0CACPD,SAAS,0BAhBhB,SAmBG,SAACE,GAAW,IAET7B,EAOE6B,EAPF7B,OACA8B,EAMED,EANFC,QACAC,EAKEF,EALFE,OACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,WACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,QAEF,OACE,cAACC,EAAA,EAAD,CAAMC,MAAM,OAAOC,MAAM,OAAOC,eAAe,OAA/C,SACE,eAACC,EAAA,EAAD,CACEC,GAAI,EACJC,UAAU,OACVL,MAAO,CAAC,MAAO,MAAO,MAAO,OAC7BM,SAAS,QAJX,UAME,uBAAMC,YAAU,EAACtB,SAAUY,EAA3B,UACE,cAACW,EAAA,EAAD,CAAaC,YAAU,EAAvB,SACE,eAACC,EAAA,EAAD,CACEjC,gBAAiBA,EACjBkC,UAAU,SACVC,aAAa,EACblI,OAAQsD,EAJV,UAME,cAAC6E,EAAA,EAAD,oBACA,cAACH,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLC,YAAY,gBACZC,SAAUvB,EACVwB,OAAQvB,EACR3G,MAAO0E,EAAOC,MACdK,KAAK,QACLmD,UAAW1B,EAAO9B,OAAS6B,EAAQ7B,MACnCyD,iBAAiB,UACjBZ,YAAU,MAGd,eAACC,EAAA,EAAD,CACEY,OAAQ,EACRC,MAAM,QACNC,GAAG,WACHC,YAAY,WAJd,UAME,cAACf,EAAA,EAAD,CACEgB,GAAI,EACJC,WAAW,OACXC,OAAO,IACPL,MAAM,UAJR,+BAQA,cAACb,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CACEmB,QAAS,WACP5F,GAAO,MAGX,eAACyE,EAAA,EAAD,2BACgB/C,EAAOC,MADvB,sEAIA,cAAC8C,EAAA,EAAD,CACEkB,OAAO,IACPE,EAAE,OACFC,WAAW,SACX7B,eAAe,WACf8B,GAAI,EALN,SAOE,cAACC,EAAA,EAAD,CAAaC,KAAK,KAAlB,SACE,eAACC,EAAA,EAAD,CACEC,aAAa,OACbP,QAAS,WAvIX,IAACjE,IAwIqBD,EAAOC,MAvInDkB,GAAc,GACd1E,IAAMgB,KAAKlC,EAAe,2BAA4B,CAAE0E,MAAOA,IAC5DtD,MAAK,SAACC,GACL0B,GAAO,GACP3C,EAAM,CACJsB,MAAOL,EAASG,KAAK2H,QACrBxH,OAAQ,UACRC,SAAU,IACVC,YAAY,IAEd+D,GAAc,MAEfnE,OAAM,SAAUjB,GACfoF,GAAc,GACVpF,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,MACxCJ,EAAM,CACJsB,MAAOlB,EAAMa,SAASG,KAAKhB,MAC3BmB,OAAQ,QACRC,SAAU,IACVC,YAAY,IAELrB,EAAM6E,QACfjF,EAAM,CACJsB,MAAOlB,EAAM6E,QACb1D,OAAQ,QACRC,SAAU,IACVC,YAAY,IAGdzB,EAAM,CACJsB,MAAOlB,EAAMsB,QACbH,OAAQ,QACRC,SAAU,IACVC,YAAY,QAwGIuH,IAAK7D,EALP,WAOII,GAAc,eACfA,GACC,cAAC0D,EAAA,EAAD,CAAkBhB,MAAM,QAAQW,KAAK,wBAQnD,eAAC1B,EAAA,EAAD,CAAagC,GAAI,EAAG/B,YAAU,EAA9B,UACE,cAACI,EAAA,EAAD,uBACA,eAAC4B,EAAA,EAAD,CAAYP,KAAK,KAAjB,UACE,cAACpB,EAAA,EAAD,CACEO,iBAAiB,UACjBD,UAAW1B,EAAO5B,UAAY2B,EAAQ3B,SACtCoD,SAAUvB,EACVwB,OAAQvB,EACR3G,MAAO0E,EAAOG,SACdG,KAAK,WACLyE,GAAG,SACH1B,KAAMrC,EAAO,OAAS,WACtBsC,YAAY,mBAEd,cAAC,IAAD,CAAmBjB,MAAM,SAAzB,SACE,cAACmC,EAAA,EAAD,CAAQQ,EAAE,UAAUT,KAAK,KAAKL,QAAS9C,EAAvC,SACGJ,EAAO,OAAS,iBAKzB,eAACwD,EAAA,EAAD,CACEnC,MAAM,OACNwC,GAAI,EACJxB,KAAK,SACL4B,UAAW9C,GAAWlG,EACtBiJ,OAAQ,CAAEpB,YAAa,WAAYD,GAAI,YALzC,WAOI5H,GAAW,UACZA,GACC,cAAC2I,EAAA,EAAD,CACEO,iBAAe,EACfZ,KAAK,OACLX,MAAM,gBAKd,eAACwB,EAAA,EAAD,oCACyB,IACvB,+BACE,cAAC,IAAD,CAAMC,MAAO,CAAEzB,MAAO,QAAU0B,GAAG,UAAnC,yC,mCCSHC,MAtNf,WAAmB,IAAD,EAC8CpH,IAAtDkC,EADQ,EACRA,SAAUpE,EADF,EACEA,QAASsC,EADX,EACWA,OAAQM,EADnB,EACmBA,uBADnB,EAEQ3D,oBAAS,GAFjB,mBAET8F,EAFS,KAEHC,EAFG,KAGVG,EAAc,kBAAMH,GAASD,IACnC,OAAIzC,EACK,cAAC,IAAD,CAAU+G,GAAG,OAEtBzI,QAAQC,IAAIyB,GAEV,sCACIM,GACA,cAAC,IAAD,CACEwC,cAAe,CACbpB,MAAO,GACPM,UAAW,GACXC,SAAU,GACVL,SAAU,GACVM,OAAQ,GACRE,gBAAiB,IAEnBW,SAAU,SAACtB,EAAD,GAAgC,IAArBuB,EAAoB,EAApBA,cACnBlB,EAASL,GACTuB,GAAc,IAEhBC,iBAAkBC,MAAaC,MAAM,CACnCnB,UAAWkB,MAAaE,SAAS,0BACjClB,OAAQgB,MAAa+D,WAAW7D,SAAS,sBACzCnB,SAAUiB,MAAaE,SAAS,yBAChC1B,MAAOwB,MACJxB,MAAM,oBACN0B,SAAS,qBACZxB,SAAUsB,MACPG,IAAI,EAAG,0CACPD,SAAS,wBACZhB,gBAAiBc,MACdgE,MAAM,CAAChE,IAAQ,YAAa,MAAO,wBACnCE,SAAS,uCAzBhB,SA4BG,SAACE,GAAW,IAET7B,EAQE6B,EARF7B,OACA8B,EAOED,EAPFC,QACAC,EAMEF,EANFE,OAEAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,WACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,QAEF,OACE,cAACC,EAAA,EAAD,CAAMC,MAAM,OAAOC,MAAM,OAAOC,eAAe,OAA/C,SACE,eAACC,EAAA,EAAD,CACEC,GAAI,EACJC,UAAU,OACVL,MAAO,CAAC,MAAO,MAAO,MAAO,OAC7BM,SAAS,QAJX,UAME,uBAAMC,YAAU,EAACtB,SAAUY,EAA3B,UACE,eAACW,EAAA,EAAD,CAAaC,YAAU,EAAvB,UACE,cAACI,EAAA,EAAD,yBACA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,OACLC,YAAY,WACZC,SAAUvB,EACVwB,OAAQvB,EACR3G,MAAO0E,EAAOO,UACdD,KAAK,YACLmD,UAAW1B,EAAOxB,WAAauB,EAAQvB,UACvCmD,iBAAiB,UACjBZ,YAAU,OAGd,eAACD,EAAA,EAAD,CAAaC,YAAU,EAAC+B,GAAI,EAA5B,UACE,cAAC3B,EAAA,EAAD,wBACA,cAACC,EAAA,EAAD,CACEE,KAAK,OACLC,YAAY,UACZC,SAAUvB,EACVwB,OAAQvB,EACR3G,MAAO0E,EAAOQ,SACdF,KAAK,WACLmD,UAAW1B,EAAOvB,UAAYsB,EAAQtB,SACtCkD,iBAAiB,UACjBZ,YAAU,OAGd,eAACD,EAAA,EAAD,CAAagC,GAAI,EAAG/B,YAAU,EAA9B,UACE,cAACI,EAAA,EAAD,oBACA,cAACC,EAAA,EAAD,CACEE,KAAK,QACLC,YAAY,gBACZC,SAAUvB,EACVwB,OAAQvB,EACR3G,MAAO0E,EAAOC,MACdK,KAAK,QACLmD,UAAW1B,EAAO9B,OAAS6B,EAAQ7B,MACnCyD,iBAAiB,UACjBZ,YAAU,OAGd,eAACD,EAAA,EAAD,CAAaC,YAAU,EAAC+B,GAAI,EAA5B,UACE,cAAC3B,EAAA,EAAD,4BAEA,eAACwC,EAAA,EAAD,CACEC,UAAQ,EACRrF,KAAK,SACLiD,SAAUvB,EACV1G,MAAO0E,EAAOS,OAJhB,UAME,cAACmF,EAAA,EAAD,CAAOtK,MAAM,OAAb,kBACA,cAACsK,EAAA,EAAD,CAAOtK,MAAM,SAAb,0BAGJ,eAACuH,EAAA,EAAD,CAAagC,GAAI,EAAG/B,YAAU,EAA9B,UACE,cAACI,EAAA,EAAD,uBACA,eAAC4B,EAAA,EAAD,CAAYP,KAAK,KAAjB,UACE,cAACpB,EAAA,EAAD,CACEO,iBAAiB,UACjBD,UAAW1B,EAAO5B,UAAY2B,EAAQ3B,SACtCoD,SAAUvB,EACVwB,OAAQvB,EACR3G,MAAO0E,EAAOG,SACdG,KAAK,WACLyE,GAAG,SACH1B,KAAMrC,EAAO,OAAS,WACtBsC,YAAY,mBAEd,cAAC,IAAD,CAAmBjB,MAAM,SAAzB,SACE,cAACmC,EAAA,EAAD,CAAQQ,EAAE,UAAUT,KAAK,KAAKL,QAAS9C,EAAvC,SACGJ,EAAO,OAAS,cAIvB,cAAC6E,EAAA,EAAD,CAAgBC,GAAG,uBAAnB,wDAIF,eAACjD,EAAA,EAAD,CAAagC,GAAI,EAAG/B,YAAU,EAA9B,UACE,cAACI,EAAA,EAAD,+BACA,cAAC4B,EAAA,EAAD,CAAYP,KAAK,KAAjB,SACE,cAACpB,EAAA,EAAD,CACEO,iBAAiB,UACjBD,UACE1B,EAAOpB,iBAAmBmB,EAAQnB,gBAEpC4C,SAAUvB,EACVwB,OAAQvB,EACR3G,MAAO0E,EAAOW,gBACdL,KAAK,kBACLyE,GAAG,SACH1B,KAAK,WACLC,YAAY,wBAIlB,eAACkB,EAAA,EAAD,CACEnC,MAAM,OACNwC,GAAI,EACJxB,KAAK,SACL4B,UAAW9C,GAAWlG,EACtBiJ,OAAQ,CAAEpB,YAAa,WAAYD,GAAI,YALzC,WAOI5H,GAAW,UACZA,GACC,cAAC2I,EAAA,EAAD,CACEO,iBAAe,EACfZ,KAAK,OACLX,MAAM,gBAKd,eAACwB,EAAA,EAAD,sCAC2B,IACzB,+BACE,cAAC,IAAD,CAAMC,MAAO,CAAEzB,MAAO,QAAU0B,GAAG,IAAnC,sCAYfzG,GACC,eAACkH,EAAA,EAAD,CACE7I,OAAO,UACP8I,QAAQ,SACRC,cAAc,SACd1D,eAAe,SACfG,UAAU,SACVwD,OAAO,QANT,UAQE,cAACH,EAAA,EAAD,CAAWxB,KAAK,OAAO4B,GAAI,IAC3B,cAACJ,EAAA,EAAD,CAAYlB,GAAI,EAAGuB,GAAI,EAAGC,SAAS,KAAKC,UAAU,QAAlD,sCAGA,eAACP,EAAA,EAAD,CAAkBpD,SAAS,KAAK2D,UAAU,QAA1C,uDAEE,uBAFF,2GCnOK,MAA0B,qCCA1B,MAA0B,kCC8E1BC,EAvEC,WAAO,IACbC,EAAaC,cAAbD,SACR,OACE,cAAChE,EAAA,EAAD,UACE,eAACJ,EAAA,EAAD,CAAM8D,OAAO,QAAQ7D,MAAM,QAAQqE,SAAS,QAAQC,UAAU,SAA9D,UACE,eAACnE,EAAA,EAAD,CAAKoE,EAAG,CAAC,KAAM,KAAM,MAAO,OAA5B,UACE,cAACpE,EAAA,EAAD,CACEqE,EAAG,EACHhD,GAAG,UACH6C,SAAS,QACTI,IAAI,IACJC,KAAK,IACL1E,MAAO,CAAE2E,KAAM,OAAQC,GAAI,eAC3BC,QAAQ,OACR3E,eAAe,SARjB,SAUE,cAAC4E,EAAA,EAAD,CAAOC,IAAKC,EAAOhF,MAAM,YAE3B,cAAC8E,EAAA,EAAD,CACEC,IAAKE,EACLjF,MAAM,OACN6D,OAAO,OACPqB,UAAU,aAGd,cAAC/E,EAAA,EAAD,CACEoE,EAAG,CAAC,OAAQ,OAAQ,MAAO,OAC3BC,EAAG,EACH9C,GAAI,GACJyD,UAAU,OACVb,UAAU,SALZ,SAOE,eAACvE,EAAA,EAAD,CAAM6D,cAAc,SAAS1D,eAAe,SAASiF,UAAU,OAA/D,UACgB,MAAbhB,GACC,eAAChE,EAAA,EAAD,WACE,cAAC4C,EAAA,EAAD,CAAMiB,SAAU,CAAC,MAAO,MAAO,MAAO,OAAQC,UAAU,QAAxD,sBAGA,cAAClB,EAAA,EAAD,CAAMiB,SAAU,CAAC,MAAO,MAAO,MAAO,OAAQC,UAAU,QAAxD,6BAGA,eAAClB,EAAA,EAAD,CAAML,GAAI,EAAGsB,SAAS,KAAKC,UAAU,QAArC,kIAE6D,UAInD,YAAbE,GACC,eAAChE,EAAA,EAAD,WACE,cAAC4C,EAAA,EAAD,CAAMiB,SAAU,CAAC,MAAO,MAAO,MAAO,OAAQC,UAAU,QAAxD,qBAGA,eAAClB,EAAA,EAAD,CAAML,GAAI,EAAGsB,SAAS,KAAKC,UAAU,QAArC,0GAEiC,UAIrC,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,iB,qHCrEC,OAA0B,kCCgW1BC,OAlUf,YAA6C,EAA3B5M,OAA4B,IAApBC,EAAmB,EAAnBA,OAAmB,KAAXC,QACLkD,KAAnBQ,EADmC,EACnCA,KAAMF,EAD6B,EAC7BA,SAENmJ,EAAcC,cAAdD,UACR,OACE,qCACE,cAACxF,EAAA,EAAD,CACEgC,WAAW,SACX7B,eAAe,SACfF,MAAM,QACNM,SAAS,QACTmF,SAAS,SACT5B,OAAO,OACP6B,UAAW,CAAEf,KAAM,IAAKC,GAAI,MAC5Be,WAAY,CACVhB,KAAM,UACNC,GAAkB,SAAdW,EAAuB,UAAY,SAV3C,SAaE,eAACxF,EAAA,EAAD,CACEG,eAAgB,CAAEyE,KAAM,SAAUC,GAAI,iBACtC7C,WAAW,SACXzB,SAAS,SACTN,MAAM,OAEN4F,QAAS,CAAEjB,KAAM,SAAUC,GAAI,QAASiB,GAAI,UAC5CxB,SAAS,WAPX,UASE,eAAClE,EAAA,EAAD,CAAK0E,QAAQ,OAAO9C,WAAW,SAA/B,UACE,eAAC,IAAD,CAAMkB,GAAG,IAAT,UACE,cAAC9C,EAAA,EAAD,CACE0E,QAAS,CAAEF,KAAM,OAAQC,GAAI,WAC7Bf,OAAO,OACP9B,WAAW,SACX+D,GAAI,EAJN,SAME,cAAChB,EAAA,EAAD,CACED,QAAS,CAAEF,KAAM,OAAQC,GAAI,WAC7BG,IAAmB,SAAdQ,EAAuBP,EAAQe,GACpCC,IAAI,kBACJhG,MAAM,YAIV,cAACG,EAAA,EAAD,CACE0E,QAAS,CAAEF,KAAM,UAAWC,GAAI,QAChCf,OAAO,OACP9B,WAAW,SACX+D,GAAI,EAJN,SAME,cAAChB,EAAA,EAAD,CACED,QAAS,CAAEF,KAAM,UAAWC,GAAI,QAChCG,IAAKC,EACLgB,IAAI,kBACJhG,MAAM,eAKZ,cAACG,EAAA,EAAD,CAAKC,GAAI,EAAGyE,QAAS,CAAEF,KAAM,OAAQC,GAAI,SAAzC,SACE,eAACnC,EAAA,EAAD,WACE,cAAC,IAAD,CACEwD,YAAY,OACZzN,SACE,cAACqI,EAAA,EAAD,CAAWqF,QAAQ,iBAAnB,SACE,cAACC,GAAA,EAAD,CAAMlI,KAAK,SAASsD,MAAM,iBAIhC,cAACT,EAAA,EAAD,CACEE,KAAK,OACLyC,GAAG,iBACHE,QAAQ,SACR1C,YAAY,sBAMpB,eAACd,EAAA,EAAD,CACEuC,GAAI,EACJmC,QAAS,CAAEF,KAAM,OAAQC,GAAI,QAC7B7C,WAAW,SACXkC,UAAU,QAJZ,UAME,eAAC9D,EAAA,EAAD,CACE0D,OAAO,OACPgB,QAAQ,OACR9C,WAAW,SACXqE,cAAc,YAJhB,UAME,eAAC,IAAD,CACEnD,GAAG,UACHgB,UAAU,OACVjB,MAAO,CACLa,OAAQ,OACRgB,QAAS,OACT9C,WAAY,SACZR,MAAO,OACPqE,QAAS,SAEXE,GAAI,EAVN,UAYE,cAACK,GAAA,EAAD,CAAMlI,KAAK,OAAO6F,GAAI,EAAG5B,KAAK,SAZhC,YAeA,eAAC,IAAD,CACEe,GAAG,UACHgB,UAAU,OACVjB,MAAO,CACLa,OAAQ,OACRgB,QAAS,OACT9C,WAAY,SACZR,MAAO,OACPqE,QAAS,SAEXE,GAAI,EAVN,UAYE,sBAAM9C,MAAO,CAAE4C,QAAS,MAAO5B,SAAU,QAAzC,SACE,cAAC,KAAD,MAbJ,YAiBA,eAAC7B,EAAA,EAAD,CACE8B,UAAU,KACVpC,QAASlJ,EACT0N,GAAI,EACJpD,GAAG,UACHD,MAAO,CACLa,OAAQ,OACRgB,QAAS,OACT9C,WAAY,SACZR,MAAqB,SAAdgE,EAAuB,OAAS,UACvCK,QAAS,SAEXE,GAAI,EAZN,UAcE,cAACK,GAAA,EAAD,CACElI,KAAK,mBACL6F,GAAI,EACJ5B,KAAK,OACLX,MAAM,YAlBV,qBAuBF,cAAC+E,GAAA,EAAD,CAASC,UAAQ,EAACC,MAAM,gBAAgB7F,UAAU,SAAlD,SACE,cAAC8F,GAAA,EAAD,CACEC,aAAW,gBACXC,KAAK,OACLhD,QAAQ,QACRzB,KAAK,KACL8B,SAAS,OACTzC,MAAM,WACNqF,GAAI,EAPN,SASE,cAACC,GAAA,EAAD,CAAOR,GAAG,IAAIjE,aAAa,QAA3B,qBAKJ,cAAC0E,GAAA,EAAD,CACEhD,GAAI,EACJiB,IAAc,OAATzI,EAAgB,GAAKA,EAAKyK,WAC/B9I,KAAe,OAAT3B,EAAgB,GAAKA,EAAK2B,KAChCiE,KAAK,KAJP,SAMG9F,GAAY,cAAC0K,GAAA,EAAD,CAAa5E,KAAK,SAASV,GAAG,wBAKnD,eAACwF,GAAA,EAAD,CACE1D,UAAQ,EACRO,OAAO,OACPgB,QAAS,CAAEF,KAAM,OAAQC,GAAI,QAC7B1E,eAAe,SAJjB,UAME,cAACoG,GAAA,EAAD,CAASE,MAAM,OAAOD,UAAQ,EAA9B,SACE,cAAC,IAAD,CACEtD,GAAG,IACHD,MAAO,CACLa,OAAQ,OACRgB,QAAS,OACT9C,WAAY,SACZ6D,QAAS,WACT5F,MAAO,OACPE,eAAgB,UARpB,SAWE,cAACC,EAAA,EAAD,CACE8G,GAAIC,KACJjJ,KAAK,SACLiE,KAAK,OACLX,MAAqB,SAAdgE,EAAuB,OAAS,iBAI7C,cAACe,GAAA,EAAD,CAASE,MAAM,SAASD,UAAQ,EAAhC,SACE,cAAC,IAAD,CACEtD,GAAG,UACHD,MAAO,CACLa,OAAQ,OACRgB,QAAS,OACT9C,WAAY,SACZ6D,QAAS,WACT5F,MAAO,OACPE,eAAgB,UARpB,SAWE,cAACiG,GAAA,EAAD,CACElI,KAAK,OACLiE,KAAK,OACLX,MAAqB,SAAdgE,EAAuB,OAAS,iBAK7C,eAAC4B,GAAA,EAAD,WACE,cAACb,GAAA,EAAD,CAASE,MAAM,UAAUD,UAAQ,EAAjC,SACE,cAACY,GAAA,EAAD,CAAYF,GAAI9G,IAAKH,MAAM,OAA3B,SACE,sBACEgD,MAAO,CACLa,OAAQ,OACRgB,QAAS,OACT9C,WAAY,SACZ6D,QAAS,WACT5F,MAAO,OACPE,eAAgB,UAPpB,SAUE,sBACE8C,MAAO,CACL4C,QAAS,MACT5B,SAAU,OACVzC,MAAqB,SAAdgE,EAAuB,OAAS,WAJ3C,SAOE,cAAC,KAAD,YAKR,eAAC4B,GAAA,EAAD,WACE,cAAC,IAAD,CAAMlE,GAAG,UAAT,SACE,eAACkE,GAAA,EAAD,CAAUC,KAAK,OAAf,UACE,sBACEpE,MAAO,CACL4C,QAAS,MACT5B,SAAU,OACVzC,MAAqB,SAAdgE,EAAuB,OAAS,WAJ3C,SAOE,cAAC,KAAD,MAEF,+CAGJ,cAAC,IAAD,CAAMtC,GAAG,SAAT,SACE,eAACkE,GAAA,EAAD,CAAUC,KAAK,OAAf,UACE,sBACEpE,MAAO,CACL4C,QAAS,MACT5B,SAAU,OACVzC,MAAqB,SAAdgE,EAAuB,OAAS,WAJ3C,SAOE,cAAC,KAAD,MAEF,qDAKR,cAACe,GAAA,EAAD,CAASE,MAAM,gBAAgBD,UAAQ,EAAvC,SACE,cAAC,IAAD,CACEtD,GAAG,iBACHD,MAAO,CACLa,OAAQ,OACRgB,QAAS,OACT9C,WAAY,SACZ6D,QAAS,WACT5F,MAAO,OACPE,eAAgB,UARpB,SAWE,cAACiG,GAAA,EAAD,CACElI,KAAK,OACLiE,KAAK,OACLX,MAAqB,SAAdgE,EAAuB,OAAS,iBAI7C,cAACe,GAAA,EAAD,CAASE,MAAM,OAAOD,UAAQ,EAA9B,SACE,cAACpG,EAAA,EAAD,CACE6C,MAAO,CACLa,OAAQ,OACRgB,QAAS,OACT9C,WAAY,SACZ7B,eAAgB,SAChB0F,QAAS,WACT5F,MAAO,OACPqH,OAAQ,WARZ,SAWE,eAACP,GAAA,EAAD,CACE/B,IAAc,OAATzI,EAAgB,GAAKA,EAAKyK,WAC/B9I,KAAe,OAAT3B,EAAgB,GAAKA,EAAK2B,KAChCiE,KAAK,KAHP,UAKG9F,GAAY,cAAC0K,GAAA,EAAD,CAAa5E,KAAK,SAASV,GAAG,cAE1ClF,EAAKF,UAAY,cAAC0K,GAAA,EAAD,CAAa5E,KAAK,SAASV,GAAG,wBAKxD,cAAC8F,GAAA,EAAD,CAASzC,QAAS,CAAED,GAAI,c,yFCuFf2C,OAtZf,YAA4D,IAAxC7O,EAAuC,EAAvCA,OAAgBE,GAAuB,EAA/BD,OAA+B,EAAvBC,SAASG,EAAc,EAAdA,WACrCO,EAAQC,cAD2C,EAEjCV,mBAAS,GAFwB,mBAElD2O,EAFkD,KAE5CC,EAF4C,OAGjC5O,oBAAS,GAHwB,mBAGlD8F,EAHkD,KAG5CC,EAH4C,OAIzB/F,mBAAS,IAJgB,mBAIlD6O,EAJkD,KAIxCC,EAJwC,OAK/B9O,mBAAS,IALsB,mBAKlD+B,EALkD,KAK3CgN,EAL2C,OAMnB/O,mBAAS,IANU,mBAMlDwC,EANkD,KAMrCwM,EANqC,OAO7B1P,IAAMU,SAAS,IAPc,mBAOlDiP,EAPkD,KAO1CC,EAP0C,OAQnB5P,IAAMU,SAAS,IARI,mBAQlDmP,EARkD,KAQlCC,EARkC,OAS3B9P,IAAMU,UAAS,GATY,mBASlDe,EATkD,KASzCC,EATyC,OAUrB1B,IAAMU,UAAS,GAVM,mBAUlDqP,EAVkD,KAUtChJ,EAVsC,KAYjD5C,GAASR,IAATQ,KAEF6L,GAAe,kBAAMvJ,GAASD,IAG9B2D,GAAM5D,mBACZhC,qBAAU,WACR,IAAI0L,EAAK9F,GAAI+F,QAEb,OADAC,KAAShG,GAAI+F,SACN,WACLC,KAASC,QAAQH,MAElB,IAEH,IAAMzI,GAAe,SAAC6I,GACpB,GACEA,EAAMC,OAAOC,SACbV,EAAeW,SAAgC,IAAxBH,EAAMC,OAAOxP,OAEpCgP,GAAY,SAACW,GAAD,6BAAcA,GAAd,CAAoBJ,EAAMC,OAAOxP,eACxC,CACL,IAAI4P,EAAIb,EACRa,EAAEC,OAAON,EAAMC,OAAOxP,MAAO,GAC7BgP,EAAYY,KAIVE,GAAc5O,uBAAY,WAC9BN,GAAW,GAEXO,IAAMC,IAAInB,EAAe,WACtBoB,MAAK,SAACC,GACL,IAAMG,EAAOH,EAASG,KAAKA,KAC3Bb,GAAW,GACXkO,EAAU,aAAIrN,OAEfC,OAAM,SAAUjB,GACfG,GAAW,GACPH,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,MACxCJ,EAAM,CACJsB,MAAOlB,EAAMa,SAASG,KAAKM,QAC3BH,OAAQ,QACRC,SAAU,IACVC,YAAY,IAGdzB,EAAM,CACJsB,MAAOlB,EAAMsB,QAAU,2BACvBH,OAAQ,QACRC,SAAU,IACVC,YAAY,SAInB,IACGiO,GAAc,WACJ,KAAVpO,GAAgC,KAAhBS,GASpB6D,GAAc,GAEd9E,IAAMgB,KAAKlC,EAAe,UAAW,CACnC0B,MAAOA,EACPS,YAAaA,IAEZf,MAAK,SAACC,GACLsN,EAAe,IACfD,EAAS,IACT1I,GAAc,GACdN,GAAQ,GACR,IAAMlE,EAAOH,EAASG,KAAKA,KAC3BF,QAAQC,IAAIC,QACCuO,IAATvO,GAAsBH,EAASG,KAAKhB,MACtCJ,EAAM,CACJsB,MAAOL,EAASG,KAAKhB,MACrBmB,OAAQ,QACRC,SAAU,IACVC,YAAY,IAKhBgN,GAAU,SAACa,GAAD,oBAAclO,SAEzBC,OAAM,SAAUjB,GACfwF,GAAc,GACVxF,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,MACxCJ,EAAM,CACJsB,MAAOlB,EAAMa,SAASG,KAAKM,QAC3BH,OAAQ,QACRC,SAAU,IACVC,YAAY,IAGdzB,EAAM,CACJsB,MAAOlB,EAAMsB,QACbH,OAAQ,QACRC,SAAU,IACVC,YAAY,QA/ClBzB,EAAM,CACJsB,MAAO,wBACPC,OAAQ,OACRC,SAAU,IACVC,YAAY,KAgDZmO,GAAiB,WACJ,KAAbxB,GAAmBM,IAAmB,IAS1C9I,GAAc,GAEd9E,IAAMgB,KAAKlC,EAAe,aAAc,CACtCwO,SAAUA,EACVI,OAAQE,IAEP1N,MAAK,SAACC,GACLoN,EAAY,IACZM,EAAY,IACZ/I,GAAc,GAEd,IAAMxE,EAAOH,EAASG,KAAKgN,SAC3BlN,QAAQC,IAAIC,QACCuO,IAATvO,GAAsBH,EAASG,KAAKhB,MACtCJ,EAAM,CACJsB,MAAOL,EAASG,KAAKhB,MACrBmB,OAAQ,QACRC,SAAU,IACVC,YAAY,KAIhB0M,EAAQ,GACR7O,IACAG,EAAW2B,OAEZC,OAAM,SAAUjB,GACfwF,GAAc,GACVxF,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,MACxCJ,EAAM,CACJsB,MAAOlB,EAAMa,SAASG,KAAKM,QAC3BH,OAAQ,QACRC,SAAU,IACVC,YAAY,IAGdzB,EAAM,CACJsB,MAAOlB,EAAMsB,QACbH,OAAQ,QACRC,SAAU,IACVC,YAAY,QAhDlBzB,EAAM,CACJsB,MAAO,2BACPC,OAAQ,OACRC,SAAU,IACVC,YAAY,KAiDZoO,GAAW,WACE,KAAbzB,EASCA,EAAS0B,WAAWC,SAAS,KA3KpB,IAoLV7B,IACFC,GAAQ,SAACmB,GAAD,OAAUA,EAAO,KACzBG,MAVAzP,EAAM,CACJsB,MAAO,gCACPC,OAAQ,OACRC,SAAU,IACVC,YAAY,IAbdzB,EAAM,CACJsB,MAAO,2BACPC,OAAQ,OACRC,SAAU,IACVC,YAAY,KAkBZuO,GAAW,WACF,IAAT9B,GACFC,GAAQ,SAACmB,GAAD,OAAUA,EAAO,MAG7B,OACE,mCACE,cAAC,KAAD,CAAOW,GAAI7Q,EAAX,SACG,SAAC8Q,GAAD,OACC,eAACC,GAAA,EAAD,CACEC,YAAU,EACVC,eAAe,SACfC,qBAAqB,EACrBlR,OAAQA,EACRE,QAASA,EACTsJ,KAAM,CAAEyC,KAAM,OAAQC,GAAI,MAN5B,UAQE,cAAC6E,GAAA,EAAD,IACA,eAACA,GAAA,EAAD,WACE,cAACA,GAAA,EAAD,CAAaxF,UAAU,QAAvB,0BAEA,cAACwF,GAAA,EAAD,IACA,cAACnC,GAAA,EAAD,IACU,IAATE,GACC,eAACiC,GAAA,EAAD,CAAWzH,GAAI,EAAf,UACE,qBACEgB,MAAO,CACL6B,QAAS,OACT7E,MAAO,OACP6J,aAAc,MACd3J,eAAgB,gBAChB6B,WAAY,SACZ4D,WAAY,UACZmE,aAAc,OACdlE,QAAS,QATb,SAYE,sBAAK5C,MAAO,CAAEzB,MAAO,UAAWyC,SAAU,QAA1C,UACE,qBAAKhB,MAAO,CAAErB,WAAY,QAAUsC,UAAU,QAA9C,kDAGA,qBAAIjB,MAAO,CAAE+G,UAAW,OAAQC,WAAY,QAA5C,UACE,oFAGA,2EACA,2EAIN,eAAC7J,EAAA,EAAD,CAAK0E,QAAQ,OAAO9C,WAAW,SAAS/B,MAAM,cAA9C,UACE,cAAC8G,GAAA,EAAD,CACE/B,IAAKzI,GAAKyK,WACV9I,KAAM3B,GAAK2B,KACXiE,KAAK,KACL4B,GAAI,IAEN,eAACf,EAAA,EAAD,CAAMiB,SAAS,OAAOzC,MAAM,WAA5B,UACGjF,GAAK2B,KADR,gBAIF,cAACgM,GAAA,EAAD,CACEC,WAAW,cACXxD,aAAW,iBACX3F,WAAS,EACTE,YAAY,sDACZkJ,aAAa,aACb7H,IAAKA,GACLrJ,MAAOyO,EACP/D,QAAQ,UACRzC,SAAU,SAACkJ,GACTzC,EAAYyC,EAAE3B,OAAOxP,aAKnB,IAATuO,GACC,eAACiC,GAAA,EAAD,CAAWzH,GAAI,EAAf,UACE,qBACEgB,MAAO,CACL6B,QAAS,OACT7E,MAAO,OACP6J,aAAc,MACd3J,eAAgB,gBAChB6B,WAAY,SACZ4D,WAAY,UACZmE,aAAc,OACdlE,QAAS,QATb,SAYE,sBAAK5C,MAAO,CAAEzB,MAAO,WAArB,UACE,qBAAKyB,MAAO,CAAErB,WAAY,QAAUsC,UAAU,QAA9C,kDAGA,qBAAIjB,MAAO,CAAE+G,UAAW,OAAQC,WAAY,QAA5C,UACE,iFACA,gEAIN,cAAC7J,EAAA,EAAD,CAAK0E,QAAQ,OAAO9C,WAAW,SAAS/B,MAAM,cAA9C,SACE,cAAC+C,EAAA,EAAD,CAAMiB,SAAS,OAAOC,UAAU,QAAQF,GAAI,EAA5C,6BAIDnK,GACC,qCACG,IACD,cAACyQ,GAAA,EAAD,CAAUrK,MAAM,QAAQ6D,OAAO,OAAOE,GAAI,IAC1C,cAACsG,GAAA,EAAD,CAAUrK,MAAM,QAAQ6D,OAAO,OAAOE,GAAI,IAC1C,cAACsG,GAAA,EAAD,CAAUrK,MAAM,QAAQ6D,OAAO,OAAOE,GAAI,IAC1C,cAACsG,GAAA,EAAD,CAAUrK,MAAM,QAAQ6D,OAAO,OAAOE,GAAI,IAC1C,cAACsG,GAAA,EAAD,CAAUrK,MAAM,QAAQ6D,OAAO,OAAOE,GAAI,QAG5CnK,GACA,mCACGkO,EAAOwC,KAAI,SAACC,GACX,OACE,cAACC,GAAA,EAAD,CAEEC,aAAW,EACXxR,MAAOsR,EAAMG,IACbxJ,SAAUvB,GACVuC,KAAK,KACL1J,SAAU+R,EAAM3P,OALX2P,EAAMG,UAWrB,qCACE,eAACvI,EAAA,EAAD,CACED,KAAK,KACLM,GAAI,EACJX,QAASsG,GACTlE,UAAU,QAJZ,WAMItF,GAAQ,6BACTA,GAAQ,4CAEX,eAACgM,GAAA,EAAD,CAAUnI,GAAI,EAAG9J,OAAQiG,EAAzB,UACE,cAACoE,EAAA,EAAD,CAAMiB,SAAS,QAAQ8B,GAAI,EAAG7B,UAAU,QAAxC,yBAGA,cAACnD,EAAA,EAAD,CACE0B,GAAI,EACJvE,KAAK,QACL0F,QAAQ,UACR1K,MAAO2B,EACPqG,YAAY,2BACZC,SAAU,SAACkJ,GACTxC,EAASwC,EAAE3B,OAAOxP,UAGtB,cAAC6H,EAAA,EAAD,CACE0B,GAAI,EACJmB,QAAQ,UACR1F,KAAK,cACLhF,MAAOoC,EACP4F,YAAY,kCACZC,SAAU,SAACkJ,GACTvC,EAAeuC,EAAE3B,OAAOxP,mBAQpC,eAACwQ,GAAA,EAAD,WACY,IAATjC,GACC,cAACrF,EAAA,EAAD,CAAQN,QAASyH,GAAUxF,GAAI,EAA/B,kBAIQ,IAAT0D,IAAe7I,GACd,eAACwD,EAAA,EAAD,CAAQN,QAASqH,GAAgB9G,aAAa,OAA9C,WACI8F,GAAc,kBACfA,GACC,cAAC3F,EAAA,EAAD,CAAkBO,iBAAe,EAACZ,KAAK,YAInC,IAATsF,GAAc7I,GACb,eAACwD,EAAA,EAAD,CAAQN,QAASmH,GAAa5G,aAAa,OAA3C,WACI8F,GAAc,YACfA,GACC,cAAC3F,EAAA,EAAD,CAAkBO,iBAAe,EAACZ,KAAK,YAInC,IAATsF,GACC,cAACrF,EAAA,EAAD,CAAQyI,WAAgC,IAApBlD,EAASmD,OAAchJ,QAASsH,GAApD,iC,iECjaH,SAAS2B,GAAT,GAA4B,IAAV7R,EAAS,EAATA,MAC/B,OACE,8BACE,cAAC,KAAD,CAAY8R,MAAM,GAAG9R,MAAOA,EAAO+R,UAAQ,M,ICL7CC,G,qBACJ,GAA+C,OAA3CpO,aAAaK,QAAQ,kBAA4B,CACnD,IAAI1B,GAAQuB,KAAKE,MAAMJ,aAAaK,QAAQ,mBACxCC,GAAUC,YAAW5B,SACTyN,IAAZ9L,IAAqC,OAAZA,KAC3B8N,GAASC,KAAG,mCAAoC,CAC9CC,MAAO,CACL1H,GAAItG,GAAQsG,OAKLwH,UCkKAG,OA7Jf,YAAmC,IAAXC,EAAU,EAAVA,OACd/O,EAASR,IAATQ,KACAiJ,EAAcC,cAAdD,UAFwB,EAIV1M,mBAASwS,GAJC,mBAIzBC,EAJyB,KAIpBC,EAJoB,OAKV1S,mBACpByS,EAAIE,QAAQnC,SAAS/M,EAAKmH,IAAM,UAAY,QANd,gCAQR5K,mBAAS,KARD,mBAQzB4S,EARyB,KAQnBC,EARmB,OASR7S,mBAAS,IATD,mBASzB8S,EATyB,KASnBC,EATmB,KAU1BC,EAAiB,SAACC,EAAOC,GAC7B,IAAIC,EAAM,QACI/C,IAAV6C,IACFA,EAAMxB,KAAI,SAAC2B,GAAD,OAAOD,EAAIE,KAAKD,EAAEvB,QAC5BqB,EAAOC,KAwBX,OAdAtP,qBAAU,WACRmP,EAAeP,EAAIE,QAASE,GAC5BG,EAAeP,EAAIa,UAAWP,QACf3C,IAAXgC,IACFA,GAAOmB,GAAG,eAAe,SAACC,GACpBA,EAAI3B,MAAQY,EAAIZ,MAClBa,EAAOc,GACPR,EAAeQ,EAAIb,QAASE,GAC5BG,EAAeQ,EAAIF,UAAWP,SAInC,CAACN,IAGF,cAAC,KAAD,UACE,cAAC,KAAOgB,IAAR,CACEC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAHnB,SAKE,eAACrM,EAAA,EAAD,CACEqE,EAAG,EACHpE,GAAI,EACJsF,UAAU,KACVmE,aAAa,KACbrI,GAAkB,SAAd+D,EAAuB,UAAY,QALzC,UAOE,cAACpF,EAAA,EAAD,CAAK4D,GAAI,EAAT,SACE,cAAChB,EAAA,EAAD,CACEiB,SAAS,OACTrC,WAAW,OACXJ,MAAM,OACN0C,UAAU,QAJZ,SAME,cAAC,IAAD,CAAMhB,GAAI,MAAQqI,EAAI5D,SAASiF,KAA/B,SACGrB,EAAI5D,SAASA,eAIpB,cAAC3H,EAAA,EAAD,CAAM8D,OAAO,cAAc+I,GAAI,EAAGC,SAAS,OAA3C,SACGvB,EAAIxD,OAAOwC,KAAI,SAACwC,GACf,OACE,cAAC3K,EAAA,EAAD,CACED,KAAK,MACLP,WAAW,MAEXoL,QAAQ,MACRnG,GAAI,EACJhB,QAAQ,UANV,SAQE,cAAC,IAAD,CACErE,MAAM,OACN0B,GAAI,MAAQ6J,EAAEH,KACd3J,MAAO,CAAEgB,SAAU,OAAQzC,MAAO,QAClC0C,UAAU,QAJZ,SAMG6I,EAAElS,SAXAkS,EAAEpC,UAiBf,cAACpD,GAAA,EAAD,IACA,cAACnH,EAAA,EAAD,CAAKyM,GAAI,EAAT,SACE,eAAC7M,EAAA,EAAD,CAAMgC,WAAW,SAAjB,UACE,eAAC+E,GAAA,EAAD,CACE5E,KAAK,KACL6C,IAAKuG,EAAIhP,KAAKyK,WACd9I,KAAMqN,EAAIhP,KAAK2B,KACf6F,GAAI,EAJN,UAMG,IACAwH,EAAIhP,KAAKF,UAAY,cAAC0K,GAAA,EAAD,CAAa5E,KAAK,MAAMV,GAAG,iBAEnD,eAACrB,EAAA,EAAD,WACE,cAAC4C,EAAA,EAAD,CAAMkB,UAAU,QAAQD,SAAS,KAAKrC,WAAW,OAAjD,SACG2J,EAAIhP,KAAK2B,OAEZ,eAAC8E,EAAA,EAAD,CAAMkB,UAAU,QAAQD,SAAS,KAAKzC,MAAM,OAA5C,sBACW,cAAC,KAAD,CAAcyL,KAAM,IAAI1P,KAAKgO,EAAI2B,wBAKlD,cAACnC,GAAD,CAAQ7R,MAAOqS,EAAID,SACnB,eAACtL,EAAA,EAAD,CAAMgC,WAAW,SAASS,GAAI,EAAGtC,eAAe,gBAAhD,UACE,eAACC,EAAA,EAAD,WACE,eAACgC,EAAA,EAAD,CACEN,QAAS,WA/FH,IAACqL,IAgGO5B,EAAIZ,IA/F9BO,GAAOkC,KAAK,eAAgB,CAAEC,SAAUF,EAAMG,OAAQ/Q,EAAKmH,MAiG/C2C,cAAc,aACdlE,KAAK,KACL4B,GAAI,EACJvC,MAAOkK,EAAKpC,SAAS/M,EAAKmH,IAAM,UAAY,OAP9C,UASE,cAACtD,EAAA,EAAD,CAAKmN,YAAY,MAAMtJ,SAAS,OAAhC,SACE,cAAC,KAAD,MAED,IAAMsH,EAAIE,QAAQX,UAGrB,eAAC1I,EAAA,EAAD,CACEZ,MAAOoK,EAAKtC,SAAS/M,EAAKmH,IAAM,UAAY,OAC5C5B,QAAS,WA5GD,IAACqL,IA6GO5B,EAAIZ,IA5GhCO,GAAOkC,KAAK,iBAAkB,CAAEC,SAAUF,EAAMG,OAAQ/Q,EAAKmH,MA8GjD2C,cAAc,aACdlE,KAAK,KACL4B,GAAI,EAPN,UASE,cAAC3D,EAAA,EAAD,CAAKmN,YAAY,MAAMtJ,SAAS,OAAhC,SACE,cAAC,KAAD,MAEDsH,EAAIa,UAAUtB,aAGnB,cAAC1K,EAAA,EAAD,UACE,eAACgC,EAAA,EAAD,CAAQiE,cAAc,aAAalE,KAAK,KAAKX,MAAM,OAAOuC,GAAI,EAA9D,UACE,cAAC3D,EAAA,EAAD,CAAKmN,YAAY,MAAMtJ,SAAS,OAAhC,SACE,cAAC,KAAD,MAEDsH,EAAIiC,SAAS1C,uBCvDf2C,OAhGf,WACE,IAAMlU,EAAQC,cADG,EAEOV,mBAAS,IAFhB,mBAEV4U,EAFU,KAEJC,EAFI,OAGS7U,oBAAS,GAHlB,mBAGVa,EAHU,KAGHC,EAHG,OAIad,oBAAS,GAJtB,mBAIVe,EAJU,KAIDC,EAJC,KAMX8T,EAAUxT,uBAAY,WAC1BN,GAAW,GACXF,GAAS,GACTS,IAAMC,IAAInB,EAAe,SACtBoB,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrBgT,EAAQnT,EAASG,KAAKkT,cACtB/T,GAAW,MAEZc,OAAM,SAAUjB,GACfG,GAAW,GACXF,GAAS,GACLD,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,OACxCJ,EAAM,CACJsB,MAAOlB,EAAMa,SAASG,KAAKhB,MAC3BmB,OAAQ,QACRC,SAAU,IACVC,YAAY,IAGXrB,EAAMa,UACTjB,EAAM,CACJsB,MAAOlB,EAAMsB,QACbH,OAAQ,QACRC,SAAU,IACVC,YAAY,SAInB,IAMH,OAJA2B,qBAAU,WACRiR,MACC,IAGD,eAACxN,EAAA,EAAD,WACGsN,EAAKnD,KAAI,SAACuD,GACT,OAAO,cAAC,GAAD,CAAcxC,OAAQwC,GAASA,EAAGnD,QAE1C9Q,GACC,qCACG,IACD,cAACyQ,GAAA,EAAD,CACErK,MAAM,OACN6D,OAAO,QACPzD,GAAI,EACJsF,UAAU,KACVmE,aAAa,OAEf,cAACQ,GAAA,EAAD,CACErK,MAAM,OACN6D,OAAO,QACPzD,GAAI,EACJsF,UAAU,KACVmE,aAAa,OAEf,cAACQ,GAAA,EAAD,CACErK,MAAM,OACN6D,OAAO,QACPzD,GAAI,EACJsF,UAAU,KACVmE,aAAa,UAIlBnQ,GACC,eAACgK,EAAA,EAAD,CACE7I,OAAO,QACP8I,QAAQ,SACRC,cAAc,SACd1D,eAAe,SACfG,UAAU,SACVwD,OAAO,QANT,UAQE,cAACH,EAAA,EAAD,CAAWxB,KAAK,OAAO4B,GAAI,IAC3B,cAACJ,EAAA,EAAD,CAAYlB,GAAI,EAAGuB,GAAI,EAAGC,SAAS,KAAKC,UAAU,QAAlD,+BAGA,eAACP,EAAA,EAAD,CAAkBpD,SAAS,KAAK2D,UAAU,QAA1C,yBAEE,uBACA,cAAC9B,EAAA,EAAD,CAAQN,QAAS8L,EAAjB,6B,OC1FGG,OAXf,WACE,OACE,qBAAK7J,UAAU,UAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,wCACA,+B,OCcO8J,OAlBf,WACE,OACE,sBAAK9J,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,iBACA,uBACA,uBAEA,uBACA,uBAAMA,UAAU,iBAAhB,2BAEE,uBAFF,0DAGE,uBAHF,WAIU,cAAC,IAAD,CAAMhB,GAAG,IAAT,mBAJV,8B,oBCJS,SAAS6H,GAAT,GAAmC,IAAjBjL,EAAgB,EAAhBA,aAAgB,EACjBhH,mBAAS,IADQ,mBACxCmV,EADwC,KAC5BC,EAD4B,KAS/C,OACE,gCACE,cAAC,KAAD,CACElD,MAAM,OACN7J,SAAU+M,EACVhV,MAAO+U,EACPE,QAASpD,GAAOoD,QAChBC,QAASrD,GAAOqD,QAChBlN,YAAY,sBAEd,cAACkB,EAAA,EAAD,CAAQN,QAjBQ,WACC,KAAfmM,EAIJnO,EAAamO,GAHXnQ,IAAUnE,MAAM,2BAecwI,KAAK,KAAKM,GAAI,EAA5C,8BAWNsI,GAAOoD,QAAU,CACfE,QAAS,CACP,CAAC,CAAEC,OAAQ,KAAO,CAAEA,OAAQ,MAC5B,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,OAAQ,SACT,CAAC,UAEHC,UAAW,CAETC,aAAa,IAOjB1D,GAAOqD,QAAU,CACf,SACA,OACA,SACA,YACA,SACA,aACA,OACA,SACA,OACA,SC8HaM,OAxKf,YAA+C,IAArB/G,EAAoB,EAApBA,SAAUgH,EAAU,EAAVA,OAC1BpS,EAASR,IAATQ,KADoC,EAE1BzD,mBAAS6O,GAFiB,mBAErCiH,EAFqC,KAElCC,EAFkC,OAGR/V,oBAAS,GAHD,mBAGrCgW,EAHqC,KAGxBC,EAHwB,KAIpCvJ,EAAcC,cAAdD,UAqCR,OAVA7I,qBAAU,gBACOuM,IAAXgC,IACFA,GAAOmB,GAAG,oBAAoB,SAACC,GACzBA,EAAI3B,MAAQiE,EAAEjE,KAChBkE,EAAKvC,QAIV,CAACsC,IAGF,cAAC,KAAD,UACE,cAAC,KAAOrC,IAAR,CACEC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAHnB,SAKE,eAACrM,EAAA,EAAD,CACEqE,EAAG,EACHT,GAAI,EACJ2B,UAAU,KACVmE,aAAa,KACbrI,GAAkB,SAAd+D,EAAuB,UAAY,QALzC,UAOE,cAACpF,EAAA,EAAD,CAAK4D,GAAI,EAAT,SACE,cAAChB,EAAA,EAAD,CACEiB,SAAS,OACTrC,WAAW,OACXJ,MAAM,OACN0C,UAAU,QAJZ,SAME,cAAC,IAAD,CAAMhB,GAAI,MAAQ0L,EAAEhC,KAApB,SAA2BgC,EAAEjH,eAGjC,cAAC3H,EAAA,EAAD,CAAM8D,OAAO,cAAc+I,GAAI,EAAG7K,WAAW,SAAS8K,SAAS,OAA/D,SACG8B,EAAE7G,OAAOwC,KAAI,SAACwC,GACb,OACE,cAAC3K,EAAA,EAAD,CACED,KAAK,MACLP,WAAW,MAEXiF,GAAI,EACJmG,QAAQ,MACRnH,QAAQ,UANV,SAQE,cAAC,IAAD,CACErE,MAAM,OACN0B,GAAI,MAAQ6J,EAAEH,KACd3J,MAAO,CAAEgB,SAAU,OAAQzC,MAAO,QAClC0C,UAAU,QAJZ,SAMG6I,EAAElS,SAXAkS,EAAEpC,UAiBf,cAACpD,GAAA,EAAD,IACA,cAACnH,EAAA,EAAD,CAAKyM,GAAI,EAAT,SACE,eAAC7M,EAAA,EAAD,CAAMgC,WAAW,SAAS8K,SAAS,OAAnC,UACwB,IAArB8B,EAAEI,QAAQlE,QACT,cAAC9H,EAAA,EAAD,CAAMkB,UAAU,QAAQtC,WAAW,OAAOqC,SAAS,KAAKF,GAAI,EAA5D,6BAIF,eAACf,EAAA,EAAD,CACEkB,UAAU,QACVtC,WAAW,OACXqC,SAAS,KACTzC,MAAM,OAJR,oBAMS,cAAC,KAAD,CAAcyL,KAAM,IAAI1P,KAAKqR,EAAE1B,qBAI5C,eAAClN,EAAA,EAAD,CAAMgC,WAAW,SAAjB,UACG8M,GACC,eAAC1M,EAAA,EAAD,CACEN,QAAS,kBAAMiN,GAAa,IAC5B1I,cAAc,aACdlE,KAAK,KACL4B,GAAI,EACJvC,MAAM,UALR,UAOE,cAAC,KAAD,CAASyC,SAAS,SAPpB,aAWA6K,GACA,eAAC1M,EAAA,EAAD,CACEN,QAAS,kBAAMiN,GAAa,IAC5B1I,cAAc,aACdlE,KAAK,KACLX,MAAM,OACNuC,GAAI,EALN,UAOE,cAAC,KAAD,CAAQvC,MAAM,UAAUyC,SAAS,SAPnC,YAWF,eAAC7B,EAAA,EAAD,CACED,KAAK,KACLX,MAAOoN,EAAEK,UAAU3F,SAAS/M,EAAKmH,IAAM,UAAY,OACnD5B,QAAS,WAhID,IAACoN,IAiIKN,EAAEjE,IAhI1BO,GAAOkC,KAAK,iBAAkB,CAAE+B,WAAYD,EAAM5B,OAAQ/Q,EAAKmH,MA4HvD,UAOE,cAAC,KAAD,CAAWO,SAAS,SAPtB,WAQW2K,EAAEK,UAAUnE,aAGzB,cAAC,KAAD,UACGgE,GACC,cAAC,KAAOvC,IAAR,CACEtJ,MAAO,CAAEmM,UAAW,QACpB5C,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAJnB,SAME,cAAC,WAAD,CACE4C,SACE,sBAAMnL,UAAU,iCAAhB,+BAFJ,SAOE,cAAC,GAAD,CAAQpE,aApJH,SAAC5G,GACpB4E,IAAUjE,QAAQ,wBAClB,IAAMc,EAAO,CACX2U,IAAK3H,EAASgD,IACdW,OAAQpS,GAGVwC,IACGL,KAAKlC,EAAe,iBAAkBwB,GACtCJ,MAAK,SAACC,GACLsD,IAAUwE,QAAQ9H,EAASG,KAAK2H,SAChC7H,QAAQC,IAAIF,GACZmU,OAED/T,OAAM,SAAUjB,GACXA,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,MACxCmE,IAAUnE,MAAMA,EAAMa,SAASG,KAAKhB,OAEpCmE,IAAUnE,MAAMA,EAAMsB,6BCoGjBsU,OAnIf,WACE,IAAMhW,EAAQC,cACNgM,EAAcC,cAAdD,UAFU,EAIE1M,mBAAS,IAJX,mBAIX0W,EAJW,KAIPC,EAJO,OAKQ3W,oBAAS,GALjB,mBAKXa,EALW,KAKJC,EALI,OAMYd,oBAAS,GANrB,mBAMXe,EANW,KAMFC,EANE,KAQZ4V,EAAetV,uBAAY,WAC/BN,GAAW,GACXF,GAAS,GACTS,IAAMC,IAAInB,EAAe,qBACtBoB,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrB8U,EAAMjV,EAASG,KAAKgV,WACpB7V,GAAW,MAEZc,OAAM,SAAUjB,GACfG,GAAW,GACXF,GAAS,GACLD,EAAMa,UAAYb,EAAMa,SAASG,KAAKhB,OACxCJ,EAAM,CACJsB,MAAOlB,EAAMa,SAASG,KAAKhB,MAC3BmB,OAAQ,QACRC,SAAU,IACVC,YAAY,IAGXrB,EAAMa,UACTjB,EAAM,CACJsB,MAAOlB,EAAMsB,QACbH,OAAQ,QACRC,SAAU,IACVC,YAAY,SAInB,IAMH,OAJA2B,qBAAU,WACR+S,MACC,IAGD,eAACtP,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEyM,GAAI,EACJ9G,GAAI,EACJ/B,GAAI,EACJ2B,UAAU,KACVlE,GAAkB,SAAd+D,EAAuB,UAAY,QACvChE,MAAM,OACN0C,UAAU,QAPZ,SASE,cAAClB,EAAA,EAAD,CAAMiB,SAAS,KAAf,iCAEDuL,EAAGjF,KAAI,SAACqE,GACP,OACE,cAAC,GAAD,CAAgBjH,SAAUiH,EAAeD,OAAQe,GAAfd,EAAEjE,QAGzB,IAAd6E,EAAG1E,SAAiBnR,IAAUE,GAC7B,eAAC8J,EAAA,EAAD,CACE7I,OAAO,OACP8I,QAAQ,SACRC,cAAc,SACd1D,eAAe,SACfG,UAAU,SACVwD,OAAO,QANT,UAQE,cAACH,EAAA,EAAD,CAAWxB,KAAK,OAAO4B,GAAI,IAC3B,cAACJ,EAAA,EAAD,CAAYlB,GAAI,EAAGuB,GAAI,EAAGC,SAAS,KAAKC,UAAU,QAAlD,yCAGA,eAACP,EAAA,EAAD,CAAkBpD,SAAS,KAAK2D,UAAU,QAA1C,yBACc,cAAC0L,GAAA,EAAD,CAAM1M,GAAG,UAAT,oBACZ,uBAFF,iBAGgB,cAAC0M,GAAA,EAAD,CAAM1M,GAAG,UAAT,oBAHhB,0BAOHrJ,GACC,qCACG,IACD,cAACyQ,GAAA,EAAD,CACErK,MAAM,OACN6D,OAAO,QACPzD,GAAI,EACJsF,UAAU,KACVmE,aAAa,OAEf,cAACQ,GAAA,EAAD,CACErK,MAAM,OACN6D,OAAO,QACPzD,GAAI,EACJsF,UAAU,KACVmE,aAAa,OAEf,cAACQ,GAAA,EAAD,CACErK,MAAM,OACN6D,OAAO,QACPzD,GAAI,EACJsF,UAAU,KACVmE,aAAa,UAIlBnQ,GACC,eAACgK,EAAA,EAAD,CACE7I,OAAO,QACP8I,QAAQ,SACRC,cAAc,SACd1D,eAAe,SACfG,UAAU,SACVwD,OAAO,QANT,UAQE,cAACH,EAAA,EAAD,CAAWxB,KAAK,OAAO4B,GAAI,IAC3B,cAACJ,EAAA,EAAD,CAAYlB,GAAI,EAAGuB,GAAI,EAAGC,SAAS,KAAKC,UAAU,QAAlD,+BAGA,eAACP,EAAA,EAAD,CAAkBpD,SAAS,KAAK2D,UAAU,QAA1C,yBAEE,uBACA,cAAC9B,EAAA,EAAD,CAAQN,QAAS4N,EAAjB,6BClDGG,OApFf,WAAmB,IAAD,EACwBvX,IAAhCS,EADQ,EACRA,QAASC,EADD,EACCA,WAAYJ,EADb,EACaA,OACrB2D,EAASR,IAATQ,KACAiJ,EAAcC,cAAdD,UAER,OACE,qCACE,cAACpF,EAAA,EAAD,CACEH,MAAM,OACN6B,QAASlJ,EACT6I,GAAkB,SAAd+D,EAAuB,UAAY,QACvCtB,UAAU,QACVyB,UAAU,KACVmE,aAAa,KACbpE,SAAS,SACT1B,GAAI,EACJS,EAAG,EACH6C,OAAO,UAVT,SAYE,eAACtH,EAAA,EAAD,CAAMC,MAAM,OAAO+B,WAAW,SAA9B,UACE,cAAC+E,GAAA,EAAD,CAAQ/B,IAAKzI,EAAKyK,WAAY9I,KAAM3B,EAAK2B,KAAMiE,KAAK,KAAK4B,GAAI,IAC7D,eAAC3D,EAAA,EAAD,WACE,eAAC4C,EAAA,EAAD,CAAMiB,SAAS,OAAOzC,MAAM,OAAO0C,UAAU,QAA7C,iBACO3H,EAAK2B,QAEZ,cAAC8E,EAAA,EAAD,CACEiB,SAAS,OACTrC,WAAW,OACXJ,MAAM,OACN0C,UAAU,QAJZ,2CAWO,OAAZnL,GACC,eAACqH,EAAA,EAAD,CACEH,MAAM,OACNwB,GAAkB,SAAd+D,EAAuB,UAAY,QACvCtB,UAAU,QACVyB,UAAU,KACVmE,aAAa,KACbpE,SAAS,SACT1B,GAAI,EACJvB,IAAK,EACLgC,EAAG,EACHH,SAAS,WAVX,UAYE,cAAClC,EAAA,EAAD,CACE0N,eAAe,YACf3N,KAAK,KACLL,QAAS,WACP9I,EAAW,OAEbsL,SAAS,WACTyL,MAAM,OACNrL,IAAI,OACJT,SAAS,QACTL,QAAQ,QACRpC,MAAM,OAXR,kBAeA,cAACwB,EAAA,EAAD,CAAMiB,SAAS,OAAOzC,MAAM,OAAO0C,UAAU,QAA7C,kCAGA,cAAClB,EAAA,EAAD,CACEiB,SAAS,OACTrC,WAAW,OACXJ,MAAM,OACN0C,UAAU,QAJZ,SAME,cAAC,IAAD,CAAMhB,GAAI,MAAQnK,EAAQ6T,KAA1B,SAAiC7T,EAAQ4O,aACnC,IACR,sBAAM1E,MAAO,CAAEgB,SAAU,QAAzB,SACE,cAAC,KAAD,CAAcgJ,KAAM,IAAI1P,KAAKxE,EAAQmU,sB,GCpE7C8C,EAAQ,IAZV5N,G,GAAAA,OACAsH,G,GAAAA,MACAuG,G,GAAAA,aACAC,G,GAAAA,aACAC,G,GAAAA,YACAC,G,GAAAA,iBACAC,G,GAAAA,UACA5P,G,GAAAA,YACAK,G,GAAAA,UACAC,G,GAAAA,MACAuP,G,GAAAA,YACA9N,G,GAAAA,iB,GAE2BwN,EAAQ,GAA7BrR,G,GAAAA,OAAQ7F,G,GAAAA,SAED,SAASyX,KAAgB,IAAD,EAC4BlX,IAAzDV,EAD6B,EAC7BA,OAAQE,EADqB,EACrBA,QAASqC,EADY,EACZA,YAAanB,EADD,EACCA,SADD,KACWE,aACnBnB,GAAS,KAFD,mBAE9BqC,EAF8B,KAEnBqV,EAFmB,OAGR1X,GAAS,IAHD,mBAG9BsC,EAH8B,KAGnBqV,EAHmB,KAK/BC,EAAa/R,KAEnB,OACE,mCACE,eAAC,GAAD,CAAOD,gBAAiBgS,EAAY/X,OAAQA,EAAQE,QAASA,EAA7D,UACE,cAACoX,GAAD,IACA,eAACC,GAAD,WACE,cAACC,GAAD,6BACA,cAACC,GAAD,IACA,eAACC,GAAD,CAAWpO,GAAI,EAAf,UACE,eAAC,GAAD,WACE,cAAC,GAAD,yBACA,cAAC,GAAD,CACE/I,MAAOiC,EACPgG,SAAU,SAACkJ,GACTmG,EAAQnG,EAAE3B,OAAOxP,QAEnBqJ,IAAKmO,EACLxP,YAAY,kBAIhB,eAAC,GAAD,CAAauB,GAAI,EAAjB,UACE,cAAC,GAAD,0BACA,cAAC,GAAD,CACEvJ,MAAOkC,EACP+F,SAAU,SAACkJ,GACToG,EAAQpG,EAAE3B,OAAOxP,QAEnBgI,YAAY,uCAKlB,eAACoP,GAAD,WACE,eAAC,GAAD,CACEzN,SAAwB,KAAd1H,GAAkC,KAAdC,GAAoBrB,EAClDsI,aAAa,OACb0B,GAAI,EACJjC,QAAS,WACP5G,EAAYC,EAAWC,IAL3B,UAQGrB,GAAY,cAAC,GAAD,CAAkBgJ,iBAAe,EAACZ,KAAK,UAClDpI,GAAY,UAEhB,cAAC,GAAD,CAAQ+H,QAASjJ,EAAjB,+B,OC6BG8X,OAnFf,WAAmB,IAAD,EACsCtX,IAA9CT,EADQ,EACRA,OAAQuB,EADA,EACAA,UAAWV,EADX,EACWA,OAAQI,EADnB,EACmBA,QAASF,EAD5B,EAC4BA,MAM5C,OAJAgD,qBAAU,WACRxC,MACC,IAGD,eAACiG,EAAA,EAAD,WAIE,cAACmQ,GAAD,CAAc5B,OAAQxU,IACH,IAAlBV,EAAOqR,SAAiBnR,IAAUE,GACjC,eAAC8J,EAAA,EAAD,CACE7I,OAAO,OACP8I,QAAQ,SACRC,cAAc,SACd1D,eAAe,SACfG,UAAU,SACVwD,OAAO,QANT,UAQE,cAACH,EAAA,EAAD,CAAWxB,KAAK,OAAO4B,GAAI,IAC3B,cAACJ,EAAA,EAAD,CAAYlB,GAAI,EAAGuB,GAAI,EAAGC,SAAS,KAAKC,UAAU,QAAlD,4CAGA,eAACP,EAAA,EAAD,CAAkBpD,SAAS,KAAK2D,UAAU,QAA1C,oDAEE,uBACA,cAAC9B,EAAA,EAAD,CAAQN,QAASlJ,EAAjB,oDAILiB,GACC,qCACG,IACD,cAACyQ,GAAA,EAAD,CACErK,MAAM,OACN6D,OAAO,QACPzD,GAAI,EACJsF,UAAU,KACVmE,aAAa,OAEf,cAACQ,GAAA,EAAD,CACErK,MAAM,OACN6D,OAAO,QACPzD,GAAI,EACJsF,UAAU,KACVmE,aAAa,OAEf,cAACQ,GAAA,EAAD,CACErK,MAAM,OACN6D,OAAO,QACPzD,GAAI,EACJsF,UAAU,KACVmE,aAAa,UAIlBnQ,GACC,eAACgK,EAAA,EAAD,CACE7I,OAAO,QACP8I,QAAQ,SACRC,cAAc,SACd1D,eAAe,SACfG,UAAU,SACVwD,OAAO,QANT,UAQE,cAACH,EAAA,EAAD,CAAWxB,KAAK,OAAO4B,GAAI,IAC3B,cAACJ,EAAA,EAAD,CAAYlB,GAAI,EAAGuB,GAAI,EAAGC,SAAS,KAAKC,UAAU,QAAlD,+BAGA,eAACP,EAAA,EAAD,CAAkBpD,SAAS,KAAK2D,UAAU,QAA1C,yBAEE,uBACA,cAAC9B,EAAA,EAAD,CAAQN,QAAS3H,EAAjB,6BCoIGyW,OAlMf,WAAiB,IACPzU,EAAWJ,IAAXI,OADM,EAEkC7D,IAAxCK,EAFM,EAENA,OAAQC,EAFF,EAEEA,OAAQC,EAFV,EAEUA,QAASG,EAFnB,EAEmBA,WAC3BuC,EAAQlC,IAHA,EAIgBP,oBAAS,GAJzB,mBAIPe,EAJO,KAIEC,EAJF,KAKN0L,EAAcC,cAAdD,UAOR,OANA7I,qBAAU,WACRkU,YAAW,WACT/W,GAAW,KACV,QACF,IAGD,qCACGD,GACC,mCACE,cAAC,GAAD,OAGFA,IAAYsC,GAAU,cAAC,IAAD,CAAU+G,GAAG,OACnCrJ,GAAWsC,GACX,eAACiE,EAAA,EAAD,CAAKsF,SAAS,SAAd,UACE,cAAC,GAAD,CAAQ/M,OAAQA,EAAQC,OAAQA,EAAQC,QAASA,IAEjD,eAACmH,EAAA,EAAD,CACEO,SAAS,SACTuQ,OAAO,OACP1L,UAAU,sBACVjF,eAAe,gBACf4Q,SAAU,CAAC,IAAK,MAAO,OAAQ,QAC/BC,SAAU,CAAC,IAAK,MAAO,OAAQ,QANjC,UAQE,cAAC5Q,EAAA,EAAD,CACEH,MAAM,QACN6D,OAAO,cACPrC,GAAkB,SAAd+D,EAAuB,UAAY,QACvCtB,UAAU,QACVyB,UAAU,KACVmE,aAAa,KACb/F,GAAI,EACJe,QAAS,CAAEF,KAAM,OAAQC,GAAI,SAR/B,SAUE,eAACoM,EAAA,EAAD,WACE,mCACE,eAAC,IAAD,CACE/M,UAAU,OACVmB,OAAK,EACLnC,GAAG,IACHD,MAAO,CACL6B,QAAS,OACT9C,WAAY,SACZR,MAAO,YACPqE,QAAS,MACTqL,WAAY,wBACZpN,OAAQ,OACR7D,MAAO,QAETkR,YAAa,CACXD,WAAY,oBACZ1P,MAAO,UACPoE,WAAY,aAhBhB,UAmBE,sBACE3C,MAAO,CACL4C,QAAS,MACT5B,SAAU,QAHd,SAME,cAAC,KAAD,MAzBJ,YA8BF,qCACE,eAAC,IAAD,CACEC,UAAU,OACVmB,OAAK,EACLnC,GAAG,UACHD,MAAO,CACL6B,QAAS,OACT9C,WAAY,SACZR,MAAO,YACPqE,QAAS,MACTqL,WAAY,wBACZpN,OAAQ,OACR7D,MAAO,QAETkR,YAAa,CACXD,WAAY,oBACZ1P,MAAO,UACPoE,WAAY,aAhBhB,UAmBE,sBACE3C,MAAO,CACL4C,QAAS,MACT5B,SAAU,QAHd,SAME,cAAC,KAAD,MAzBJ,qBA6BA,cAAC7D,EAAA,EAAD,CACEH,MAAM,OACNwB,GACgB,SAAd+D,EACI,yBACA,UALR,SAQE,cAACpD,EAAA,EAAD,CACEZ,MAAM,OACNyC,SAAS,OACTL,QAAQ,QACR3D,MAAM,OACNiG,YAAY,OACZP,UAAU,kBACV7D,QAASvG,EAAM3C,OAPjB,+BAaJ,mCACE,eAAC,IAAD,CACEsL,UAAU,OACVmB,OAAK,EACLnC,GAAG,UACHD,MAAO,CACL6B,QAAS,OACT9C,WAAY,SACZR,MAAO,YACPqE,QAAS,MACTqL,WAAY,wBACZpN,OAAQ,OACR7D,MAAO,QAETkR,YAAa,CACXD,WAAY,oBACZ1P,MAAO,UACPoE,WAAY,aAhBhB,UAmBE,sBACE3C,MAAO,CACL4C,QAAS,MACT5B,SAAU,QAHd,SAME,cAAC,KAAD,MAzBJ,2BAgCN,eAAC7D,EAAA,EAAD,CACEH,MAAO,CAAE2E,KAAM,OAAQC,GAAI,OAC3BuM,KAAK,QACLN,OAAO,OACPjL,QAAQ,SACRT,UAAU,sBALZ,UAOE,cAAC,GAAD,CACEpM,WAAYA,EACZL,OAAQA,EACRC,OAAQA,EACRC,QAASA,IAEX,eAAC,IAAD,WACE,eAAC,IAAD,CAAOwM,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC+L,GAAD,MAEF,cAAC,IAAD,CAAOhM,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,sBClLHgM,GAxBF,WAAO,IACV9L,EAAcC,cAAdD,UACArJ,EAAWJ,IAAXI,OAER,OACE,cAACiE,EAAA,EAAD,CAAKqB,GAAkB,SAAd+D,EAAuB,UAAY,qBAA5C,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOF,KAAK,IAAZ,WACInJ,GAAU,cAAC,EAAD,IACXA,GAAU,cAAC,GAAD,OAEb,eAAC,IAAD,CAAOkJ,OAAK,EAACC,KAAK,UAAlB,WACInJ,GAAU,cAAC,EAAD,IACXA,GAAU,cAAC,IAAD,CAAU+G,GAAG,mB,6BCN/B,SAASqO,KAAgB,IAAD,EACU9L,cAA/BD,EADqB,EACrBA,UAAWgM,EADU,EACVA,gBACnB,OACE,cAACpR,EAAA,EAAD,CACEE,UAAU,QACVL,MAAM,KACNqE,SAAS,QACTmN,OAAO,OACP1B,MAAM,OACNxO,OAAO,KANT,SAQE,cAACmF,GAAA,EAAD,CACEE,KAAoB,UAAdpB,EAAwB,OAAS,MACvC1D,QAAS0P,EACT5N,QAAQ,YA4CD8N,OAtCf,WAAgB,IACNpV,EAAcP,IAAdO,UACFqV,EAAiBvX,uBAAY,WACjCkC,GAAU,KACT,CAACA,IAqBJ,OAnBAK,qBAAU,WAYR,YAXeuM,IAAXgC,KACFA,GAAOmB,GAAG,cAAc,SAACC,GACvBhQ,GAAU,SAACuM,GAAD,OAAkByD,EAAIjQ,eAGlC6O,GAAOmB,GAAG,iBAAiB,WACrBnB,GAAO0G,cACTD,QAIC,gBACUzI,IAAXgC,IAAwBA,GAAO2G,UAEnCpX,QAAQC,IAAI,gBAGb,IAED,cAAC,IAAD,UACE,cAACoX,GAAA,EAAD,CAAe9G,MAAOA,KAAtB,SACE,eAAC+G,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,IACA,cAACT,GAAD,IACA,cAAC,GAAD,YCzDKU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5X,MAAK,YAAkD,IAA/C6X,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,oBCEdO,KAAQC,iBAAiBC,IACzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.1e056cc7.chunk.js","sourcesContent":["import { useDisclosure } from \"@chakra-ui/core\";\r\nimport React, { useContext } from \"react\";\r\n\r\nconst QCtx = React.createContext();\r\nexport default function useQuestion() {\r\n  return useContext(QCtx);\r\n}\r\n\r\nexport const QuestionProvider = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [recentQ, setRecentQ] = React.useState(null);\r\n\r\n  return (\r\n    <QCtx.Provider\r\n      value={{\r\n        isOpen,\r\n        onOpen,\r\n        onClose,\r\n        recentQ,\r\n        setRecentQ,\r\n      }}\r\n    >\r\n      {children}\r\n    </QCtx.Provider>\r\n  );\r\n};\r\n","export const BASE_API_URL = \"https://pharmaconn.herokuapp.com/api\";\r\n// export const BASE_API_URL = \"http://localhost:8000/api\"\r\n","import { useDisclosure, useToast } from \"@chakra-ui/core\";\r\nimport React, { useCallback, useContext, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { BASE_API_URL } from \"../config\";\r\n\r\nconst SCtx = React.createContext();\r\nexport default function useSpace() {\r\n  return useContext(SCtx);\r\n}\r\n\r\nexport const SpaceProvider = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n  const [spaces, setSpaces] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [creating, setCreating] = useState(false);\r\n  const [similarSpace, setSimilar] = useState(null)\r\n\r\n  const getSpaces = useCallback(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    Axios.get(BASE_API_URL + \"/spaces\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setSpaces(response.data.spaces);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n  const createSpace = (spaceName, spaceDesc) => {\r\n    setCreating(true);\r\n    setError(false);\r\n    Axios.post(BASE_API_URL + \"/spaces\", {\r\n      title: spaceName,\r\n      description: spaceDesc,\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setCreating(false);\r\n        if(response.data.error && response.data.space) {\r\n          setSimilar(response.data)\r\n        } else {\r\n          \r\n          getSpaces();\r\n           toast({\r\n             title: \"Space created\",\r\n             status: \"info\",\r\n             duration: 3000,\r\n             isClosable: true,\r\n           });\r\n          onClose();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        setCreating(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <SCtx.Provider\r\n      value={{\r\n        isOpen,\r\n        onOpen,\r\n        onClose,\r\n        spaces,\r\n        error,\r\n        loading,\r\n        getSpaces,\r\n        createSpace,\r\n        creating,\r\n        similarSpace,\r\n        setSimilar\r\n      }}\r\n    >\r\n      {children}\r\n    </SCtx.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport { BASE_API_URL } from \"../config\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"../setAuthToken\";\r\n\r\nconst AuthCtx = React.createContext();\r\nexport function useAuth() {\r\n  return useContext(AuthCtx);\r\n}\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [isUnv, setUnv] = useState(false);\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [isOnline, setOnline] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [registrationIsComplete, setRegComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n    //eslint-disable-next-line\r\n  }, [isAuth]);\r\n\r\n  //setAuth\r\n  let setAuth = (token) => {\r\n    setLoading(false);\r\n    localStorage.setItem(\"pharmaconnjwts\", JSON.stringify(token));\r\n    setAuthToken(token);\r\n    setIsAuth(true);\r\n  };\r\n\r\n  // login\r\n  let login = (values) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(BASE_API_URL + \"/users/login\", values)\r\n      .then((response) => {\r\n        const { token } = response.data;\r\n        setAuth(token);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n\r\n        if (error.response && error.response.data.email) {\r\n          cogoToast.error(error.response.data.email);\r\n        } else if (error.response && error.response.data.password) {\r\n          cogoToast.error(error.response.data.password);\r\n        } else if (error.response && error.response.data.error) {\r\n          setUnv(true);\r\n        } else {\r\n          cogoToast.error(error.message);\r\n        }\r\n      });\r\n  };\r\n  // register\r\n  let register = (values) => {\r\n    setLoading(true);\r\n    let data = {\r\n      name: values.firstname + \" \" + values.lastname,\r\n      email: values.email,\r\n      gender: values.gender,\r\n      password: values.password,\r\n      password2: values.confirmpassword,\r\n    };\r\n    axios\r\n      .post(BASE_API_URL + \"/users/register\", data)\r\n      .then((response) => {\r\n        setRegComplete(true);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        if (error.response && error.response.data.email) {\r\n          cogoToast.error(error.response.data.email);\r\n        } else if (error.request) {\r\n          cogoToast.error(error.request);\r\n        } else {\r\n          cogoToast.error(error.message);\r\n        }\r\n      });\r\n  };\r\n  //check logged in user\r\n  let checkAuth = () => {\r\n    let token = JSON.parse(localStorage.getItem(\"pharmaconnjwts\"));\r\n    if (token) {\r\n      let decoded = jwt_decode(token);\r\n      const currentTime = Date.now() / 1000;\r\n\r\n      if (decoded.exp < currentTime) {\r\n        localStorage.removeItem(\"pharmaconnjwts\");\r\n        checkAuth();\r\n      } else {\r\n        setIsAuth(true);\r\n        setAuthToken(token);\r\n        setUser(decoded);\r\n      }\r\n    } else {\r\n      setIsAuth(false);\r\n    }\r\n  };\r\n  const logout = () => {\r\n    localStorage.removeItem(\"pharmaconnjwts\");\r\n    checkAuth();\r\n  };\r\n  return (\r\n    <AuthCtx.Provider\r\n      value={{\r\n        isAuth,\r\n\r\n        registrationIsComplete,\r\n        loading,\r\n        setLoading,\r\n        login,\r\n        logout,\r\n        register,\r\n        isUnv,\r\n        setUnv,\r\n        setAuth,\r\n        user,\r\n        setUser,\r\n        isOnline,\r\n        setOnline,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthCtx.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import {\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Text,\r\n  Box,\r\n  InputGroup,\r\n  InputRightElement,\r\n  CircularProgress,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  ButtonGroup,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport { useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { BASE_API_URL } from \"../../config\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\n\r\nfunction Login() {\r\n  const initialFocusRef = useRef();\r\n\r\n  const { login, loading, isUnv, setUnv } = useAuth();\r\n  const [show, setShow] = useState(false);\r\n  const [requesting, setRequesting] = useState(false);\r\n  const toast = useToast();\r\n  const handleClick = () => setShow(!show);\r\n\r\n  let handleMailRequest = (email) => {\r\n    setRequesting(true);\r\n    Axios.post(BASE_API_URL + \"/users/verifymailrequest\", { email: email })\r\n      .then((response) => {\r\n        setUnv(false);\r\n        toast({\r\n          title: response.data.success,\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n        setRequesting(false);\r\n      })\r\n      .catch(function (error) {\r\n        setRequesting(false);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        } else if (error.request) {\r\n          toast({\r\n            title: error.request,\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        } else {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n\r\n        password: \"\",\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        login(values);\r\n        setSubmitting(false);\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isValid,\r\n        } = props;\r\n        return (\r\n          <Flex width=\"full\" align=\"left\" justifyContent=\"left\">\r\n            <Box\r\n              my={4}\r\n              textAlign=\"left\"\r\n              width={[\"80%\", \"60%\", \"80%\", \"70%\"]}\r\n              maxWidth=\"400px\"\r\n            >\r\n              <form noValidate onSubmit={handleSubmit}>\r\n                <FormControl isRequired>\r\n                  <Popover\r\n                    initialFocusRef={initialFocusRef}\r\n                    placement=\"bottom\"\r\n                    closeOnBlur={false}\r\n                    isOpen={isUnv}\r\n                  >\r\n                    <FormLabel>Email</FormLabel>\r\n                    <PopoverTrigger>\r\n                      <Input\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        placeholder=\"test@test.com\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                        name=\"email\"\r\n                        isInvalid={errors.email && touched.email}\r\n                        errorBorderColor=\"crimson\"\r\n                        isRequired\r\n                      />\r\n                    </PopoverTrigger>\r\n                    <PopoverContent\r\n                      zIndex={4}\r\n                      color=\"white\"\r\n                      bg=\"blue.800\"\r\n                      borderColor=\"blue.800\"\r\n                    >\r\n                      <PopoverHeader\r\n                        pt={4}\r\n                        fontWeight=\"bold\"\r\n                        border=\"0\"\r\n                        color=\"crimson\"\r\n                      >\r\n                        Email Unverified!\r\n                      </PopoverHeader>\r\n                      <PopoverArrow />\r\n                      <PopoverCloseButton\r\n                        onClick={() => {\r\n                          setUnv(false);\r\n                        }}\r\n                      />\r\n                      <PopoverBody>\r\n                        This email : {values.email} is unverified. Click the\r\n                        button to request a verification mail.\r\n                      </PopoverBody>\r\n                      <PopoverFooter\r\n                        border=\"0\"\r\n                        d=\"flex\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"flex-end\"\r\n                        pb={4}\r\n                      >\r\n                        <ButtonGroup size=\"sm\">\r\n                          <Button\r\n                            variantColor=\"blue\"\r\n                            onClick={() => {\r\n                              handleMailRequest(values.email);\r\n                            }}\r\n                            ref={initialFocusRef}\r\n                          >\r\n                            {!requesting && \"Request mail\"}\r\n                            {requesting && (\r\n                              <CircularProgress color=\"green\" size=\"20px\" />\r\n                            )}\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      </PopoverFooter>\r\n                    </PopoverContent>\r\n                  </Popover>\r\n                </FormControl>\r\n                <FormControl mt={6} isRequired>\r\n                  <FormLabel>Password</FormLabel>\r\n                  <InputGroup size=\"md\">\r\n                    <Input\r\n                      errorBorderColor=\"crimson\"\r\n                      isInvalid={errors.password && touched.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      name=\"password\"\r\n                      pr=\"4.5rem\"\r\n                      type={show ? \"text\" : \"password\"}\r\n                      placeholder=\"Enter password\"\r\n                    />\r\n                    <InputRightElement width=\"4.5rem\">\r\n                      <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                        {show ? \"Hide\" : \"Show\"}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <Button\r\n                  width=\"full\"\r\n                  mt={4}\r\n                  type=\"submit\"\r\n                  disabled={!isValid || loading}\r\n                  _hover={{ borderColor: \"gray.200\", bg: \"blue.900\" }}\r\n                >\r\n                  {!loading && \"Sign In\"}\r\n                  {loading && (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"38px\"\r\n                      color=\"green\"\r\n                    ></CircularProgress>\r\n                  )}\r\n                </Button>\r\n              </form>\r\n              <Text>\r\n                Don't have an account?{\" \"}\r\n                <span>\r\n                  <Link style={{ color: \"blue\" }} to=\"/signup\">\r\n                    Sign up here.\r\n                  </Link>\r\n                </span>\r\n              </Text>\r\n            </Box>\r\n          </Flex>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import {\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Text,\r\n  Box,\r\n  InputGroup,\r\n  InputRightElement,\r\n  CircularProgress,\r\n  FormHelperText,\r\n  RadioGroup,\r\n  Radio,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n} from \"@chakra-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\n\r\nfunction Signup() {\r\n  const { register, loading, isAuth, registrationIsComplete } = useAuth();\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  if (isAuth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  console.log(isAuth);\r\n  return (\r\n    <>\r\n      {!registrationIsComplete && (\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            password: \"\",\r\n            gender: \"\",\r\n            confirmpassword: \"\",\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            register(values);\r\n            setSubmitting(false);\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            firstname: Yup.string().required(\"First Name is required\"),\r\n            gender: Yup.string().nullable().required(\"Gender is required\"),\r\n            lastname: Yup.string().required(\"Last Name is required\"),\r\n            email: Yup.string()\r\n              .email(\"Email is invalid\")\r\n              .required(\"Email is required\"),\r\n            password: Yup.string()\r\n              .min(6, \"Password must be at least 6 characters\")\r\n              .required(\"Password is required\"),\r\n            confirmpassword: Yup.string()\r\n              .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n              .required(\"Password confirmation is required\"),\r\n          })}\r\n        >\r\n          {(props) => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isValid,\r\n            } = props;\r\n            return (\r\n              <Flex width=\"full\" align=\"left\" justifyContent=\"left\">\r\n                <Box\r\n                  my={4}\r\n                  textAlign=\"left\"\r\n                  width={[\"80%\", \"60%\", \"80%\", \"70%\"]}\r\n                  maxWidth=\"400px\"\r\n                >\r\n                  <form noValidate onSubmit={handleSubmit}>\r\n                    <FormControl isRequired>\r\n                      <FormLabel>First Name</FormLabel>\r\n                      <Input\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        placeholder=\"eg. John\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.firstname}\r\n                        name=\"firstname\"\r\n                        isInvalid={errors.firstname && touched.firstname}\r\n                        errorBorderColor=\"crimson\"\r\n                        isRequired\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl isRequired mt={4}>\r\n                      <FormLabel>Last Name</FormLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"eg. Doe\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.lastname}\r\n                        name=\"lastname\"\r\n                        isInvalid={errors.lastname && touched.lastname}\r\n                        errorBorderColor=\"crimson\"\r\n                        isRequired\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl mt={4} isRequired>\r\n                      <FormLabel>Email</FormLabel>\r\n                      <Input\r\n                        type=\"email\"\r\n                        placeholder=\"test@test.com\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                        name=\"email\"\r\n                        isInvalid={errors.email && touched.email}\r\n                        errorBorderColor=\"crimson\"\r\n                        isRequired\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl isRequired mt={4}>\r\n                      <FormLabel>Select gender</FormLabel>\r\n\r\n                      <RadioGroup\r\n                        isInline\r\n                        name=\"gender\"\r\n                        onChange={handleChange}\r\n                        value={values.gender}\r\n                      >\r\n                        <Radio value=\"male\">Male</Radio>\r\n                        <Radio value=\"female\">Female</Radio>\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl mt={4} isRequired>\r\n                      <FormLabel>Password</FormLabel>\r\n                      <InputGroup size=\"md\">\r\n                        <Input\r\n                          errorBorderColor=\"crimson\"\r\n                          isInvalid={errors.password && touched.password}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.password}\r\n                          name=\"password\"\r\n                          pr=\"4.5rem\"\r\n                          type={show ? \"text\" : \"password\"}\r\n                          placeholder=\"Enter password\"\r\n                        />\r\n                        <InputRightElement width=\"4.5rem\">\r\n                          <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                            {show ? \"Hide\" : \"Show\"}\r\n                          </Button>\r\n                        </InputRightElement>\r\n                      </InputGroup>\r\n                      <FormHelperText id=\"password-helper-text\">\r\n                        Password must be at least 6 characters.\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                    <FormControl mt={4} isRequired>\r\n                      <FormLabel>Confirm Password</FormLabel>\r\n                      <InputGroup size=\"md\">\r\n                        <Input\r\n                          errorBorderColor=\"crimson\"\r\n                          isInvalid={\r\n                            errors.confirmpassword && touched.confirmpassword\r\n                          }\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.confirmpassword}\r\n                          name=\"confirmpassword\"\r\n                          pr=\"4.5rem\"\r\n                          type=\"password\"\r\n                          placeholder=\"Enter password\"\r\n                        />\r\n                      </InputGroup>\r\n                    </FormControl>\r\n                    <Button\r\n                      width=\"full\"\r\n                      mt={4}\r\n                      type=\"submit\"\r\n                      disabled={!isValid || loading}\r\n                      _hover={{ borderColor: \"gray.200\", bg: \"blue.900\" }}\r\n                    >\r\n                      {!loading && \"Sign up\"}\r\n                      {loading && (\r\n                        <CircularProgress\r\n                          isIndeterminate\r\n                          size=\"38px\"\r\n                          color=\"green\"\r\n                        ></CircularProgress>\r\n                      )}\r\n                    </Button>\r\n                  </form>\r\n                  <Text>\r\n                    Already have an account?{\" \"}\r\n                    <span>\r\n                      <Link style={{ color: \"blue\" }} to=\"/\">\r\n                        Login here.\r\n                      </Link>\r\n                    </span>\r\n                  </Text>\r\n                </Box>\r\n              </Flex>\r\n            );\r\n          }}\r\n        </Formik>\r\n      )}\r\n\r\n      {registrationIsComplete && (\r\n        <Alert\r\n          status=\"success\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            Registration Successful!\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Thanks for deciding to join our community!\r\n            <br />\r\n            We have sent you an email to verify your account. Verify your\r\n            account to begin contributing!.\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","export default __webpack_public_path__ + \"static/media/landing2.8a38d239.jpg\";","export default __webpack_public_path__ + \"static/media/logo2.a2b7fafe.png\";","import { Box, Flex, Image, Text } from \"@chakra-ui/core\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\nimport landingImg from \"../../img/landing2.jpg\";\r\nimport logo2 from \"../../img/logo2.png\";\r\n\r\nconst Landing = () => {\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <Box>\r\n      <Flex height=\"100vh\" width=\"100vw\" position=\"fixed\" overflowY=\"hidden\">\r\n        <Box w={[\"0%\", \"0%\", \"45%\", \"55%\"]}>\r\n          <Box\r\n            p={2}\r\n            bg=\"#1A202C\"\r\n            position=\"fixed\"\r\n            top=\"0\"\r\n            left=\"0\"\r\n            width={{ base: \"100%\", md: \"fit-content\" }}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Image src={logo2} width=\"200px\" />\r\n          </Box>\r\n          <Image\r\n            src={landingImg}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            objectFit=\"cover\"\r\n          />\r\n        </Box>\r\n        <Box\r\n          w={[\"100%\", \"100%\", \"55%\", \"45%\"]}\r\n          p={4}\r\n          pt={10}\r\n          minHeight=\"100%\"\r\n          overflowY=\"scroll\"\r\n        >\r\n          <Flex flexDirection=\"column\" justifyContent=\"center\" minHeight=\"100%\">\r\n            {pathname === \"/\" && (\r\n              <Box>\r\n                <Text fontSize={[\"4xl\", \"5xl\", \"5xl\", \"5xl\"]} className=\"qfont\">\r\n                  Ask Your\r\n                </Text>\r\n                <Text fontSize={[\"4xl\", \"5xl\", \"5xl\", \"5xl\"]} className=\"qfont\">\r\n                  Questions Here.\r\n                </Text>\r\n                <Text pr={4} fontSize=\"md\" className=\"qfont\">\r\n                  Pharmaconn is a platform to ask questions and connect with\r\n                  people who contribute unique insights and quality answers.{\" \"}\r\n                </Text>\r\n              </Box>\r\n            )}\r\n            {pathname === \"/signup\" && (\r\n              <Box>\r\n                <Text fontSize={[\"4xl\", \"5xl\", \"5xl\", \"5xl\"]} className=\"qfont\">\r\n                  Sign up\r\n                </Text>\r\n                <Text pr={4} fontSize=\"md\" className=\"qfont\">\r\n                  Sign up, contribute unique insights & connect with others in a\r\n                  community you'll at home with.{\" \"}\r\n                </Text>\r\n              </Box>\r\n            )}\r\n            <Route exact path=\"/\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export default __webpack_public_path__ + \"static/media/logo1.901c895f.png\";","import {\r\n  Avatar,\r\n  AvatarBadge,\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  FormLabel,\r\n  Icon,\r\n  IconButton,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList,\r\n  Stack,\r\n  Tooltip,\r\n  useColorMode,\r\n} from \"@chakra-ui/core\";\r\nimport { HiUserGroup } from \"react-icons/hi\";\r\nimport { MdExplore, MdHome, MdSubject } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport logo1 from \"../../img/logo1.png\";\r\nimport logo2 from \"../../img/logo2.png\";\r\n\r\nfunction Navbar({ isOpen, onOpen, onClose }) {\r\n  const { user, isOnline } = useAuth();\r\n\r\n  const { colorMode } = useColorMode();\r\n  return (\r\n    <>\r\n      <Flex\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        width=\"100vw\"\r\n        maxWidth=\"100vw\"\r\n        overflow=\"hidden\"\r\n        height=\"60px\"\r\n        boxShadow={{ base: \"0\", md: \"md\" }}\r\n        background={{\r\n          base: \"#1A202C\",\r\n          md: colorMode === \"dark\" ? \"initial\" : \"white\",\r\n        }}\r\n      >\r\n        <Flex\r\n          justifyContent={{ base: \"center\", md: \"space-between\" }}\r\n          alignItems=\"center\"\r\n          maxWidth=\"1100px\"\r\n          width=\"100%\"\r\n          // padding={[\"0\", \"0px\", \"0px\", \"50px\"]}\r\n          padding={{ base: \"0 10px\", md: \"0 5px\", lg: \"0 40px\" }}\r\n          position=\"relative\"\r\n        >\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Link to=\"/\">\r\n              <Box\r\n                display={{ base: \"none\", md: \"initial\" }}\r\n                height=\"60px\"\r\n                alignItems=\"center\"\r\n                px={3}\r\n              >\r\n                <Image\r\n                  display={{ base: \"none\", md: \"initial\" }}\r\n                  src={colorMode === \"dark\" ? logo2 : logo1}\r\n                  alt=\"logo pharmaconn\"\r\n                  width=\"180px\"\r\n                />\r\n              </Box>\r\n              {/* small screen */}\r\n              <Box\r\n                display={{ base: \"initial\", md: \"none\" }}\r\n                height=\"60px\"\r\n                alignItems=\"center\"\r\n                px={3}\r\n              >\r\n                <Image\r\n                  display={{ base: \"initial\", md: \"none\" }}\r\n                  src={logo2}\r\n                  alt=\"logo pharmaconn\"\r\n                  width=\"180px\"\r\n                />\r\n              </Box>\r\n            </Link>\r\n\r\n            <Box my={2} display={{ base: \"none\", md: \"block\" }}>\r\n              <InputGroup>\r\n                <InputLeftElement\r\n                  paddingLeft=\"10px\"\r\n                  children={\r\n                    <FormLabel htmlFor=\"search-box-nav\">\r\n                      <Icon name=\"search\" color=\"gray.300\" />\r\n                    </FormLabel>\r\n                  }\r\n                />\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"search-box-nav\"\r\n                  variant=\"filled\"\r\n                  placeholder=\"Search...\"\r\n                />\r\n              </InputGroup>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            pr={4}\r\n            display={{ base: \"none\", md: \"flex\" }}\r\n            alignItems=\"center\"\r\n            className=\"qfont\"\r\n          >\r\n            <Box\r\n              height=\"60px\"\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              textTransform=\"uppercase\"\r\n            >\r\n              <Link\r\n                to=\"/answer\"\r\n                className=\"link\"\r\n                style={{\r\n                  height: \"100%\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  color: \"grey\",\r\n                  padding: \"0 5px\",\r\n                }}\r\n                px={3}\r\n              >\r\n                <Icon name=\"edit\" mr={1} size=\"24px\" />\r\n                Answer\r\n              </Link>\r\n              <Link\r\n                to=\"/answer\"\r\n                className=\"link\"\r\n                style={{\r\n                  height: \"100%\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  color: \"grey\",\r\n                  padding: \"0 5px\",\r\n                }}\r\n                px={3}\r\n              >\r\n                <span style={{ padding: \"5px\", fontSize: \"20px\" }}>\r\n                  <HiUserGroup />\r\n                </span>\r\n                Spaces\r\n              </Link>\r\n              <Button\r\n                className=\"bt\"\r\n                onClick={onOpen}\r\n                ml={2}\r\n                to=\"/answer\"\r\n                style={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  color: colorMode === \"dark\" ? \"grey\" : \"#0e5291\",\r\n                  padding: \"0 5px\",\r\n                }}\r\n                px={3}\r\n              >\r\n                <Icon\r\n                  name=\"question-outline\"\r\n                  mr={1}\r\n                  size=\"24px\"\r\n                  color=\"#0e5291\"\r\n                />\r\n                Ask Question\r\n              </Button>\r\n            </Box>\r\n            <Tooltip hasArrow label=\"Notifications\" placement=\"bottom\">\r\n              <IconButton\r\n                aria-label=\"Notifications\"\r\n                icon=\"bell\"\r\n                variant=\"ghost\"\r\n                size=\"md\"\r\n                fontSize=\"24px\"\r\n                color=\"blue.500\"\r\n                mx={2}\r\n              >\r\n                <Badge ml=\"1\" variantColor=\"green\">\r\n                  New\r\n                </Badge>\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Avatar\r\n              mr={3}\r\n              src={user === null ? \"\" : user.profileurl}\r\n              name={user === null ? \"\" : user.name}\r\n              size=\"sm\"\r\n            >\r\n              {isOnline && <AvatarBadge size=\"1.25em\" bg=\"green.500\" />}\r\n            </Avatar>\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n      <Stack\r\n        isInline\r\n        height=\"40px\"\r\n        display={{ base: \"flex\", md: \"none\" }}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Tooltip label=\"home\" hasArrow>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"5px 10px\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Box\r\n              as={MdHome}\r\n              name=\"search\"\r\n              size=\"22px\"\r\n              color={colorMode === \"dark\" ? \"grey\" : \"blue.500\"}\r\n            />\r\n          </Link>\r\n        </Tooltip>\r\n        <Tooltip label=\"answer\" hasArrow>\r\n          <Link\r\n            to=\"/answer\"\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"5px 10px\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Icon\r\n              name=\"edit\"\r\n              size=\"24px\"\r\n              color={colorMode === \"dark\" ? \"grey\" : \"blue.500\"}\r\n            />\r\n          </Link>\r\n        </Tooltip>\r\n\r\n        <Menu>\r\n          <Tooltip label=\"explore\" hasArrow>\r\n            <MenuButton as={Box} width=\"100%\">\r\n              <span\r\n                style={{\r\n                  height: \"100%\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  padding: \"5px 10px\",\r\n                  width: \"100%\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    padding: \"5px\",\r\n                    fontSize: \"20px\",\r\n                    color: colorMode === \"dark\" ? \"grey\" : \"#3182ce\",\r\n                  }}\r\n                >\r\n                  <MdExplore />\r\n                </span>\r\n              </span>\r\n            </MenuButton>\r\n          </Tooltip>\r\n          <MenuList>\r\n            <Link to=\"/spaces\">\r\n              <MenuItem minH=\"48px\">\r\n                <span\r\n                  style={{\r\n                    padding: \"5px\",\r\n                    fontSize: \"20px\",\r\n                    color: colorMode === \"dark\" ? \"grey\" : \"#3182ce\",\r\n                  }}\r\n                >\r\n                  <HiUserGroup />\r\n                </span>\r\n                <span>Spaces</span>\r\n              </MenuItem>\r\n            </Link>\r\n            <Link to=\"topics\">\r\n              <MenuItem minH=\"48px\">\r\n                <span\r\n                  style={{\r\n                    padding: \"5px\",\r\n                    fontSize: \"20px\",\r\n                    color: colorMode === \"dark\" ? \"grey\" : \"#3182ce\",\r\n                  }}\r\n                >\r\n                  <MdSubject />\r\n                </span>\r\n                <span>Topics</span>\r\n              </MenuItem>\r\n            </Link>\r\n          </MenuList>\r\n        </Menu>\r\n        <Tooltip label=\"notifications\" hasArrow>\r\n          <Link\r\n            to=\"/notifications\"\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              padding: \"5px 10px\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Icon\r\n              name=\"bell\"\r\n              size=\"24px\"\r\n              color={colorMode === \"dark\" ? \"grey\" : \"blue.500\"}\r\n            />\r\n          </Link>\r\n        </Tooltip>\r\n        <Tooltip label=\"menu\" hasArrow>\r\n          <Box\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              padding: \"5px 10px\",\r\n              width: \"100%\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <Avatar\r\n              src={user === null ? \"\" : user.profileurl}\r\n              name={user === null ? \"\" : user.name}\r\n              size=\"sm\"\r\n            >\r\n              {isOnline && <AvatarBadge size=\"1.25em\" bg=\"green.500\" />}\r\n\r\n              {user.isOnline && <AvatarBadge size=\"1.25em\" bg=\"green.500\" />}\r\n            </Avatar>\r\n          </Box>\r\n        </Tooltip>\r\n      </Stack>\r\n      <Divider display={{ md: \"none\" }} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Collapse,\r\n  Divider,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Scale,\r\n  Skeleton,\r\n  Text,\r\n  Textarea,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport autosize from \"autosize\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport Axios from \"axios\";\r\nimport { BASE_API_URL } from \"../../config\";\r\n\r\nfunction AskModal({ isOpen, onOpen, onClose, setRecentQ }) {\r\n  const toast = useToast();\r\n  const [step, setStep] = useState(1);\r\n  const [show, setShow] = useState(false);\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [topics, setTopics] = React.useState([]);\r\n  const [selectedtopics, setSelected] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [submitting, setSubmitting] = React.useState(false);\r\n\r\n  const { user } = useAuth();\r\n\r\n  const handleToggle = () => setShow(!show);\r\n  const maxStep = 2;\r\n\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    let cf = ref.current;\r\n    autosize(ref.current);\r\n    return () => {\r\n      autosize.destroy(cf);\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    if (\r\n      event.target.checked &&\r\n      selectedtopics.indexOf(event.target.value === -1)\r\n    ) {\r\n      setSelected((prev) => [...prev, event.target.value]);\r\n    } else {\r\n      let s = selectedtopics;\r\n      s.splice(event.target.value, 1);\r\n      setSelected(s);\r\n    }\r\n  };\r\n\r\n  const fetchTopics = useCallback(() => {\r\n    setLoading(true);\r\n\r\n    Axios.get(BASE_API_URL + \"/topics\")\r\n      .then((response) => {\r\n        const data = response.data.data;\r\n        setLoading(false);\r\n        setTopics([...data]);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        } else {\r\n          toast({\r\n            title: error.message + \": cannot retrieve topics\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n  const submitTopic = () => {\r\n    if (title === \"\" || description === \"\") {\r\n      toast({\r\n        title: \"Topic cannot be empty\",\r\n        status: \"info\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n\r\n    Axios.post(BASE_API_URL + \"/topics\", {\r\n      title: title,\r\n      description: description,\r\n    })\r\n      .then((response) => {\r\n        setDescription(\"\");\r\n        setTitle(\"\");\r\n        setSubmitting(false);\r\n        setShow(false);\r\n        const data = response.data.data;\r\n        console.log(data);\r\n        if (data === undefined && response.data.error) {\r\n          toast({\r\n            title: response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n\r\n          return;\r\n        }\r\n        setTopics((prev) => [...data]);\r\n      })\r\n      .catch(function (error) {\r\n        setSubmitting(false);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        } else {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const submitQuestion = () => {\r\n    if (question === \"\" || selectedtopics === []) {\r\n      toast({\r\n        title: \"question cannot be empty\",\r\n        status: \"info\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n\r\n    Axios.post(BASE_API_URL + \"/questions\", {\r\n      question: question,\r\n      topics: selectedtopics,\r\n    })\r\n      .then((response) => {\r\n        setQuestion(\"\");\r\n        setSelected([]);\r\n        setSubmitting(false);\r\n\r\n        const data = response.data.question;\r\n        console.log(data);\r\n        if (data === undefined && response.data.error) {\r\n          toast({\r\n            title: response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n          return;\r\n        }\r\n        setStep(1);\r\n        onClose();\r\n        setRecentQ(data);\r\n      })\r\n      .catch(function (error) {\r\n        setSubmitting(false);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        } else {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const nextStep = () => {\r\n    if (question === \"\") {\r\n      toast({\r\n        title: \"question cannot be empty\",\r\n        status: \"info\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n    if (!question.toString().includes(\"?\")) {\r\n      toast({\r\n        title: \"question cannot be without '?\",\r\n        status: \"info\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n    if (step !== maxStep) {\r\n      setStep((prev) => prev + 1);\r\n      fetchTopics();\r\n    }\r\n  };\r\n  const prevStep = () => {\r\n    if (step !== 1) {\r\n      setStep((prev) => prev - 1);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Scale in={isOpen}>\r\n        {(styles) => (\r\n          <Modal\r\n            isCentered\r\n            scrollBehavior=\"inside\"\r\n            closeOnOverlayClick={false}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            size={{ base: \"full\", md: \"lg\" }}\r\n          >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n              <ModalHeader className=\"qfont\">Ask Question</ModalHeader>\r\n\r\n              <ModalCloseButton />\r\n              <Divider />\r\n              {step === 1 && (\r\n                <ModalBody pb={6}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      borderRadius: \"3px\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                      background: \"#ebf0ff\",\r\n                      marginBottom: \"16px\",\r\n                      padding: \"16px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ color: \"#2e69ff\", fontSize: \"15px\" }}>\r\n                      <div style={{ fontWeight: \"bold\" }} className=\"qfont\">\r\n                        Tips on getting good answers quickly\r\n                      </div>\r\n                      <ul style={{ listStyle: \"disc\", marginLeft: \"20px\" }}>\r\n                        <li>\r\n                          Make sure your question has not been asked already\r\n                        </li>\r\n                        <li>Keep your question short and to the point</li>\r\n                        <li>Double-check grammar and spelling</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <Box display=\"flex\" alignItems=\"center\" width=\"fit-content\">\r\n                    <Avatar\r\n                      src={user.profileurl}\r\n                      name={user.name}\r\n                      size=\"xs\"\r\n                      mr={1}\r\n                    />\r\n                    <Text fontSize=\"13px\" color=\"gray.500\">\r\n                      {user.name} asked:\r\n                    </Text>\r\n                  </Box>\r\n                  <Textarea\r\n                    transition=\"height none\"\r\n                    aria-label=\"empty textarea\"\r\n                    autoFocus\r\n                    placeholder='Start your question with \"What\", \"How\", \"Why\", etc.'\r\n                    autocomplete=\"chrome-off\"\r\n                    ref={ref}\r\n                    value={question}\r\n                    variant=\"flushed\"\r\n                    onChange={(e) => {\r\n                      setQuestion(e.target.value);\r\n                    }}\r\n                  />\r\n                </ModalBody>\r\n              )}\r\n              {step === 2 && (\r\n                <ModalBody pb={6}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      borderRadius: \"3px\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                      background: \"#ebf0ff\",\r\n                      marginBottom: \"16px\",\r\n                      padding: \"16px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ color: \"#2e69ff\" }}>\r\n                      <div style={{ fontWeight: \"bold\" }} className=\"qfont\">\r\n                        Tips on getting good answers quickly\r\n                      </div>\r\n                      <ul style={{ listStyle: \"disc\", marginLeft: \"20px\" }}>\r\n                        <li>Make sure your question has appropriate topics.</li>\r\n                        <li>Select all that apply </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <Box display=\"flex\" alignItems=\"center\" width=\"fit-content\">\r\n                    <Text fontSize=\"17px\" className=\"qfont\" mb={2}>\r\n                      Select Topics\r\n                    </Text>\r\n                  </Box>\r\n                  {loading && (\r\n                    <>\r\n                      {\" \"}\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                      <Skeleton width=\"160px\" height=\"20px\" mb={2} />\r\n                    </>\r\n                  )}\r\n                  {!loading && (\r\n                    <>\r\n                      {topics.map((topic) => {\r\n                        return (\r\n                          <Checkbox\r\n                            key={topic._id}\r\n                            isFullWidth\r\n                            value={topic._id}\r\n                            onChange={handleChange}\r\n                            size=\"lg\"\r\n                            children={topic.title}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}\r\n                  <>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      mt={2}\r\n                      onClick={handleToggle}\r\n                      className=\"qfont\"\r\n                    >\r\n                      {!show && \"Not found relevant topics?\"}\r\n                      {show && \"Fill the form below to add a new topic\"}\r\n                    </Button>\r\n                    <Collapse mt={4} isOpen={show}>\r\n                      <Text fontSize=\"small\" px={1} className=\"qfont\">\r\n                        Add a topic\r\n                      </Text>\r\n                      <Input\r\n                        mt={2}\r\n                        name=\"title\"\r\n                        variant=\"flushed\"\r\n                        value={title}\r\n                        placeholder=\"Title eg. Books(Fiction)\"\r\n                        onChange={(e) => {\r\n                          setTitle(e.target.value);\r\n                        }}\r\n                      />\r\n                      <Input\r\n                        mt={2}\r\n                        variant=\"flushed\"\r\n                        name=\"description\"\r\n                        value={description}\r\n                        placeholder=\"Write a one line description...\"\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                        }}\r\n                      />\r\n                    </Collapse>\r\n                  </>\r\n                </ModalBody>\r\n              )}\r\n\r\n              <ModalFooter>\r\n                {step === 2 && (\r\n                  <Button onClick={prevStep} mr={3}>\r\n                    Prev\r\n                  </Button>\r\n                )}\r\n                {step === 2 && !show && (\r\n                  <Button onClick={submitQuestion} variantColor=\"blue\">\r\n                    {!submitting && \"Submit Question\"}\r\n                    {submitting && (\r\n                      <CircularProgress isIndeterminate size=\"20px\" />\r\n                    )}\r\n                  </Button>\r\n                )}\r\n                {step === 2 && show && (\r\n                  <Button onClick={submitTopic} variantColor=\"blue\">\r\n                    {!submitting && \"Add Topic\"}\r\n                    {submitting && (\r\n                      <CircularProgress isIndeterminate size=\"20px\" />\r\n                    )}\r\n                  </Button>\r\n                )}\r\n                {step === 1 && (\r\n                  <Button isDisabled={question.length === 0} onClick={nextStep}>\r\n                    Next\r\n                  </Button>\r\n                )}\r\n              </ModalFooter>\r\n            </ModalContent>\r\n          </Modal>\r\n        )}\r\n      </Scale>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AskModal;\r\n","import ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"../../css/editor.css\";\r\n\r\nexport default function Editor({ value }) {\r\n  return (\r\n    <div>\r\n      <ReactQuill theme=\"\" value={value} readOnly />\r\n    </div>\r\n  );\r\n}\r\n","import io from \"socket.io-client\";\r\nimport jwt_decode from \"jwt-decode\";\r\nlet socket;\r\nif (localStorage.getItem(\"pharmaconnjwts\") !== null) {\r\n  let token = JSON.parse(localStorage.getItem(\"pharmaconnjwts\"));\r\n  let decoded = jwt_decode(token);\r\n  if (decoded !== undefined || decoded !== null) {\r\n    socket = io(\"https://pharmaconn.herokuapp.com\", {\r\n      query: {\r\n        id: decoded.id,\r\n      },\r\n    });\r\n  }\r\n}\r\nexport default socket;\r\n","import { Link } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  AvatarBadge,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  Text,\r\n  useColorMode,\r\n} from \"@chakra-ui/core\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport Editor from \"./Editor\";\r\nimport { MdComment, MdThumbDown, MdThumbUp } from \"react-icons/md\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport socket from \"../../socket\";\r\n\r\nfunction SingleAnswer({ answer }) {\r\n  const { user } = useAuth();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [ans, setAns] = useState(answer);\r\n  const [lkd, setLkd] = useState(\r\n    ans.upvotes.includes(user.id) ? \"#3182ce\" : \"grey\"\r\n  );\r\n  const [upvs, setUpvs] = useState([]);\r\n  const [dwvs, setDwvs] = useState([]);\r\n  const serializeVotes = (votes, setter) => {\r\n    let vbx = [];\r\n    if (votes !== undefined) {\r\n      votes.map((v) => vbx.push(v._id));\r\n      setter(vbx);\r\n    }\r\n  };\r\n\r\n  const upvoteClick = (a_id) => {\r\n    socket.emit(\"answerUpvote\", { answerId: a_id, userId: user.id });\r\n  };\r\n  const downvoteClick = (a_id) => {\r\n    socket.emit(\"answerDownvote\", { answerId: a_id, userId: user.id });\r\n  };\r\n  useEffect(() => {\r\n    serializeVotes(ans.upvotes, setUpvs);\r\n    serializeVotes(ans.downvotes, setDwvs);\r\n    if (socket !== undefined) {\r\n      socket.on(\"answerVoted\", (res) => {\r\n        if (res._id === ans._id) {\r\n          setAns(res);\r\n          serializeVotes(res.upvotes, setUpvs);\r\n          serializeVotes(res.downvotes, setDwvs);\r\n        }\r\n      });\r\n    }\r\n  }, [ans]);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <Box\r\n          p={4}\r\n          my={5}\r\n          boxShadow=\"md\"\r\n          borderRadius=\"lg\"\r\n          bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        >\r\n          <Box mb={1}>\r\n            <Text\r\n              fontSize=\"17px\"\r\n              fontWeight=\"bold\"\r\n              color=\"grey\"\r\n              className=\"qfont\"\r\n            >\r\n              <Link to={\"/q/\" + ans.question.slug}>\r\n                {ans.question.question}\r\n              </Link>\r\n            </Text>\r\n          </Box>\r\n          <Flex height=\"fit-content\" py={2} flexWrap=\"wrap\">\r\n            {ans.topics.map((t) => {\r\n              return (\r\n                <Button\r\n                  size=\"2xs\"\r\n                  fontWeight=\"300\"\r\n                  key={t._id}\r\n                  marginY=\"1px\"\r\n                  mx={1}\r\n                  padding=\"3px 6px\"\r\n                >\r\n                  <Link\r\n                    color=\"grey\"\r\n                    to={\"/t/\" + t.slug}\r\n                    style={{ fontSize: \"12px\", color: \"grey\" }}\r\n                    className=\"qfont\"\r\n                  >\r\n                    {t.title}\r\n                  </Link>\r\n                </Button>\r\n              );\r\n            })}\r\n          </Flex>\r\n          <Divider />\r\n          <Box py={2}>\r\n            <Flex alignItems=\"center\">\r\n              <Avatar\r\n                size=\"sm\"\r\n                src={ans.user.profileurl}\r\n                name={ans.user.name}\r\n                mr={2}\r\n              >\r\n                {\" \"}\r\n                {ans.user.isOnline && <AvatarBadge size=\"1em\" bg=\"green.500\" />}\r\n              </Avatar>\r\n              <Box>\r\n                <Text className=\"qfont\" fontSize=\"md\" fontWeight=\"bold\">\r\n                  {ans.user.name}\r\n                </Text>\r\n                <Text className=\"qfont\" fontSize=\"xs\" color=\"grey\">\r\n                  Answered <ReactTimeAgo date={new Date(ans.createdAt)} />\r\n                </Text>\r\n              </Box>\r\n            </Flex>\r\n          </Box>\r\n          <Editor value={ans.answer} />\r\n          <Flex alignItems=\"center\" mt={4} justifyContent=\"space-between\">\r\n            <Box>\r\n              <Button\r\n                onClick={() => {\r\n                  upvoteClick(ans._id);\r\n                }}\r\n                textTransform=\"capitalize\"\r\n                size=\"sm\"\r\n                mr={1}\r\n                color={upvs.includes(user.id) ? \"#3182c3\" : \"grey\"}\r\n              >\r\n                <Box marginRight=\"5px\" fontSize=\"18px\">\r\n                  <MdThumbUp />\r\n                </Box>\r\n                {\" \" + ans.upvotes.length}\r\n              </Button>\r\n\r\n              <Button\r\n                color={dwvs.includes(user.id) ? \"crimson\" : \"grey\"}\r\n                onClick={() => {\r\n                  downvoteClick(ans._id);\r\n                }}\r\n                textTransform=\"capitalize\"\r\n                size=\"sm\"\r\n                mr={1}\r\n              >\r\n                <Box marginRight=\"5px\" fontSize=\"18px\">\r\n                  <MdThumbDown />\r\n                </Box>\r\n                {ans.downvotes.length}\r\n              </Button>\r\n            </Box>\r\n            <Box>\r\n              <Button textTransform=\"capitalize\" size=\"sm\" color=\"grey\" mr={1}>\r\n                <Box marginRight=\"5px\" fontSize=\"18px\">\r\n                  <MdComment />\r\n                </Box>\r\n                {ans.comments.length}\r\n              </Button>\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default SingleAnswer;\r\n","import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Box,\r\n  Skeleton,\r\n  Button,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { BASE_API_URL } from \"../../config\";\r\nimport SingleAnswer from \"./SingleAnswer\";\r\n\r\nfunction Answers() {\r\n  const toast = useToast();\r\n  const [feed, setFeed] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getFeed = useCallback(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    Axios.get(BASE_API_URL + \"/feed\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setFeed(response.data.topicAnswers);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getFeed();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      {feed.map((fd) => {\r\n        return <SingleAnswer answer={fd} key={fd._id} />;\r\n      })}\r\n      {loading && (\r\n        <>\r\n          {\" \"}\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"300px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"300px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"300px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n        </>\r\n      )}\r\n      {error && (\r\n        <Alert\r\n          status=\"error\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            An error occured.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Please Retry\r\n            <br />\r\n            <Button onClick={getFeed}>Retry</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Answers;\r\n","import React from \"react\";\r\nimport \"../../css/loader.css\";\r\nfunction PageLoader() {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"loading qfont\">\r\n        <p>Loading</p>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageLoader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/notfound.css\";\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"not_found_error\">404</div>\r\n      <br />\r\n      <br />\r\n\r\n      <br />\r\n      <span className=\"not_found_info\">\r\n        Page not found\r\n        <br /> Our developers may be tired or sleeping at the moment.\r\n        <br />\r\n        Let's go<Link to=\"/\"> home</Link> and try from there.\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { Button } from \"@chakra-ui/core\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport React, { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\"; // ES6\r\nimport \"../../css/editor.css\";\r\n\r\nexport default function Editor({ handleSubmit }) {\r\n  const [editorHtml, setHtml] = useState(\"\");\r\n  const submitQuill = () => {\r\n    if (editorHtml === \"\") {\r\n      cogoToast.error(\"Answer cannot be empty\");\r\n      return;\r\n    }\r\n    handleSubmit(editorHtml);\r\n  };\r\n  return (\r\n    <div>\r\n      <ReactQuill\r\n        theme=\"snow\"\r\n        onChange={setHtml}\r\n        value={editorHtml}\r\n        modules={Editor.modules}\r\n        formats={Editor.formats}\r\n        placeholder=\"write your answer\"\r\n      />\r\n      <Button onClick={submitQuill} size=\"sm\" mt={2}>\r\n        Submit Answer\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n * Quill modules to attach to editor\r\n * See https://quilljs.com/docs/modules/ for complete options\r\n */\r\nEditor.modules = {\r\n  toolbar: [\r\n    [{ header: \"1\" }, { header: \"2\" }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n    [\"link\", \"image\"],\r\n    [\"clean\"],\r\n  ],\r\n  clipboard: {\r\n    // toggle to add extra line breaks when pasting HTML:\r\n    matchVisual: false,\r\n  },\r\n};\r\n/*\r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\r\nEditor.formats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n","import React, { useState, useEffect, useCallback, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n// import Editor from \"./Editor\";\r\nimport \"../../css/editor.css\";\r\nimport axios from \"axios\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport { BASE_API_URL } from \"../../config\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  Text,\r\n  useColorMode,\r\n} from \"@chakra-ui/core\";\r\nimport { MdClose, MdEdit, MdRssFeed } from \"react-icons/md\";\r\nimport Editor from \"./Editor\";\r\nimport socket from \"../../socket\";\r\n\r\nfunction SingleQuestion({ question, reload }) {\r\n  const { user } = useAuth();\r\n  const [q, setQ] = useState(question);\r\n  const [isAnswering, setAnswering] = useState(false);\r\n  const { colorMode } = useColorMode();\r\n\r\n  const followClick = (q_id) => {\r\n    socket.emit(\"questionFollow\", { questionId: q_id, userId: user.id });\r\n  };\r\n  const submitAnswer = (value) => {\r\n    cogoToast.loading(\"Submitting answer...\");\r\n    const data = {\r\n      qid: question._id,\r\n      answer: value,\r\n    };\r\n\r\n    axios\r\n      .post(BASE_API_URL + \"/answer/submit\", data)\r\n      .then((response) => {\r\n        cogoToast.success(response.data.success);\r\n        console.log(response);\r\n        reload();\r\n      })\r\n      .catch(function (error) {\r\n        if (error.response && error.response.data.error) {\r\n          cogoToast.error(error.response.data.error);\r\n        } else {\r\n          cogoToast.error(error.message);\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (socket !== undefined) {\r\n      socket.on(\"questionFollowed\", (res) => {\r\n        if (res._id === q._id) {\r\n          setQ(res);\r\n        }\r\n      });\r\n    }\r\n  }, [q]);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <Box\r\n          p={4}\r\n          mb={5}\r\n          boxShadow=\"md\"\r\n          borderRadius=\"lg\"\r\n          bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        >\r\n          <Box mb={1}>\r\n            <Text\r\n              fontSize=\"17px\"\r\n              fontWeight=\"bold\"\r\n              color=\"grey\"\r\n              className=\"qfont\"\r\n            >\r\n              <Link to={\"/q/\" + q.slug}>{q.question}</Link>\r\n            </Text>\r\n          </Box>\r\n          <Flex height=\"fit-content\" py={2} alignItems=\"center\" flexWrap=\"wrap\">\r\n            {q.topics.map((t) => {\r\n              return (\r\n                <Button\r\n                  size=\"2xs\"\r\n                  fontWeight=\"300\"\r\n                  key={t._id}\r\n                  mx={1}\r\n                  marginY=\"1px\"\r\n                  padding=\"3px 6px\"\r\n                >\r\n                  <Link\r\n                    color=\"grey\"\r\n                    to={\"/t/\" + t.slug}\r\n                    style={{ fontSize: \"12px\", color: \"grey\" }}\r\n                    className=\"qfont\"\r\n                  >\r\n                    {t.title}\r\n                  </Link>\r\n                </Button>\r\n              );\r\n            })}\r\n          </Flex>\r\n          <Divider />\r\n          <Box py={2}>\r\n            <Flex alignItems=\"center\" flexWrap=\"wrap\">\r\n              {q.answers.length === 0 && (\r\n                <Text className=\"qfont\" fontWeight=\"bold\" fontSize=\"xs\" mr={2}>\r\n                  No answers yet.\r\n                </Text>\r\n              )}\r\n              <Text\r\n                className=\"qfont\"\r\n                fontWeight=\"bold\"\r\n                fontSize=\"xs\"\r\n                color=\"grey\"\r\n              >\r\n                Posted <ReactTimeAgo date={new Date(q.createdAt)} />\r\n              </Text>\r\n            </Flex>\r\n          </Box>\r\n          <Flex alignItems=\"center\">\r\n            {isAnswering && (\r\n              <Button\r\n                onClick={() => setAnswering(false)}\r\n                textTransform=\"capitalize\"\r\n                size=\"sm\"\r\n                mr={3}\r\n                color=\"red.500\"\r\n              >\r\n                <MdClose fontSize=\"18px\" />\r\n                Cancel\r\n              </Button>\r\n            )}\r\n            {!isAnswering && (\r\n              <Button\r\n                onClick={() => setAnswering(true)}\r\n                textTransform=\"capitalize\"\r\n                size=\"sm\"\r\n                color=\"grey\"\r\n                mr={3}\r\n              >\r\n                <MdEdit color=\"#3182ce\" fontSize=\"18px\" />\r\n                Answer\r\n              </Button>\r\n            )}\r\n            <Button\r\n              size=\"sm\"\r\n              color={q.followers.includes(user.id) ? \"#3182ce\" : \"grey\"}\r\n              onClick={() => {\r\n                followClick(q._id);\r\n              }}\r\n            >\r\n              <MdRssFeed fontSize=\"18px\" />\r\n              Follow. {q.followers.length}\r\n            </Button>\r\n          </Flex>\r\n          <AnimatePresence>\r\n            {isAnswering && (\r\n              <motion.div\r\n                style={{ marginTop: \"20px\" }}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                exit={{ opacity: 0 }}\r\n              >\r\n                <Suspense\r\n                  fallback={\r\n                    <span className=\"text-center text-muted d-block\">\r\n                      loading editor...\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Editor handleSubmit={submitAnswer} />\r\n                </Suspense>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </Box>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default SingleQuestion;\r\n","import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Box,\r\n  Skeleton,\r\n  Button,\r\n  useToast,\r\n  Link,\r\n  useColorMode,\r\n  Text,\r\n} from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { BASE_API_URL } from \"../../config\";\r\nimport SingleQuestion from \"./SingleQuestion\";\r\n\r\nfunction Question() {\r\n  const toast = useToast();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [qs, setQs] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getQuestions = useCallback(() => {\r\n    setLoading(true);\r\n    setError(false);\r\n    Axios.get(BASE_API_URL + \"/questions/foryou\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setQs(response.data.questions);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n        if (error.response && error.response.data.error) {\r\n          toast({\r\n            title: error.response.data.error,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n        if (!error.response) {\r\n          toast({\r\n            title: error.message,\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        py={1}\r\n        px={4}\r\n        mb={2}\r\n        boxShadow=\"md\"\r\n        bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        color=\"grey\"\r\n        className=\"qfont\"\r\n      >\r\n        <Text fontSize=\"md\">Questions for you</Text>\r\n      </Box>\r\n      {qs.map((q) => {\r\n        return (\r\n          <SingleQuestion question={q} key={q._id} reload={getQuestions} />\r\n        );\r\n      })}\r\n      {qs.length === 0 && !error && !loading && (\r\n        <Alert\r\n          status=\"info\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            No questions at the moment.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Follow some <Link to=\"/topics\">Topics</Link>\r\n            <br />\r\n            and join some <Link to=\"/spaces\">Spaces</Link> to see questions\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n      {loading && (\r\n        <>\r\n          {\" \"}\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"100px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"100px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"100px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n        </>\r\n      )}\r\n      {error && (\r\n        <Alert\r\n          status=\"error\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            An error occured.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Please Retry\r\n            <br />\r\n            <Button onClick={getQuestions}>Retry</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Box, Button, Flex, Text, useColorMode } from \"@chakra-ui/core\";\r\nimport useQuestion from \"../../contexts/QuestionProvider\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\n\r\nfunction AskBar() {\r\n  const { recentQ, setRecentQ, onOpen } = useQuestion();\r\n  const { user } = useAuth();\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        width=\"100%\"\r\n        onClick={onOpen}\r\n        bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n        className=\"qfont\"\r\n        boxShadow=\"md\"\r\n        borderRadius=\"md\"\r\n        overflow=\"hidden\"\r\n        mb={3}\r\n        p={4}\r\n        cursor=\"pointer\"\r\n      >\r\n        <Flex width=\"100%\" alignItems=\"center\">\r\n          <Avatar src={user.profileurl} name={user.name} size=\"sm\" mr={1} />\r\n          <Box>\r\n            <Text fontSize=\"13px\" color=\"grey\" className=\"qfont\">\r\n              Hey {user.name}\r\n            </Text>\r\n            <Text\r\n              fontSize=\"17px\"\r\n              fontWeight=\"bold\"\r\n              color=\"grey\"\r\n              className=\"qfont\"\r\n            >\r\n              What's your question?\r\n            </Text>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n      {recentQ !== null && (\r\n        <Box\r\n          width=\"100%\"\r\n          bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n          className=\"qfont\"\r\n          boxShadow=\"md\"\r\n          borderRadius=\"sm\"\r\n          overflow=\"hidden\"\r\n          mb={3}\r\n          mt={-2}\r\n          p={4}\r\n          position=\"relative\"\r\n        >\r\n          <Button\r\n            textDecoration=\"underline\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              setRecentQ(null);\r\n            }}\r\n            position=\"absolute\"\r\n            right=\"10px\"\r\n            top=\"10px\"\r\n            fontSize=\"small\"\r\n            variant=\"ghost\"\r\n            color=\"grey\"\r\n          >\r\n            Hide\r\n          </Button>\r\n          <Text fontSize=\"13px\" color=\"grey\" className=\"qfont\">\r\n            You recently asked :\r\n          </Text>\r\n          <Text\r\n            fontSize=\"15px\"\r\n            fontWeight=\"bold\"\r\n            color=\"grey\"\r\n            className=\"qfont\"\r\n          >\r\n            <Link to={\"/q/\" + recentQ.slug}>{recentQ.question}</Link>\r\n          </Text>{\" \"}\r\n          <span style={{ fontSize: \"12px\" }}>\r\n            <ReactTimeAgo date={new Date(recentQ.createdAt)} />\r\n          </span>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AskBar;\r\n","import useSpace from \"../../contexts/SpaceProvider\";\r\n\r\nconst {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  ModalFooter,\r\n  CircularProgress,\r\n} = require(\"@chakra-ui/core\");\r\nconst { useRef, useState } = require(\"react\");\r\n\r\nexport default function AddSpceModal() {\r\n  const { isOpen, onClose, createSpace, creating, similarSpace } = useSpace();\r\n  const [spaceName, setName] = useState(\"\");\r\n  const [spaceDesc, setDesc] = useState(\"\");\r\n\r\n  const initialRef = useRef();\r\n\r\n  return (\r\n    <>\r\n      <Modal initialFocusRef={initialRef} isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Create a Space</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <FormControl>\r\n              <FormLabel>Space name</FormLabel>\r\n              <Input\r\n                value={spaceName}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                ref={initialRef}\r\n                placeholder=\"Enter name\"\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Description</FormLabel>\r\n              <Input\r\n                value={spaceDesc}\r\n                onChange={(e) => {\r\n                  setDesc(e.target.value);\r\n                }}\r\n                placeholder=\"Write a one line description\"\r\n              />\r\n            </FormControl>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              disabled={spaceName === \"\" || spaceDesc === \"\" || creating}\r\n              variantColor=\"blue\"\r\n              mr={3}\r\n              onClick={() => {\r\n                createSpace(spaceName, spaceDesc);\r\n              }}\r\n            >\r\n              {creating && <CircularProgress isIndeterminate size=\"20px\" />}\r\n              {!creating && \"Save\"}\r\n            </Button>\r\n            <Button onClick={onClose}>Cancel</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Box,\r\n  Skeleton,\r\n  Button,\r\n} from \"@chakra-ui/core\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport useSpace from \"../../contexts/SpaceProvider\";\r\nimport AddSpceModal from \"./AddSpaceModal\";\r\nimport SingleSpace from \"./SingleSpace\";\r\n\r\nfunction Spaces() {\r\n  const { onOpen, getSpaces, spaces, loading, error } = useSpace();\r\n\r\n  useEffect(() => {\r\n    getSpaces();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      {/* {feed.map((fd) => {\r\n        return <SingleAnswer answer={fd} key={fd._id} />;\r\n      })} */}\r\n      <AddSpceModal reload={getSpaces} />\r\n      {spaces.length === 0 && !error && !loading && (\r\n        <Alert\r\n          status=\"info\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            Oops! No spaces at the moment.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            It seems you are one of our early users\r\n            <br />\r\n            <Button onClick={onOpen}>Create a space to start sharing!</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n      {loading && (\r\n        <>\r\n          {\" \"}\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n          <Skeleton\r\n            width=\"100%\"\r\n            height=\"200px\"\r\n            my={3}\r\n            boxShadow=\"lg\"\r\n            borderRadius=\"md\"\r\n          />\r\n        </>\r\n      )}\r\n      {error && (\r\n        <Alert\r\n          status=\"error\"\r\n          variant=\"subtle\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          textAlign=\"center\"\r\n          height=\"200px\"\r\n        >\r\n          <AlertIcon size=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\" className=\"qfont\">\r\n            An error occured.\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\" className=\"qfont\">\r\n            Please Retry\r\n            <br />\r\n            <Button onClick={getSpaces}>Retry</Button>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Spaces;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  useColorMode,\r\n} from \"@chakra-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HiOutlineHome } from \"react-icons/hi\";\r\nimport { BsPlusSquareFill } from \"react-icons/bs\";\r\nimport { MdExplore } from \"react-icons/md\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport Navbar from \"./Navbar\";\r\nimport AskModal from \"../Question/AskModal\";\r\n\r\nimport Answers from \"../Answer/Answers\";\r\nimport PageLoader from \"./PageLoader\";\r\nimport useQuestion from \"../../contexts/QuestionProvider\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotFound from \"./NotFound\";\r\nimport Questions from \"../Question/Questions\";\r\nimport AskBar from \"../Question/AskBar\";\r\nimport Spaces from \"../Spaces/Spaces\";\r\nimport useSpace from \"../../contexts/SpaceProvider\";\r\n\r\nfunction Home() {\r\n  const { isAuth } = useAuth();\r\n  const { isOpen, onOpen, onClose, setRecentQ } = useQuestion();\r\n  const space = useSpace();\r\n  const [loading, setLoading] = useState(true);\r\n  const { colorMode } = useColorMode();\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2500);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <>\r\n          <PageLoader />\r\n        </>\r\n      )}\r\n      {!loading && !isAuth && <Redirect to=\"/\" />}\r\n      {!loading && isAuth && (\r\n        <Box overflow=\"hidden\">\r\n          <Navbar isOpen={isOpen} onOpen={onOpen} onClose={onClose} />\r\n\r\n          <Flex\r\n            maxWidth=\"1100px\"\r\n            margin=\"auto\"\r\n            minHeight=\"calc(100vh - 100px)\"\r\n            justifyContent=\"space-between\"\r\n            paddingX={[\"0\", \"0px\", \"60px\", \"60px\"]}\r\n            paddingY={[\"0\", \"0px\", \"40px\", \"40px\"]}\r\n          >\r\n            <Box\r\n              width=\"240px\"\r\n              height=\"fit-content\"\r\n              bg={colorMode === \"dark\" ? \"initial\" : \"white\"}\r\n              className=\"afont\"\r\n              boxShadow=\"md\"\r\n              borderRadius=\"md\"\r\n              mr={3}\r\n              display={{ base: \"none\", md: \"block\" }}\r\n            >\r\n              <List>\r\n                <>\r\n                  <NavLink\r\n                    className=\"link\"\r\n                    exact\r\n                    to=\"/\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      color: \"#8080809c\",\r\n                      padding: \"5px\",\r\n                      borderLeft: \"3px solid transparent\",\r\n                      height: \"40px\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    activeStyle={{\r\n                      borderLeft: \"3px solid #0e5291\",\r\n                      color: \"#0e5291\",\r\n                      background: \"#80808010\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      style={{\r\n                        padding: \"5px\",\r\n                        fontSize: \"24px\",\r\n                      }}\r\n                    >\r\n                      <HiOutlineHome />\r\n                    </span>\r\n                    Feed\r\n                  </NavLink>\r\n                </>\r\n                <>\r\n                  <NavLink\r\n                    className=\"link\"\r\n                    exact\r\n                    to=\"/spaces\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      color: \"#8080809c\",\r\n                      padding: \"5px\",\r\n                      borderLeft: \"3px solid transparent\",\r\n                      height: \"40px\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    activeStyle={{\r\n                      borderLeft: \"3px solid #0e5291\",\r\n                      color: \"#0e5291\",\r\n                      background: \"#80808010\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      style={{\r\n                        padding: \"5px\",\r\n                        fontSize: \"22px\",\r\n                      }}\r\n                    >\r\n                      <BsPlusSquareFill />\r\n                    </span>\r\n                    Discover Spaces\r\n                  </NavLink>\r\n                  <Box\r\n                    width=\"100%\"\r\n                    bg={\r\n                      colorMode === \"dark\"\r\n                        ? \"rgba(255,255,255,0.08)\"\r\n                        : \"#EDF2F7\"\r\n                    }\r\n                  >\r\n                    <Button\r\n                      color=\"grey\"\r\n                      fontSize=\"15px\"\r\n                      variant=\"ghost\"\r\n                      width=\"100%\"\r\n                      paddingLeft=\"10px\"\r\n                      boxShadow=\"none !important\"\r\n                      onClick={space.onOpen}\r\n                    >\r\n                      Create Space\r\n                    </Button>\r\n                  </Box>\r\n                </>\r\n                <>\r\n                  <NavLink\r\n                    className=\"link\"\r\n                    exact\r\n                    to=\"/topics\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      color: \"#8080809c\",\r\n                      padding: \"5px\",\r\n                      borderLeft: \"3px solid transparent\",\r\n                      height: \"40px\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    activeStyle={{\r\n                      borderLeft: \"3px solid #0e5291\",\r\n                      color: \"#0e5291\",\r\n                      background: \"#80808010\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      style={{\r\n                        padding: \"5px\",\r\n                        fontSize: \"23px\",\r\n                      }}\r\n                    >\r\n                      <MdExplore />\r\n                    </span>\r\n                    Explore Topics\r\n                  </NavLink>\r\n                </>\r\n              </List>\r\n            </Box>\r\n            <Box\r\n              width={{ base: \"100%\", md: \"80%\" }}\r\n              maxW=\"600px\"\r\n              margin=\"auto\"\r\n              padding=\"0 10px\"\r\n              minHeight=\"calc(100vh - 100px)\"\r\n            >\r\n              <AskModal\r\n                setRecentQ={setRecentQ}\r\n                isOpen={isOpen}\r\n                onOpen={onOpen}\r\n                onClose={onClose}\r\n              />\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <AskBar />\r\n                  <Answers />\r\n                </Route>\r\n                <Route exact path=\"/answer\">\r\n                  <Questions />\r\n                </Route>\r\n                <Route exact path=\"/spaces\">\r\n                  <Spaces />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                  <NotFound />\r\n                </Route>\r\n              </Switch>\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { Box, useColorMode } from \"@chakra-ui/core\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { QuestionProvider } from \"../../contexts/QuestionProvider\";\r\nimport { SpaceProvider } from \"../../contexts/SpaceProvider\";\r\nimport Landing from \"../Auth/Landing\";\r\nimport Home from \"./Home\";\r\nimport { useAuth } from \"../../contexts/AuthProvider\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Main = () => {\r\n  const { colorMode } = useColorMode();\r\n  const { isAuth } = useAuth();\r\n\r\n  return (\r\n    <Box bg={colorMode === \"dark\" ? \"initial\" : \"rgb(241, 242, 242)\"}>\r\n      <QuestionProvider>\r\n        <SpaceProvider>\r\n          <Switch>\r\n            <Route path=\"/\">\r\n              {!isAuth && <Landing />}\r\n              {isAuth && <Home />}\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              {!isAuth && <Landing />}\r\n              {isAuth && <Redirect to=\"/\" />}\r\n            </Route>\r\n          </Switch>\r\n        </SpaceProvider>\r\n      </QuestionProvider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n// rgb(40, 40, 41)\r\n//rgb(241, 242, 242)\r\n","import \"./css/fonts.css\";\nimport \"./App.css\";\nimport Main from \"./components/Layout/Main\";\nimport { useAuth } from \"./contexts/AuthProvider\";\nimport { useCallback, useEffect } from \"react\";\nimport socket from \"./socket\";\nimport {\n  ThemeProvider,\n  CSSReset,\n  theme,\n  ColorModeProvider,\n  useColorMode,\n  Box,\n  IconButton,\n} from \"@chakra-ui/core\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import \"./css/bootstrap.css\";\n\nexport function ThemeToggler() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <Box\n      textAlign=\"right\"\n      width=\"5%\"\n      position=\"fixed\"\n      bottom=\"20px\"\n      right=\"25px\"\n      zIndex=\"99\"\n    >\n      <IconButton\n        icon={colorMode === \"light\" ? \"moon\" : \"sun\"}\n        onClick={toggleColorMode}\n        variant=\"ghost\"\n      />\n    </Box>\n  );\n}\n\nfunction App() {\n  const { setOnline } = useAuth();\n  const setUserOffline = useCallback(() => {\n    setOnline(false);\n  }, [setOnline]);\n\n  useEffect(() => {\n    if (socket !== undefined) {\n      socket.on(\"userOnline\", (res) => {\n        setOnline((prev) => (prev = res.isOnline));\n      });\n\n      socket.on(\"connect_error\", () => {\n        if (socket.disconnected) {\n          setUserOffline();\n        }\n      });\n    }\n    return () => {\n      if (socket !== undefined && socket.connected) {\n      }\n      console.log(\"connected\");\n      return;\n    };\n  }, []);\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <ColorModeProvider>\n          <CSSReset />\n          <ThemeToggler />\n          <Main />\n        </ColorModeProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AuthProvider from \"./contexts/AuthProvider\";\nimport TimeAgo from \"javascript-time-ago\";\n\nimport en from \"javascript-time-ago/locale/en\";\nTimeAgo.addDefaultLocale(en);\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}